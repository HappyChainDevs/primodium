{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BareComponent__NotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnableWritable__NotWriter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotTransitiveOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "authorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntities",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum EMotherlodeSize",
              "name": "size",
              "type": "uint8"
            },
            {
              "internalType": "enum EMotherlodeType",
              "name": "motherlodeType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "cooldownBlocks",
              "type": "uint256"
            }
          ],
          "internalType": "struct Motherlode",
          "name": "motherlode",
          "type": "tuple"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getRawValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchema",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "enum LibTypes.SchemaValue[]",
          "name": "values",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getValue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum EMotherlodeSize",
              "name": "size",
              "type": "uint8"
            },
            {
              "internalType": "enum EMotherlodeType",
              "name": "motherlodeType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "cooldownBlocks",
              "type": "uint256"
            }
          ],
          "internalType": "struct Motherlode",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "indexer",
          "type": "address"
        }
      ],
      "name": "registerIndexer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_world",
          "type": "address"
        }
      ],
      "name": "registerWorld",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "enum EMotherlodeSize",
              "name": "size",
              "type": "uint8"
            },
            {
              "internalType": "enum EMotherlodeType",
              "name": "motherlodeType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "cooldownBlocks",
              "type": "uint256"
            }
          ],
          "internalType": "struct Motherlode",
          "name": "motherlode",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "unauthorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "writeAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200328b3803806200328b833981016040819052620000349162000262565b807f6f733d142822cfa9cdcf200e380f3eedc04430f17210ad049967eb996d43a8cc8181620000633362000127565b60028190556001600160a01b038216156200008357620000838262000190565b5050604051620000939062000246565b604051809103906000f080158015620000b0573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055604051620000df9062000254565b604051809103906000f080158015620000fc573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b03929092169190911790555062000294915050565b6000805160206200326b83398151915280546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6000805160206200326b833981519152546001600160a01b03163314620001ca57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200022a57600080fd5b505af11580156200023f573d6000803e3d6000fd5b5050505050565b610808806200221483390190565b61084f8062002a1c83390190565b6000602082840312156200027557600080fd5b81516001600160a01b03811681146200028d57600080fd5b9392505050565b611f7080620002a46000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80638da5cb5b116100cd578063bf4fe57e11610081578063d3e0f83411610066578063d3e0f834146102eb578063e74526e5146102fe578063f2fde38b1461031157600080fd5b8063bf4fe57e146102c5578063cccf7a8e146102d857600080fd5b8063af640d0f116100b2578063af640d0f1461027b578063b361be4614610292578063b8bc073d146102a557600080fd5b80638da5cb5b146102605780639d2c76b41461026857600080fd5b80634fef6a381161012457806375c0669c1161010957806375c0669c14610217578063861eb9051461022a5780638b2829471461024d57600080fd5b80634fef6a38146101ee5780636b122fe01461020157600080fd5b80630ff4c9161461015657806330b67baa1461017f57806331b933b9146101c45780634cc82215146101d9575b600080fd5b610169610164366004611638565b610324565b60405161017691906116a4565b60405180910390f35b60005461019f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610176565b6101cc6103e3565b60405161017691906116d8565b6101ec6101e7366004611638565b61049e565b005b6101ec6101fc36600461171c565b6104e9565b6102096105c7565b6040516101769291906117bd565b6101ec61022536600461171c565b6107e7565b61023d61023836600461171c565b61089d565b6040519015158152602001610176565b6101ec61025b366004611992565b610928565b61019f610975565b6101ec61027636600461171c565b6109b5565b61028460025481565b604051908152602001610176565b6101cc6102a03660046119d9565b610ade565b6102b86102b3366004611638565b610b9b565b6040516101769190611a16565b6101ec6102d336600461171c565b610c3d565b61023d6102e6366004611638565b610d18565b6101cc6102f9366004611a41565b610dac565b6101ec61030c366004611a5d565b610dd6565b6101ec61031f36600461171c565b610e51565b6103496040805160608101909152806000815260200160008152602001600081525090565b600080600061035785610b9b565b80602001905181019061036a9190611aa3565b92509250925060405180606001604052808463ffffffff16600281111561039357610393611651565b60028111156103a4576103a4611651565b81526020018363ffffffff1660038111156103c1576103c1611651565b60038111156103d2576103d2611651565b815260200191909152949350505050565b600354604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609273ffffffffffffffffffffffffffffffffffffffff169163410d59cc9160048083019260009291908290030181865afa158015610453573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104999190810190611adf565b905090565b6104a73361089d565b6104dd576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e681610eca565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610559576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600380825260808201909252606091829190816020015b60608152602001906001900390816105e257505060408051600380825260808201909252919350602082016060803683370190505090506040518060400160405280600481526020017f73697a65000000000000000000000000000000000000000000000000000000008152508260008151811061066257610662611b85565b602002602001018190525060088160008151811061068257610682611b85565b6020026020010190602181111561069b5761069b611651565b908160218111156106ae576106ae611651565b815250506040518060400160405280600e81526020017f6d6f746865726c6f646554797065000000000000000000000000000000000000815250826001815181106106fb576106fb611b85565b602002602001018190525060088160018151811061071b5761071b611b85565b6020026020010190602181111561073457610734611651565b9081602181111561074757610747611651565b815250506040518060400160405280600e81526020017f636f6f6c646f776e426c6f636b730000000000000000000000000000000000008152508260028151811061079457610794611b85565b6020026020010181905250600d816002815181106107b4576107b4611b85565b602002602001019060218111156107cd576107cd611651565b908160218111156107e0576107e0611651565b9052509091565b6107f03361089d565b610826576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061092257506108f3610975565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6109313361089d565b610967576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109718282611189565b5050565b60006104997f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610a25576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610ac357600080fd5b505af1158015610ad7573d6000803e3d6000fd5b5050505050565b60048054825160208401206040517f796c5e940000000000000000000000000000000000000000000000000000000081529283015260609173ffffffffffffffffffffffffffffffffffffffff9091169063796c5e9490602401600060405180830381865afa158015610b55573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109229190810190611adf565b6000818152600160205260409020805460609190610bb890611bb4565b80601f0160208091040260200160405190810160405280929190818152602001828054610be490611bb4565b8015610c315780601f10610c0657610100808354040283529160200191610c31565b820191906000526020600020905b815481529060010190602001808311610c1457829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610cad576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6003546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610d88573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190611c01565b606061092282604051602001610dc29190611c41565b604051602081830303815290604052610ade565b61097182610de76020840184611c7f565b6002811115610df857610df8611651565b610e086040850160208601611c9a565b6003811115610e1957610e19611651565b6040805163ffffffff938416602082015292909116828201528401356060820152608001604051602081830303815290604052610928565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ec1576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e681611420565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff909216916385edea1391610f0791611cb5565b60405190819003812060e083901b7fffffffff000000000000000000000000000000000000000000000000000000001682526004820152602401602060405180830381865afa158015610f5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f829190611d49565b600003610f8c5750565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff90921691636526db7a91610fc991611cb5565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101849052604401600060405180830381600087803b15801561102457600080fd5b505af1158015611038573d6000803e3d6000fd5b50506003546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169250634cc822159150602401600060405180830381600087803b1580156110a857600080fd5b505af11580156110bc573d6000803e3d6000fd5b505050506110c981611429565b60005b60055481101561097157600581815481106110e9576110e9611b85565b6000918252602090912001546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b15801561115e57600080fd5b505af1158015611172573d6000803e3d6000fd5b50505050808061118190611d62565b9150506110cc565b6003546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b1580156111f557600080fd5b505af1158015611209573d6000803e3d6000fd5b505060045460008581526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff9092169350636526db7a925061124a91611cb5565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101859052604401600060405180830381600087803b1580156112a557600080fd5b505af11580156112b9573d6000803e3d6000fd5b505060048054845160208601206040517f771602f7000000000000000000000000000000000000000000000000000000008152928301526024820186905273ffffffffffffffffffffffffffffffffffffffff16925063771602f79150604401600060405180830381600087803b15801561133357600080fd5b505af1158015611347573d6000803e3d6000fd5b505050506113558282611497565b60005b60055481101561141b576005818154811061137557611375611b85565b6000918252602090912001546040517f0216b83800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630216b838906113d69086908690600401611dc1565b600060405180830381600087803b1580156113f057600080fd5b505af1158015611404573d6000803e3d6000fd5b50505050808061141390611d62565b915050611358565b505050565b6104e68161153e565b6000818152600160205260408120611440916115ea565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610aa9565b60008281526001602052604090206114af8282611e20565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906115089085908590600401611dc1565b600060405180830381600087803b15801561152257600080fd5b505af1158015611536573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b5080546115f690611bb4565b6000825580601f10611606575050565b601f0160209004906000526020600020908101906104e691905b808211156116345760008155600101611620565b5090565b60006020828403121561164a57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061169057611690611651565b9052565b6004811061169057611690611651565b60006060820190506116b7828451611680565b60208301516116c96020840182611694565b50604092830151919092015290565b6020808252825182820181905260009190848201906040850190845b81811015611710578351835292840192918401916001016116f4565b50909695505050505050565b60006020828403121561172e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461175257600080fd5b9392505050565b6000815180845260005b8181101561177f57602081850181015186830182015201611763565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611832577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552611820868351611759565b955093820193908201906001016117e6565b50508584038187015286518085528782019482019350915060005b828110156118795784516022811061186757611867611651565b8452938101939281019260010161184d565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156118fc576118fc611886565b604052919050565b600082601f83011261191557600080fd5b813567ffffffffffffffff81111561192f5761192f611886565b61196060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016118b5565b81815284602083860101111561197557600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156119a557600080fd5b82359150602083013567ffffffffffffffff8111156119c357600080fd5b6119cf85828601611904565b9150509250929050565b6000602082840312156119eb57600080fd5b813567ffffffffffffffff811115611a0257600080fd5b611a0e84828501611904565b949350505050565b6020815260006117526020830184611759565b600060608284031215611a3b57600080fd5b50919050565b600060608284031215611a5357600080fd5b6117528383611a29565b60008060808385031215611a7057600080fd5b82359150611a818460208501611a29565b90509250929050565b805163ffffffff81168114611a9e57600080fd5b919050565b600080600060608486031215611ab857600080fd5b611ac184611a8a565b9250611acf60208501611a8a565b9150604084015190509250925092565b60006020808385031215611af257600080fd5b825167ffffffffffffffff80821115611b0a57600080fd5b818501915085601f830112611b1e57600080fd5b815181811115611b3057611b30611886565b8060051b9150611b418483016118b5565b8181529183018401918481019088841115611b5b57600080fd5b938501935b83851015611b7957845182529385019390850190611b60565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611bc857607f821691505b602082108103611a3b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060208284031215611c1357600080fd5b8151801515811461175257600080fd5b803560038110611a9e57600080fd5b803560048110611a9e57600080fd5b60608101611c5782611c5285611c23565b611680565b611c6360208401611c32565b611c706020840182611694565b50604092830135919092015290565b600060208284031215611c9157600080fd5b61175282611c23565b600060208284031215611cac57600080fd5b61175282611c32565b6000808354611cc381611bb4565b60018281168015611cdb5760018114611d0e57611d3d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450611d3d565b8760005260208060002060005b85811015611d345781548a820152908401908201611d1b565b50505082870194505b50929695505050505050565b600060208284031215611d5b57600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dba577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b828152604060208201526000611a0e6040830184611759565b601f82111561141b57600081815260208120601f850160051c81016020861015611e015750805b601f850160051c820191505b8181101561153657828155600101611e0d565b815167ffffffffffffffff811115611e3a57611e3a611886565b611e4e81611e488454611bb4565b84611dda565b602080601f831160018114611ea15760008415611e6b5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611536565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611eee57888601518255948401946001909101908401611ecf565b5085821015611f2a57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212208c0b84eff0a3748ccb2dae7d313a8db3ed25bbe0a86d0399d03ad114a897bd5a64736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610760806100a86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e7cb6e11161005b5780638e7cb6e114610100578063949d225d1461012a578063cccf7a8e1461013b578063f2fde38b1461015e57600080fd5b80631003e2d21461008d578063410d59cc146100a25780634cc82215146100c05780638da5cb5b146100d3575b600080fd5b6100a061009b3660046105f2565b610171565b005b6100aa610233565b6040516100b7919061060b565b60405180910390f35b6100a06100ce3660046105f2565b61028b565b6100db6103ef565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b7565b61011361010e3660046105f2565b610434565b6040805192151583526020830191909152016100b7565b6000546040519081526020016100b7565b61014e6101493660046105f2565b610467565b60405190151581526020016100b7565b6100a061016c36600461064f565b6104ca565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101e1576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101ea81610467565b61023057600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190555b50565b6060600080548060200260200160405190810160405280929190818152602001828054801561028157602002820191906000526020600020905b81548152602001906001019080831161026d575b5050505050905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146102fb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61030481610467565b1561023057600080546103199060019061068c565b81548110610329576103296106cc565b9060005260206000200154600060016000848152602001908152602001600020548154811061035a5761035a6106cc565b60009182526020808320909101929092558281526001918290526040812054815490929190819084908110610391576103916106cc565b9060005260206000200154815260200190815260200160002081905550600160008281526020019081526020016000206000905560008054806103d6576103d66106fb565b6001900381819060005260206000200160009055905550565b600061042f7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60008061044083610467565b61044f57506000928392509050565b50506000908152600160208190526040909120549091565b60008054810361047957506000919050565b60008281526001602052604081205490036104b55781600080815481106104a2576104a26106cc565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461053a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610230817f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610230928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006020828403121561060457600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561064357835183529284019291840191600101610627565b50909695505050505050565b60006020828403121561066157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461068557600080fd5b9392505050565b818103818111156106c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220bfd042d84a524c42a64cd44b304d07bf4ce6b7ea41aaf01f67737f7991b4afae64736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6107a7806100a86000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806385edea131161005b57806385edea13146100d35780638da5cb5b14610101578063a0265ff81461012e578063f2fde38b1461015157600080fd5b80636526db7a14610082578063771602f714610097578063796c5e94146100aa575b600080fd5b61009561009036600461061d565b610164565b005b6100956100a536600461061d565b610301565b6100bd6100b836600461063f565b6103b5565b6040516100ca9190610658565b60405180910390f35b6100f36100e136600461063f565b60009081526020819052604090205490565b6040519081526020016100ca565b610109610415565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ca565b61014161013c36600461061d565b61045a565b60405190151581526020016100ca565b61009561015f36600461069c565b6104ed565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101d4576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101de828261045a565b156102fd57600082815260208190526040902080546101ff906001906106d9565b8154811061020f5761020f610713565b6000918252602080832090910154848352828252604080842060018452818520868652909352909220548154811061024957610249610713565b60009182526020808320909101929092558381526001825260408082208483528084528183205486845283855291832085845293819052835491939092918490811061029757610297610713565b600091825260208083209091015483528281019390935260409182018120939093558483526001825280832084845282528083208390558483529082905290208054806102e6576102e6610742565b600190038181906000526020600020016000905590555b5050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610371576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61037b828261045a565b6102fd5760009182526020828152604080842080546001808552838720868852855292862081905585845291820181558452922090910155565b6000818152602081815260409182902080548351818402810184019094528084526060939283018282801561040957602002820191906000526020600020905b8154815260200190600101908083116103f5575b50505050509050919050565b60006104557f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6000828152602081905260408120548103610477575060006104e7565b600083815260016020908152604080832085845290915281205490036104c957600083815260208190526040812080548492906104b6576104b6610713565b90600052602060002001541490506104e7565b50600082815260016020908152604080832084845290915290205415155b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461055d576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61056681610569565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610566928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000806040838503121561063057600080fd5b50508035926020909101359150565b60006020828403121561065157600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561069057835183529284019291840191600101610674565b50909695505050505050565b6000602082840312156106ae57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106d257600080fd5b9392505050565b818103818111156104e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122031783f3bae06bb93034603764bae05586b28475349f9ab0c55255b41d8bcc3b464736f6c634300081300338a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460",
    "sourceMap": "235:1220:105:-:0;;;281:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;318:5;198:33;318:5;198:33;399:21:5;409:10;399:9;:21::i;:::-;1121:2:0;:8;;;-1:-1:-1;;;;;1139:20:0;;;1135:47;;1161:21;1175:6;1161:13;:21::i;:::-;1074:113;;1107:9:1::1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1096:8:1::1;:20:::0;;-1:-1:-1;;;;;;1096:20:1::1;-1:-1:-1::0;;;;;1096:20:1;;;::::1;::::0;;;::::1;::::0;;1140:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1122:15:1::1;:30:::0;;-1:-1:-1;;;;;;1122:30:1::1;-1:-1:-1::0;;;;;1122:30:1;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;235:1220:105;;-1:-1:-1;;235:1220:105;1203:207:35;-1:-1:-1;;;;;;;;;;;1359:7:35;;1338:38;;-1:-1:-1;;;;;1338:38:35;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:35;-1:-1:-1;;;;;1386:17:35;;;;;;;;;;1203:207::o;1302:137:0:-;-1:-1:-1;;;;;;;;;;;722:29:35;-1:-1:-1;;;;;722:29:35;422:10;:22;418:54;;453:19;;-1:-1:-1;;;453:19:35;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;-1:-1:-1;;;;;;1364:14:0::1;-1:-1:-1::0;;;;;1364:14:0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;-1:-1:-1;;;1384:50:0;;1424:4:::1;1384:50;::::0;::::1;483:51:239::0;550:18;;;543:34;;;;1384:31:0::1;::::0;456:18:239;;1384:50:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;235:1220:105:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:290:239:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:239;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:239:o;309:274::-;235:1220:105;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101515760003560e01c80638da5cb5b116100cd578063bf4fe57e11610081578063d3e0f83411610066578063d3e0f834146102eb578063e74526e5146102fe578063f2fde38b1461031157600080fd5b8063bf4fe57e146102c5578063cccf7a8e146102d857600080fd5b8063af640d0f116100b2578063af640d0f1461027b578063b361be4614610292578063b8bc073d146102a557600080fd5b80638da5cb5b146102605780639d2c76b41461026857600080fd5b80634fef6a381161012457806375c0669c1161010957806375c0669c14610217578063861eb9051461022a5780638b2829471461024d57600080fd5b80634fef6a38146101ee5780636b122fe01461020157600080fd5b80630ff4c9161461015657806330b67baa1461017f57806331b933b9146101c45780634cc82215146101d9575b600080fd5b610169610164366004611638565b610324565b60405161017691906116a4565b60405180910390f35b60005461019f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610176565b6101cc6103e3565b60405161017691906116d8565b6101ec6101e7366004611638565b61049e565b005b6101ec6101fc36600461171c565b6104e9565b6102096105c7565b6040516101769291906117bd565b6101ec61022536600461171c565b6107e7565b61023d61023836600461171c565b61089d565b6040519015158152602001610176565b6101ec61025b366004611992565b610928565b61019f610975565b6101ec61027636600461171c565b6109b5565b61028460025481565b604051908152602001610176565b6101cc6102a03660046119d9565b610ade565b6102b86102b3366004611638565b610b9b565b6040516101769190611a16565b6101ec6102d336600461171c565b610c3d565b61023d6102e6366004611638565b610d18565b6101cc6102f9366004611a41565b610dac565b6101ec61030c366004611a5d565b610dd6565b6101ec61031f36600461171c565b610e51565b6103496040805160608101909152806000815260200160008152602001600081525090565b600080600061035785610b9b565b80602001905181019061036a9190611aa3565b92509250925060405180606001604052808463ffffffff16600281111561039357610393611651565b60028111156103a4576103a4611651565b81526020018363ffffffff1660038111156103c1576103c1611651565b60038111156103d2576103d2611651565b815260200191909152949350505050565b600354604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609273ffffffffffffffffffffffffffffffffffffffff169163410d59cc9160048083019260009291908290030181865afa158015610453573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104999190810190611adf565b905090565b6104a73361089d565b6104dd576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e681610eca565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610559576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600380825260808201909252606091829190816020015b60608152602001906001900390816105e257505060408051600380825260808201909252919350602082016060803683370190505090506040518060400160405280600481526020017f73697a65000000000000000000000000000000000000000000000000000000008152508260008151811061066257610662611b85565b602002602001018190525060088160008151811061068257610682611b85565b6020026020010190602181111561069b5761069b611651565b908160218111156106ae576106ae611651565b815250506040518060400160405280600e81526020017f6d6f746865726c6f646554797065000000000000000000000000000000000000815250826001815181106106fb576106fb611b85565b602002602001018190525060088160018151811061071b5761071b611b85565b6020026020010190602181111561073457610734611651565b9081602181111561074757610747611651565b815250506040518060400160405280600e81526020017f636f6f6c646f776e426c6f636b730000000000000000000000000000000000008152508260028151811061079457610794611b85565b6020026020010181905250600d816002815181106107b4576107b4611b85565b602002602001019060218111156107cd576107cd611651565b908160218111156107e0576107e0611651565b9052509091565b6107f03361089d565b610826576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061092257506108f3610975565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6109313361089d565b610967576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109718282611189565b5050565b60006104997f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610a25576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610ac357600080fd5b505af1158015610ad7573d6000803e3d6000fd5b5050505050565b60048054825160208401206040517f796c5e940000000000000000000000000000000000000000000000000000000081529283015260609173ffffffffffffffffffffffffffffffffffffffff9091169063796c5e9490602401600060405180830381865afa158015610b55573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109229190810190611adf565b6000818152600160205260409020805460609190610bb890611bb4565b80601f0160208091040260200160405190810160405280929190818152602001828054610be490611bb4565b8015610c315780601f10610c0657610100808354040283529160200191610c31565b820191906000526020600020905b815481529060010190602001808311610c1457829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610cad576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6003546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610d88573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190611c01565b606061092282604051602001610dc29190611c41565b604051602081830303815290604052610ade565b61097182610de76020840184611c7f565b6002811115610df857610df8611651565b610e086040850160208601611c9a565b6003811115610e1957610e19611651565b6040805163ffffffff938416602082015292909116828201528401356060820152608001604051602081830303815290604052610928565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ec1576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e681611420565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff909216916385edea1391610f0791611cb5565b60405190819003812060e083901b7fffffffff000000000000000000000000000000000000000000000000000000001682526004820152602401602060405180830381865afa158015610f5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f829190611d49565b600003610f8c5750565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff90921691636526db7a91610fc991611cb5565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101849052604401600060405180830381600087803b15801561102457600080fd5b505af1158015611038573d6000803e3d6000fd5b50506003546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169250634cc822159150602401600060405180830381600087803b1580156110a857600080fd5b505af11580156110bc573d6000803e3d6000fd5b505050506110c981611429565b60005b60055481101561097157600581815481106110e9576110e9611b85565b6000918252602090912001546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b15801561115e57600080fd5b505af1158015611172573d6000803e3d6000fd5b50505050808061118190611d62565b9150506110cc565b6003546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b1580156111f557600080fd5b505af1158015611209573d6000803e3d6000fd5b505060045460008581526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff9092169350636526db7a925061124a91611cb5565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101859052604401600060405180830381600087803b1580156112a557600080fd5b505af11580156112b9573d6000803e3d6000fd5b505060048054845160208601206040517f771602f7000000000000000000000000000000000000000000000000000000008152928301526024820186905273ffffffffffffffffffffffffffffffffffffffff16925063771602f79150604401600060405180830381600087803b15801561133357600080fd5b505af1158015611347573d6000803e3d6000fd5b505050506113558282611497565b60005b60055481101561141b576005818154811061137557611375611b85565b6000918252602090912001546040517f0216b83800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630216b838906113d69086908690600401611dc1565b600060405180830381600087803b1580156113f057600080fd5b505af1158015611404573d6000803e3d6000fd5b50505050808061141390611d62565b915050611358565b505050565b6104e68161153e565b6000818152600160205260408120611440916115ea565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610aa9565b60008281526001602052604090206114af8282611e20565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906115089085908590600401611dc1565b600060405180830381600087803b15801561152257600080fd5b505af1158015611536573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b5080546115f690611bb4565b6000825580601f10611606575050565b601f0160209004906000526020600020908101906104e691905b808211156116345760008155600101611620565b5090565b60006020828403121561164a57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061169057611690611651565b9052565b6004811061169057611690611651565b60006060820190506116b7828451611680565b60208301516116c96020840182611694565b50604092830151919092015290565b6020808252825182820181905260009190848201906040850190845b81811015611710578351835292840192918401916001016116f4565b50909695505050505050565b60006020828403121561172e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461175257600080fd5b9392505050565b6000815180845260005b8181101561177f57602081850181015186830182015201611763565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611832577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552611820868351611759565b955093820193908201906001016117e6565b50508584038187015286518085528782019482019350915060005b828110156118795784516022811061186757611867611651565b8452938101939281019260010161184d565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156118fc576118fc611886565b604052919050565b600082601f83011261191557600080fd5b813567ffffffffffffffff81111561192f5761192f611886565b61196060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016118b5565b81815284602083860101111561197557600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156119a557600080fd5b82359150602083013567ffffffffffffffff8111156119c357600080fd5b6119cf85828601611904565b9150509250929050565b6000602082840312156119eb57600080fd5b813567ffffffffffffffff811115611a0257600080fd5b611a0e84828501611904565b949350505050565b6020815260006117526020830184611759565b600060608284031215611a3b57600080fd5b50919050565b600060608284031215611a5357600080fd5b6117528383611a29565b60008060808385031215611a7057600080fd5b82359150611a818460208501611a29565b90509250929050565b805163ffffffff81168114611a9e57600080fd5b919050565b600080600060608486031215611ab857600080fd5b611ac184611a8a565b9250611acf60208501611a8a565b9150604084015190509250925092565b60006020808385031215611af257600080fd5b825167ffffffffffffffff80821115611b0a57600080fd5b818501915085601f830112611b1e57600080fd5b815181811115611b3057611b30611886565b8060051b9150611b418483016118b5565b8181529183018401918481019088841115611b5b57600080fd5b938501935b83851015611b7957845182529385019390850190611b60565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611bc857607f821691505b602082108103611a3b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060208284031215611c1357600080fd5b8151801515811461175257600080fd5b803560038110611a9e57600080fd5b803560048110611a9e57600080fd5b60608101611c5782611c5285611c23565b611680565b611c6360208401611c32565b611c706020840182611694565b50604092830135919092015290565b600060208284031215611c9157600080fd5b61175282611c23565b600060208284031215611cac57600080fd5b61175282611c32565b6000808354611cc381611bb4565b60018281168015611cdb5760018114611d0e57611d3d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450611d3d565b8760005260208060002060005b85811015611d345781548a820152908401908201611d1b565b50505082870194505b50929695505050505050565b600060208284031215611d5b57600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dba577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b828152604060208201526000611a0e6040830184611759565b601f82111561141b57600081815260208120601f850160051c81016020861015611e015750805b601f850160051c820191505b8181101561153657828155600101611e0d565b815167ffffffffffffffff811115611e3a57611e3a611886565b611e4e81611e488454611bb4565b84611dda565b602080601f831160018114611ea15760008415611e6b5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611536565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611eee57888601518255948401946001909101908401611ecf565b5085821015611f2a57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212208c0b84eff0a3748ccb2dae7d313a8db3ed25bbe0a86d0399d03ad114a897bd5a64736f6c63430008130033",
    "sourceMap": "235:1220:105:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;951:327;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;870:20:0;;;;;;;;;;;;1330:42:239;1318:55;;;1300:74;;1288:2;1273:18;870:20:0;1154:226:239;1400:116:1;;;:::i;:::-;;;;;;;:::i;2088:85:0:-;;;;;;:::i;:::-;;:::i;:::-;;955:144:6;;;;;;:::i;:::-;;:::i;335:411:105:-;;;:::i;:::-;;;;;;;;:::i;2104:128:1:-;;;;;;:::i;:::-;;:::i;440:168:6:-;;;;;;:::i;:::-;;:::i;:::-;;;4481:14:239;;4474:22;4456:41;;4444:2;4429:18;440:168:6;4316:187:239;1736:106:0;;;;;;:::i;:::-;;:::i;378:87:34:-;;;:::i;1302:137:0:-;;;;;;:::i;:::-;;:::i;1052:17::-;;;;;;;;;6169:25:239;;;6157:2;6142:18;1052:17:0;6023:177:239;1698:228:1;;;;;;:::i;:::-;;:::i;2623:171:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1253:146:6:-;;;;;;:::i;:::-;;:::i;1204:111:1:-;;;;;;:::i;:::-;;:::i;1282:171:105:-;;;;;;:::i;:::-;;:::i;750:197::-;;;;;;:::i;:::-;;:::i;514:113:34:-;;;;;;:::i;:::-;;:::i;951:327:105:-;1014:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;1014:17:105;1040:11;1053:21;1076:22;1120:19;1132:6;1120:11;:19::i;:::-;1102:76;;;;;;;;;;;;:::i;:::-;1039:139;;;;;;1191:82;;;;;;;;1218:4;1202:21;;;;;;;;;;:::i;:::-;1191:82;;;;;;;;:::i;:::-;;;;;1241:14;1225:31;;;;;;;;;;:::i;:::-;1191:82;;;;;;;;:::i;:::-;;;;;;;;;1184:89;951:327;-1:-1:-1;;;;951:327:105:o;1400:116:1:-;1492:8;;:19;;;;;;;;1461:16;;1492:8;;;:17;;:19;;;;;:8;;:19;;;;;;;:8;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1485:26;;1400:116;:::o;2088:85:0:-;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;2153:15:0::1;2161:6;2153:7;:15::i;:::-;2088:85:::0;:::o;955:144:6:-;186:49:36;722:29:35;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1036:51:6::1;;:43;:51:::0;;;238:53:7;1036:51:6::1;::::0;;;;:58;;;::::1;1090:4;1036:58;::::0;;955:144::o;335:411:105:-;459:15;;;472:1;459:15;;;;;;;;;386:20;;;;459:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;489:29:105;;;516:1;489:29;;;;;;;;;452:22;;-1:-1:-1;489:29:105;;;;;;;;;;-1:-1:-1;489:29:105;480:38;;525:16;;;;;;;;;;;;;;;;;:4;530:1;525:7;;;;;;;;:::i;:::-;;;;;;:16;;;;559:26;547:6;554:1;547:9;;;;;;;;:::i;:::-;;;;;;:38;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;592:26;;;;;;;;;;;;;;;;;:4;597:1;592:7;;;;;;;;:::i;:::-;;;;;;:26;;;;636;624:6;631:1;624:9;;;;;;;;:::i;:::-;;;;;;:38;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;669:26;;;;;;;;;;;;;;;;;:4;674:1;669:7;;;;;;;;:::i;:::-;;;;;;:26;;;;713:28;701:6;708:1;701:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;335:411:105;;:::o;2104:128:1:-;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;2189:8:1::1;:38:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2189:38:1;;;;;::::1;::::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2104:128::o;440:168:6:-;527:53;;;508:4;527:53;;;238::7;527::6;;;;;;;;;:76;;;596:7;:5;:7::i;:::-;584:19;;:8;:19;;;527:76;520:83;440:168;-1:-1:-1;;440:168:6:o;1736:106:0:-;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;1818:19:0::1;1823:6;1831:5;1818:4;:19::i;:::-;1736:106:::0;;:::o;378:87:34:-;424:7;450:8;186:49:36;722:29:35;;;;647:111;1302:137:0;186:49:36;722:29:35;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;;;;1424:4:::1;1384:50;::::0;::::1;9316:74:239::0;9406:18;;;9399:34;;;;1384:31:0::1;::::0;9289:18:239;;1384:50:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;1698:228:1:-;1870:15;;;1903:16;;;;;;1870:51;;;;;;;;6169:25:239;1786:16:1;;1870:15;;;;;:24;;6142:18:239;;1870:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2623:171:0:-;2768:21;;;;:13;:21;;;;;2761:28;;2698:12;;2768:21;2761:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2623:171;;;:::o;1253:146:6:-;186:49:36;722:29:35;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1343:51:6::1;;:43;:51:::0;;;238:53:7;1343:51:6::1;::::0;;;;1336:58;;;::::1;::::0;;1253:146::o;1204:111:1:-;1290:8;;:20;;;;;;;;6169:25:239;;;1271:4:1;;1290:8;;;:12;;6142:18:239;;1290:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1282:171:105:-;1373:16;1404:44;1436:10;1425:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;1404:20;:44::i;750:197::-;832:110;836:6;862:15;;;;:10;:15;:::i;:::-;855:23;;;;;;;;:::i;:::-;887:25;;;;;;;;:::i;:::-;880:33;;;;;;;;:::i;:::-;915:25;844:97;;11673:10:239;11710:15;;;844:97:105;;;11692:34:239;11762:15;;;;11742:18;;;11735:43;915:25:105;;;11794:18:239;;;11787:34;11636:18;;844:97:105;;;;;;;;;;;;832:3;:110::i;514:113:34:-;186:49:36;722:29:35;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;593:27:34::1;612:7;593:18;:27::i;2905:591:1:-:0;3027:15;;;3066:21;;;3027:15;3066:21;;;;;;;3056:32;;3027:15;;;;;:20;;3056:32;;;:::i;:::-;;;;;;;;;3027:63;;;;;;;;;;;6169:25:239;6142:18;;3027:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3094:1;3027:68;3023:81;;2905:591;:::o;3023:81::-;3160:15;;;3201:21;;;3160:15;3201:21;;;;;;;3191:32;;3160:15;;;;;:22;;3191:32;;;:::i;:::-;;;;;;;;;3160:73;;;;;;;;;;;13223:25:239;13264:18;;;13257:34;;;13196:18;;3160:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3286:8:1;;:23;;;;;;;;6169:25:239;;;3286:8:1;;;;;-1:-1:-1;3286:15:1;;-1:-1:-1;6142:18:239;;3286:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3377:21;3391:6;3377:13;:21::i;:::-;3410:9;3405:87;3429:8;:15;3425:19;;3405:87;;;3459:8;3468:1;3459:11;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;;;;;;6169:25:239;;;3459:11:1;;;;;:18;;6142::239;;3459:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3446:3;;;;;:::i;:::-;;;;3405:87;;2279:579;2385:8;;:20;;;;;;;;6169:25:239;;;2385:8:1;;;;;:12;;6142:18:239;;2385:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2487:15:1;;;2528:21;;;2487:15;2528:21;;;;;;;2518:32;;2487:15;;;;;-1:-1:-1;2487:22:1;;-1:-1:-1;2518:32:1;;;:::i;:::-;;;;;;;;;2487:73;;;;;;;;;;;13223:25:239;13264:18;;;13257:34;;;13196:18;;2487:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2616:15:1;;;2644:16;;;;;;2616:54;;;;;;;;13223:25:239;13264:18;;;13257:34;;;2616:15:1;;;-1:-1:-1;2616:19:1;;-1:-1:-1;13196:18:239;;2616:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2728:25;2739:6;2747:5;2728:10;:25::i;:::-;2765:9;2760:94;2784:8;:15;2780:19;;2760:94;;;2814:8;2823:1;2814:11;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;;;:11;;;;;:18;;:33;;2833:6;;2841:5;;2814:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2801:3;;;;;:::i;:::-;;;;2760:94;;;;2279:579;;:::o;1100:97:35:-;1172:18;1182:7;1172:9;:18::i;4201:214:0:-;4306:21;;;;:13;:21;;;;;4299:28;;;:::i;:::-;4366:5;;4359:51;;;;;;;;6169:25:239;;;4366:5:0;;;;;4359:43;;6142:18:239;;4359:51:0;6023:177:239;3672:226:0;3778:21;;;;:13;:21;;;;;:29;3802:5;3778:21;:29;:::i;:::-;-1:-1:-1;3846:5:0;;3839:54;;;;;3846:5;;;;;3839:39;;:54;;3879:6;;3887:5;;3839:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:226;;:::o;1203:207:35:-;186:49:36;1359:7:35;;1338:38;;;;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;;;;;;;;;;;;;;1203:207::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:239:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:239;;14:180;-1:-1:-1;14:180:239:o;199:184::-;251:77;248:1;241:88;348:4;345:1;338:15;372:4;369:1;362:15;388:146;475:1;468:5;465:12;455:46;;481:18;;:::i;:::-;510;;388:146::o;539:::-;626:1;619:5;616:12;606:46;;632:18;;:::i;690:459::-;840:4;882:2;871:9;867:18;859:26;;894:57;941:9;932:6;926:13;894:57;:::i;:::-;998:4;990:6;986:17;980:24;1013:67;1074:4;1063:9;1059:20;1045:12;1013:67;:::i;:::-;-1:-1:-1;1136:4:239;1124:17;;;1118:24;1096:20;;;;1089:54;690:459;:::o;1385:632::-;1556:2;1608:21;;;1678:13;;1581:18;;;1700:22;;;1527:4;;1556:2;1779:15;;;;1753:2;1738:18;;;1527:4;1822:169;1836:6;1833:1;1830:13;1822:169;;;1897:13;;1885:26;;1966:15;;;;1931:12;;;;1858:1;1851:9;1822:169;;;-1:-1:-1;2008:3:239;;1385:632;-1:-1:-1;;;;;;1385:632:239:o;2022:309::-;2081:6;2134:2;2122:9;2113:7;2109:23;2105:32;2102:52;;;2150:1;2147;2140:12;2102:52;2189:9;2176:23;2239:42;2232:5;2228:54;2221:5;2218:65;2208:93;;2297:1;2294;2287:12;2208:93;2320:5;2022:309;-1:-1:-1;;;2022:309:239:o;2336:482::-;2378:3;2416:5;2410:12;2443:6;2438:3;2431:19;2468:1;2478:162;2492:6;2489:1;2486:13;2478:162;;;2554:4;2610:13;;;2606:22;;2600:29;2582:11;;;2578:20;;2571:59;2507:12;2478:162;;;2482:3;2685:1;2678:4;2669:6;2664:3;2660:16;2656:27;2649:38;2807:4;2737:66;2732:2;2724:6;2720:15;2716:88;2711:3;2707:98;2703:109;2696:116;;;2336:482;;;;:::o;2823:1488::-;3078:4;3126:2;3115:9;3111:18;3156:2;3145:9;3138:21;3179:6;3214;3208:13;3245:6;3237;3230:22;3283:2;3272:9;3268:18;3261:25;;3345:2;3335:6;3332:1;3328:14;3317:9;3313:30;3309:39;3295:53;;3367:4;3406:2;3398:6;3394:15;3427:1;3437:314;3451:6;3448:1;3445:13;3437:314;;;3540:66;3528:9;3520:6;3516:22;3512:95;3507:3;3500:108;3631:40;3664:6;3655;3649:13;3631:40;:::i;:::-;3621:50;-1:-1:-1;3729:12:239;;;;3694:15;;;;3473:1;3466:9;3437:314;;;-1:-1:-1;;3787:22:239;;;3767:18;;;3760:50;3863:13;;3885:24;;;3967:15;;;;3927;;;-1:-1:-1;3863:13:239;-1:-1:-1;4002:1:239;4012:271;4028:8;4023:3;4020:17;4012:271;;;4099:8;4093:15;4138:2;4134;4131:10;4121:44;;4145:18;;:::i;:::-;4178:17;;4256;;;;4217:14;;;;4056:1;4047:11;4012:271;;;-1:-1:-1;4300:5:239;;2823:1488;-1:-1:-1;;;;;;;2823:1488:239:o;4508:184::-;4560:77;4557:1;4550:88;4657:4;4654:1;4647:15;4681:4;4678:1;4671:15;4697:334;4768:2;4762:9;4824:2;4814:13;;4829:66;4810:86;4798:99;;4927:18;4912:34;;4948:22;;;4909:62;4906:88;;;4974:18;;:::i;:::-;5010:2;5003:22;4697:334;;-1:-1:-1;4697:334:239:o;5036:589::-;5078:5;5131:3;5124:4;5116:6;5112:17;5108:27;5098:55;;5149:1;5146;5139:12;5098:55;5185:6;5172:20;5211:18;5207:2;5204:26;5201:52;;;5233:18;;:::i;:::-;5277:114;5385:4;5316:66;5309:4;5305:2;5301:13;5297:86;5293:97;5277:114;:::i;:::-;5416:2;5407:7;5400:19;5462:3;5455:4;5450:2;5442:6;5438:15;5434:26;5431:35;5428:55;;;5479:1;5476;5469:12;5428:55;5544:2;5537:4;5529:6;5525:17;5518:4;5509:7;5505:18;5492:55;5592:1;5567:16;;;5585:4;5563:27;5556:38;;;;5571:7;5036:589;-1:-1:-1;;;5036:589:239:o;5630:388::-;5707:6;5715;5768:2;5756:9;5747:7;5743:23;5739:32;5736:52;;;5784:1;5781;5774:12;5736:52;5820:9;5807:23;5797:33;;5881:2;5870:9;5866:18;5853:32;5908:18;5900:6;5897:30;5894:50;;;5940:1;5937;5930:12;5894:50;5963:49;6004:7;5995:6;5984:9;5980:22;5963:49;:::i;:::-;5953:59;;;5630:388;;;;;:::o;6205:320::-;6273:6;6326:2;6314:9;6305:7;6301:23;6297:32;6294:52;;;6342:1;6339;6332:12;6294:52;6382:9;6369:23;6415:18;6407:6;6404:30;6401:50;;;6447:1;6444;6437:12;6401:50;6470:49;6511:7;6502:6;6491:9;6487:22;6470:49;:::i;:::-;6460:59;6205:320;-1:-1:-1;;;;6205:320:239:o;6530:218::-;6677:2;6666:9;6659:21;6640:4;6697:45;6738:2;6727:9;6723:18;6715:6;6697:45;:::i;6753:158::-;6816:5;6861:2;6852:6;6847:3;6843:16;6839:25;6836:45;;;6877:1;6874;6867:12;6836:45;-1:-1:-1;6899:6:239;6753:158;-1:-1:-1;6753:158:239:o;6916:245::-;7006:6;7059:2;7047:9;7038:7;7034:23;7030:32;7027:52;;;7075:1;7072;7065:12;7027:52;7098:57;7147:7;7136:9;7098:57;:::i;7166:314::-;7265:6;7273;7326:3;7314:9;7305:7;7301:23;7297:33;7294:53;;;7343:1;7340;7333:12;7294:53;7379:9;7366:23;7356:33;;7408:66;7466:7;7461:2;7450:9;7446:18;7408:66;:::i;:::-;7398:76;;7166:314;;;;;:::o;7485:167::-;7563:13;;7616:10;7605:22;;7595:33;;7585:61;;7642:1;7639;7632:12;7585:61;7485:167;;;:::o;7657:350::-;7743:6;7751;7759;7812:2;7800:9;7791:7;7787:23;7783:32;7780:52;;;7828:1;7825;7818:12;7780:52;7851:39;7880:9;7851:39;:::i;:::-;7841:49;;7909:48;7953:2;7942:9;7938:18;7909:48;:::i;:::-;7899:58;;7997:2;7986:9;7982:18;7976:25;7966:35;;7657:350;;;;;:::o;8012:936::-;8107:6;8138:2;8181;8169:9;8160:7;8156:23;8152:32;8149:52;;;8197:1;8194;8187:12;8149:52;8230:9;8224:16;8259:18;8300:2;8292:6;8289:14;8286:34;;;8316:1;8313;8306:12;8286:34;8354:6;8343:9;8339:22;8329:32;;8399:7;8392:4;8388:2;8384:13;8380:27;8370:55;;8421:1;8418;8411:12;8370:55;8450:2;8444:9;8472:2;8468;8465:10;8462:36;;;8478:18;;:::i;:::-;8524:2;8521:1;8517:10;8507:20;;8547:28;8571:2;8567;8563:11;8547:28;:::i;:::-;8609:15;;;8679:11;;;8675:20;;;8640:12;;;;8707:19;;;8704:39;;;8739:1;8736;8729:12;8704:39;8763:11;;;;8783:135;8799:6;8794:3;8791:15;8783:135;;;8865:10;;8853:23;;8816:12;;;;8896;;;;8783:135;;;8937:5;8012:936;-1:-1:-1;;;;;;;;8012:936:239:o;8953:184::-;9005:77;9002:1;8995:88;9102:4;9099:1;9092:15;9126:4;9123:1;9116:15;9444:437;9523:1;9519:12;;;;9566;;;9587:61;;9641:4;9633:6;9629:17;9619:27;;9587:61;9694:2;9686:6;9683:14;9663:18;9660:38;9657:218;;9731:77;9728:1;9721:88;9832:4;9829:1;9822:15;9860:4;9857:1;9850:15;9886:277;9953:6;10006:2;9994:9;9985:7;9981:23;9977:32;9974:52;;;10022:1;10019;10012:12;9974:52;10054:9;10048:16;10107:5;10100:13;10093:21;10086:5;10083:32;10073:60;;10129:1;10126;10119:12;10168:156;10249:20;;10298:1;10288:12;;10278:40;;10314:1;10311;10304:12;10329:156;10410:20;;10459:1;10449:12;;10439:40;;10475:1;10472;10465:12;10490:520;10684:2;10669:18;;10696:83;10673:9;10728:39;10760:6;10728:39;:::i;:::-;10696:83;:::i;:::-;10808:50;10852:4;10844:6;10840:17;10808:50;:::i;:::-;10867:67;10928:4;10917:9;10913:20;10899:12;10867:67;:::i;:::-;-1:-1:-1;10997:4:239;10985:17;;;10972:31;10950:20;;;;10943:61;10490:520;:::o;11015:220::-;11095:6;11148:2;11136:9;11127:7;11123:23;11119:32;11116:52;;;11164:1;11161;11154:12;11116:52;11187:42;11219:9;11187:42;:::i;11240:220::-;11320:6;11373:2;11361:9;11352:7;11348:23;11344:32;11341:52;;;11389:1;11386;11379:12;11341:52;11412:42;11444:9;11412:42;:::i;11957:898::-;12083:3;12112:1;12145:6;12139:13;12175:36;12201:9;12175:36;:::i;:::-;12230:1;12247:18;;;12274:191;;;;12479:1;12474:356;;;;12240:590;;12274:191;12322:66;12311:9;12307:82;12302:3;12295:95;12445:6;12438:14;12431:22;12423:6;12419:35;12414:3;12410:45;12403:52;;12274:191;;12474:356;12505:6;12502:1;12495:17;12535:4;12580:2;12577:1;12567:16;12605:1;12619:165;12633:6;12630:1;12627:13;12619:165;;;12711:14;;12698:11;;;12691:35;12754:16;;;;12648:10;;12619:165;;;12623:3;;;12813:6;12808:3;12804:16;12797:23;;12240:590;-1:-1:-1;12846:3:239;;11957:898;-1:-1:-1;;;;;;11957:898:239:o;12860:184::-;12930:6;12983:2;12971:9;12962:7;12958:23;12954:32;12951:52;;;12999:1;12996;12989:12;12951:52;-1:-1:-1;13022:16:239;;12860:184;-1:-1:-1;12860:184:239:o;13302:349::-;13341:3;13372:66;13365:5;13362:77;13359:257;;13472:77;13469:1;13462:88;13573:4;13570:1;13563:15;13601:4;13598:1;13591:15;13359:257;-1:-1:-1;13643:1:239;13632:13;;13302:349::o;13656:289::-;13831:6;13820:9;13813:25;13874:2;13869;13858:9;13854:18;13847:30;13794:4;13894:45;13935:2;13924:9;13920:18;13912:6;13894:45;:::i;13950:544::-;14051:2;14046:3;14043:11;14040:448;;;14087:1;14112:5;14108:2;14101:17;14157:4;14153:2;14143:19;14227:2;14215:10;14211:19;14208:1;14204:27;14198:4;14194:38;14263:4;14251:10;14248:20;14245:47;;;-1:-1:-1;14286:4:239;14245:47;14341:2;14336:3;14332:12;14329:1;14325:20;14319:4;14315:31;14305:41;;14396:82;14414:2;14407:5;14404:13;14396:82;;;14459:17;;;14440:1;14429:13;14396:82;;14730:1467;14854:3;14848:10;14881:18;14873:6;14870:30;14867:56;;;14903:18;;:::i;:::-;14932:96;15021:6;14981:38;15013:4;15007:11;14981:38;:::i;:::-;14975:4;14932:96;:::i;:::-;15083:4;;15147:2;15136:14;;15164:1;15159:781;;;;15984:1;16001:6;15998:89;;;-1:-1:-1;16053:19:239;;;16047:26;15998:89;14636:66;14627:1;14623:11;;;14619:84;14615:89;14605:100;14711:1;14707:11;;;14602:117;16100:81;;15129:1062;;15159:781;11904:1;11897:14;;;11941:4;11928:18;;15207:66;15195:79;;;15371:236;15385:7;15382:1;15379:14;15371:236;;;15474:19;;;15468:26;15453:42;;15566:27;;;;15534:1;15522:14;;;;15401:19;;15371:236;;;15375:3;15635:6;15626:7;15623:19;15620:261;;;15696:19;;;15690:26;15797:66;15779:1;15775:14;;;15791:3;15771:24;15767:97;15763:102;15748:118;15733:134;;15620:261;-1:-1:-1;;;;;15927:1:239;15911:14;;;15907:22;15894:36;;-1:-1:-1;14730:1467:239:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeWriter(address)": "4fef6a38",
    "getEntities()": "31b933b9",
    "getEntitiesWithValue((uint8,uint8,uint256))": "d3e0f834",
    "getEntitiesWithValue(bytes)": "b361be46",
    "getRawValue(uint256)": "b8bc073d",
    "getSchema()": "6b122fe0",
    "getValue(uint256)": "0ff4c916",
    "has(uint256)": "cccf7a8e",
    "id()": "af640d0f",
    "owner()": "8da5cb5b",
    "registerIndexer(address)": "75c0669c",
    "registerWorld(address)": "9d2c76b4",
    "remove(uint256)": "4cc82215",
    "set(uint256,(uint8,uint8,uint256))": "e74526e5",
    "set(uint256,bytes)": "8b282947",
    "transferOwnership(address)": "f2fde38b",
    "unauthorizeWriter(address)": "bf4fe57e",
    "world()": "30b67baa",
    "writeAccess(address)": "861eb905"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BareComponent__NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableWritable__NotWriter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"authorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntities\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum EMotherlodeSize\",\"name\":\"size\",\"type\":\"uint8\"},{\"internalType\":\"enum EMotherlodeType\",\"name\":\"motherlodeType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"cooldownBlocks\",\"type\":\"uint256\"}],\"internalType\":\"struct Motherlode\",\"name\":\"motherlode\",\"type\":\"tuple\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getRawValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"enum LibTypes.SchemaValue[]\",\"name\":\"values\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getValue\",\"outputs\":[{\"components\":[{\"internalType\":\"enum EMotherlodeSize\",\"name\":\"size\",\"type\":\"uint8\"},{\"internalType\":\"enum EMotherlodeType\",\"name\":\"motherlodeType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"cooldownBlocks\",\"type\":\"uint256\"}],\"internalType\":\"struct Motherlode\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"indexer\",\"type\":\"address\"}],\"name\":\"registerIndexer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_world\",\"type\":\"address\"}],\"name\":\"registerWorld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum EMotherlodeSize\",\"name\":\"size\",\"type\":\"uint8\"},{\"internalType\":\"enum EMotherlodeType\",\"name\":\"motherlodeType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"cooldownBlocks\",\"type\":\"uint256\"}],\"internalType\":\"struct Motherlode\",\"name\":\"motherlode\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"unauthorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"writeAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeWriter(address)\":{\"params\":{\"writer\":\"Address to grant write access to.\"}},\"getEntitiesWithValue(bytes)\":{\"params\":{\"value\":\"Abi-encoded value to get the list of entities with this value for.\"}},\"getRawValue(uint256)\":{\"params\":{\"entity\":\"Entity to get the raw value in this component for.\"}},\"has(uint256)\":{\"params\":{\"entity\":\"Entity to check whether it has a value in this component for.\"}},\"owner()\":{\"returns\":{\"_0\":\"conrtact owner\"}},\"registerIndexer(address)\":{\"params\":{\"indexer\":\"Address of the indexer to notify when a component value is set.\"}},\"registerWorld(address)\":{\"params\":{\"_world\":\"Address of the World contract.\"}},\"remove(uint256)\":{\"params\":{\"entity\":\"Entity to remove from this component.\"}},\"set(uint256,bytes)\":{\"params\":{\"entity\":\"Entity to set the value for.\",\"value\":\"Value to set for the given entity.\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}},\"unauthorizeWriter(address)\":{\"params\":{\"writer\":\"Address to revoke write access.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeWriter(address)\":{\"notice\":\"Grant write access to the given address. Can only be called by the owner.\"},\"getEntities()\":{\"notice\":\"Get a list of all entities that have a value in this component.\"},\"getEntitiesWithValue(bytes)\":{\"notice\":\"Get a list of all entities that have the specified value in this component.\"},\"getRawValue(uint256)\":{\"notice\":\"Get the raw (abi-encoded) value of the given entity in this component.\"},\"getSchema()\":{\"notice\":\"Return the keys and value types of the schema of this component. \"},\"has(uint256)\":{\"notice\":\"Check whether the given entity has a value in this component.\"},\"id()\":{\"notice\":\"Public identifier of this component \"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"registerIndexer(address)\":{\"notice\":\"Register a new indexer that gets notified when a component value is set.\"},\"registerWorld(address)\":{\"notice\":\"Register this component in the given world.\"},\"remove(uint256)\":{\"notice\":\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"},\"unauthorizeWriter(address)\":{\"notice\":\"Revoke write access from the given address. Can only be called by the owner.\"},\"world()\":{\"notice\":\"Reference to the World contract this component is registered in \"},\"writeAccess(address)\":{\"notice\":\"Whether given operator has write access \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/components/MotherlodeComponent.sol\":\"MotherlodeComponent\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@latticexyz/=../../node_modules/@latticexyz/\",\":@rari-capital/=../../node_modules/@rari-capital/\",\":@solidstate/=../../node_modules/@solidstate/\",\":abdk-libraries-solidity/=../../node_modules/abdk-libraries-solidity/\",\":components/=src/components/\",\":ds-test/=../../node_modules/ds-test/src/\",\":forge-std/=../../node_modules/forge-std/src/\",\":libraries/=src/libraries/\",\":memmove/=../../node_modules/memmove/src/\",\":noise/=../../node_modules/@latticexyz/noise/contracts/\",\":packages/=../../../mud/packages/\",\":solecs/=../../node_modules/@latticexyz/solecs/src/\",\":solidity-trigonometry/=/Users/emersonhsieh/primodium/primodium/node_modules/solidity-trigonometry/src/\",\":solmate/=../../node_modules/@rari-capital/solmate/src/\",\":src/=src/\",\":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/\",\":systems/=src/systems/\",\":trig/=../../node_modules/solidity-trigonometry/\"]},\"sources\":{\"../../node_modules/@latticexyz/solecs/src/BareComponent.sol\":{\"keccak256\":\"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\",\"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\"]},\"../../node_modules/@latticexyz/solecs/src/Component.sol\":{\"keccak256\":\"0x40085c2f86bf6be7a756015025477aa46308b1618083ece93ae13093881a6874\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca8653540b5674e50abfd4b4898009b472fc7fd2fba456146c1a1c44b615d83a\",\"dweb:/ipfs/QmSqbRng5fHuGUKgkFuNw3BfoefNteYU95sYi4g9QjCCNh\"]},\"../../node_modules/@latticexyz/solecs/src/LibTypes.sol\":{\"keccak256\":\"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\",\"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\"]},\"../../node_modules/@latticexyz/solecs/src/MapSet.sol\":{\"keccak256\":\"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\",\"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\"]},\"../../node_modules/@latticexyz/solecs/src/Ownable.sol\":{\"keccak256\":\"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\",\"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol\":{\"keccak256\":\"0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c\",\"dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol\":{\"keccak256\":\"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\",\"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\"]},\"../../node_modules/@latticexyz/solecs/src/Set.sol\":{\"keccak256\":\"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\",\"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol\":{\"keccak256\":\"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\",\"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol\":{\"keccak256\":\"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\",\"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IEntityContainer.sol\":{\"keccak256\":\"0x4506db1dcbdbe68a397107a57bfa3da888a889f14181a90eb728cfecc60700b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23f5c02d110f5abf6340a08a2a8b7e0b5668f211fe6baf41213e6c4f69dece10\",\"dweb:/ipfs/QmYfKeZMeEUNExsxjkCF5nGdw8KRyPe1t5tcGFTEkP7CkV\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IEntityIndexer.sol\":{\"keccak256\":\"0xd89023b2a5e9961be3c9d49d9f7f9ac7dcc416e3f43a8758dc058d1db2eea6b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3266ea1dd5a7f372f8814db24ac4981730f66fba8e6f90f614246ca5cec529b4\",\"dweb:/ipfs/QmQ71BtaBsDjfke46dndaTBVhyXAHxs5qs7d9GHJwVXuvw\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol\":{\"keccak256\":\"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\",\"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol\":{\"keccak256\":\"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\",\"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol\":{\"keccak256\":\"0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a\",\"dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol\":{\"keccak256\":\"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\",\"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"../../node_modules/@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"../../node_modules/@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]},\"../../node_modules/memmove/src/Array.sol\":{\"keccak256\":\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"]},\"../../node_modules/memmove/src/LinkedList.sol\":{\"keccak256\":\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"]},\"src/components/MotherlodeComponent.sol\":{\"keccak256\":\"0x67710a012712ff561c7edee7bdc6085f8122c1e50e8f28ae3065931fd74efbeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d16564600f000096df35441f2288a35c28d862455edefa01f846bada5eb1f69\",\"dweb:/ipfs/QmP4DSEnqKo65srB4PCBruvJrxKUV1AK1ncM65MZyjsU1f\"]},\"src/types.sol\":{\"keccak256\":\"0xb6dc6c0ee0abbbc1922af7c97e38c4b4f19da0bca2d8123d72585f5dc2f2d074\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e44d7e172d2b5772013f340e621c60d787d8535cd83d3946d7946a4bf75e039f\",\"dweb:/ipfs/QmcBKTCATqGwRsbUqHZUcHNFhjvEvKTAHyTDGGcEdAswoc\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BareComponent__NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnableWritable__NotWriter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotTransitiveOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntities",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Motherlode",
              "name": "motherlode",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum EMotherlodeSize",
                  "name": "size",
                  "type": "uint8"
                },
                {
                  "internalType": "enum EMotherlodeType",
                  "name": "motherlodeType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "cooldownBlocks",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRawValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "keys",
              "type": "string[]"
            },
            {
              "internalType": "enum LibTypes.SchemaValue[]",
              "name": "values",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "struct Motherlode",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum EMotherlodeSize",
                  "name": "size",
                  "type": "uint8"
                },
                {
                  "internalType": "enum EMotherlodeType",
                  "name": "motherlodeType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "cooldownBlocks",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "has",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "id",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "indexer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIndexer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWorld"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "struct Motherlode",
              "name": "motherlode",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum EMotherlodeSize",
                  "name": "size",
                  "type": "uint8"
                },
                {
                  "internalType": "enum EMotherlodeType",
                  "name": "motherlodeType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "cooldownBlocks",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unauthorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "writeAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeWriter(address)": {
            "params": {
              "writer": "Address to grant write access to."
            }
          },
          "getEntitiesWithValue(bytes)": {
            "params": {
              "value": "Abi-encoded value to get the list of entities with this value for."
            }
          },
          "getRawValue(uint256)": {
            "params": {
              "entity": "Entity to get the raw value in this component for."
            }
          },
          "has(uint256)": {
            "params": {
              "entity": "Entity to check whether it has a value in this component for."
            }
          },
          "owner()": {
            "returns": {
              "_0": "conrtact owner"
            }
          },
          "registerIndexer(address)": {
            "params": {
              "indexer": "Address of the indexer to notify when a component value is set."
            }
          },
          "registerWorld(address)": {
            "params": {
              "_world": "Address of the World contract."
            }
          },
          "remove(uint256)": {
            "params": {
              "entity": "Entity to remove from this component."
            }
          },
          "set(uint256,bytes)": {
            "params": {
              "entity": "Entity to set the value for.",
              "value": "Value to set for the given entity."
            }
          },
          "transferOwnership(address)": {
            "params": {
              "account": "address of new owner"
            }
          },
          "unauthorizeWriter(address)": {
            "params": {
              "writer": "Address to revoke write access."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizeWriter(address)": {
            "notice": "Grant write access to the given address. Can only be called by the owner."
          },
          "getEntities()": {
            "notice": "Get a list of all entities that have a value in this component."
          },
          "getEntitiesWithValue(bytes)": {
            "notice": "Get a list of all entities that have the specified value in this component."
          },
          "getRawValue(uint256)": {
            "notice": "Get the raw (abi-encoded) value of the given entity in this component."
          },
          "getSchema()": {
            "notice": "Return the keys and value types of the schema of this component. "
          },
          "has(uint256)": {
            "notice": "Check whether the given entity has a value in this component."
          },
          "id()": {
            "notice": "Public identifier of this component "
          },
          "owner()": {
            "notice": "get the ERC173 contract owner"
          },
          "registerIndexer(address)": {
            "notice": "Register a new indexer that gets notified when a component value is set."
          },
          "registerWorld(address)": {
            "notice": "Register this component in the given world."
          },
          "remove(uint256)": {
            "notice": "Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "set(uint256,bytes)": {
            "notice": "Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "transferOwnership(address)": {
            "notice": "transfer contract ownership to new account"
          },
          "unauthorizeWriter(address)": {
            "notice": "Revoke write access from the given address. Can only be called by the owner."
          },
          "world()": {
            "notice": "Reference to the World contract this component is registered in "
          },
          "writeAccess(address)": {
            "notice": "Whether given operator has write access "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@latticexyz/=../../node_modules/@latticexyz/",
        ":@rari-capital/=../../node_modules/@rari-capital/",
        ":@solidstate/=../../node_modules/@solidstate/",
        ":abdk-libraries-solidity/=../../node_modules/abdk-libraries-solidity/",
        ":components/=src/components/",
        ":ds-test/=../../node_modules/ds-test/src/",
        ":forge-std/=../../node_modules/forge-std/src/",
        ":libraries/=src/libraries/",
        ":memmove/=../../node_modules/memmove/src/",
        ":noise/=../../node_modules/@latticexyz/noise/contracts/",
        ":packages/=../../../mud/packages/",
        ":solecs/=../../node_modules/@latticexyz/solecs/src/",
        ":solidity-trigonometry/=/Users/emersonhsieh/primodium/primodium/node_modules/solidity-trigonometry/src/",
        ":solmate/=../../node_modules/@rari-capital/solmate/src/",
        ":src/=src/",
        ":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/",
        ":systems/=src/systems/",
        ":trig/=../../node_modules/solidity-trigonometry/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/components/MotherlodeComponent.sol": "MotherlodeComponent"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@latticexyz/solecs/src/BareComponent.sol": {
        "keccak256": "0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a",
        "urls": [
          "bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a",
          "dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Component.sol": {
        "keccak256": "0x40085c2f86bf6be7a756015025477aa46308b1618083ece93ae13093881a6874",
        "urls": [
          "bzz-raw://ca8653540b5674e50abfd4b4898009b472fc7fd2fba456146c1a1c44b615d83a",
          "dweb:/ipfs/QmSqbRng5fHuGUKgkFuNw3BfoefNteYU95sYi4g9QjCCNh"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/LibTypes.sol": {
        "keccak256": "0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102",
        "urls": [
          "bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798",
          "dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/MapSet.sol": {
        "keccak256": "0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db",
        "urls": [
          "bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288",
          "dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Ownable.sol": {
        "keccak256": "0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209",
        "urls": [
          "bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4",
          "dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol": {
        "keccak256": "0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf",
        "urls": [
          "bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c",
          "dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol": {
        "keccak256": "0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5",
        "urls": [
          "bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4",
          "dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Set.sol": {
        "keccak256": "0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344",
        "urls": [
          "bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46",
          "dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol": {
        "keccak256": "0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4",
        "urls": [
          "bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629",
          "dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol": {
        "keccak256": "0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9",
        "urls": [
          "bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e",
          "dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IEntityContainer.sol": {
        "keccak256": "0x4506db1dcbdbe68a397107a57bfa3da888a889f14181a90eb728cfecc60700b8",
        "urls": [
          "bzz-raw://23f5c02d110f5abf6340a08a2a8b7e0b5668f211fe6baf41213e6c4f69dece10",
          "dweb:/ipfs/QmYfKeZMeEUNExsxjkCF5nGdw8KRyPe1t5tcGFTEkP7CkV"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IEntityIndexer.sol": {
        "keccak256": "0xd89023b2a5e9961be3c9d49d9f7f9ac7dcc416e3f43a8758dc058d1db2eea6b5",
        "urls": [
          "bzz-raw://3266ea1dd5a7f372f8814db24ac4981730f66fba8e6f90f614246ca5cec529b4",
          "dweb:/ipfs/QmQ71BtaBsDjfke46dndaTBVhyXAHxs5qs7d9GHJwVXuvw"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol": {
        "keccak256": "0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77",
        "urls": [
          "bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78",
          "dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol": {
        "keccak256": "0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9",
        "urls": [
          "bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f",
          "dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol": {
        "keccak256": "0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114",
        "urls": [
          "bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a",
          "dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol": {
        "keccak256": "0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c",
        "urls": [
          "bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059",
          "dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol": {
        "keccak256": "0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1",
        "urls": [
          "bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38",
          "dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
        "keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
        "urls": [
          "bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
          "dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol": {
        "keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
        "urls": [
          "bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
          "dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol": {
        "keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
        "urls": [
          "bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
          "dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol": {
        "keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
        "urls": [
          "bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
          "dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6",
        "urls": [
          "bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555",
          "dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol": {
        "keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
        "urls": [
          "bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
          "dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/AddressUtils.sol": {
        "keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
        "urls": [
          "bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
          "dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/UintUtils.sol": {
        "keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
        "urls": [
          "bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
          "dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/Array.sol": {
        "keccak256": "0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515",
        "urls": [
          "bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1",
          "dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/LinkedList.sol": {
        "keccak256": "0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1",
        "urls": [
          "bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598",
          "dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc"
        ],
        "license": "MIT"
      },
      "src/components/MotherlodeComponent.sol": {
        "keccak256": "0x67710a012712ff561c7edee7bdc6085f8122c1e50e8f28ae3065931fd74efbeb",
        "urls": [
          "bzz-raw://2d16564600f000096df35441f2288a35c28d862455edefa01f846bada5eb1f69",
          "dweb:/ipfs/QmP4DSEnqKo65srB4PCBruvJrxKUV1AK1ncM65MZyjsU1f"
        ],
        "license": "MIT"
      },
      "src/types.sol": {
        "keccak256": "0xb6dc6c0ee0abbbc1922af7c97e38c4b4f19da0bca2d8123d72585f5dc2f2d074",
        "urls": [
          "bzz-raw://e44d7e172d2b5772013f340e621c60d787d8535cd83d3946d7946a4bf75e039f",
          "dweb:/ipfs/QmcBKTCATqGwRsbUqHZUcHNFhjvEvKTAHyTDGGcEdAswoc"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/components/MotherlodeComponent.sol",
    "id": 23046,
    "exportedSymbols": {
      "BareComponent": [
        73830
      ],
      "Component": [
        262
      ],
      "EMotherlodeSize": [
        73524
      ],
      "EMotherlodeType": [
        73529
      ],
      "ID": [
        22877
      ],
      "IEntityIndexer": [
        74247
      ],
      "IWorld": [
        1322
      ],
      "LibTypes": [
        73869
      ],
      "MapSet": [
        74062
      ],
      "Motherlode": [
        73538
      ],
      "MotherlodeComponent": [
        23045
      ],
      "Set": [
        74228
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1424:105",
    "nodes": [
      {
        "id": 22864,
        "nodeType": "PragmaDirective",
        "src": "32:24:105",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 22865,
        "nodeType": "ImportDirective",
        "src": "57:30:105",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/Component.sol",
        "file": "solecs/Component.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23046,
        "sourceUnit": 263,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 22869,
        "nodeType": "ImportDirective",
        "src": "89:77:105",
        "nodes": [],
        "absolutePath": "src/types.sol",
        "file": "src/types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23046,
        "sourceUnit": 73560,
        "symbolAliases": [
          {
            "foreign": {
              "id": 22866,
              "name": "Motherlode",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73538,
              "src": "98:10:105",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 22867,
              "name": "EMotherlodeSize",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73524,
              "src": "110:15:105",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 22868,
              "name": "EMotherlodeType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73529,
              "src": "127:15:105",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 22877,
        "nodeType": "VariableDeclaration",
        "src": "168:64:105",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "ID",
        "nameLocation": "185:2:105",
        "scope": 23046,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 22870,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "168:7:105",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "hexValue": "636f6d706f6e656e742e4d6f746865726c6f6465",
                  "id": 22874,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "208:22:105",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6f733d142822cfa9cdcf200e380f3eedc04430f17210ad049967eb996d43a8cc",
                    "typeString": "literal_string \"component.Motherlode\""
                  },
                  "value": "component.Motherlode"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6f733d142822cfa9cdcf200e380f3eedc04430f17210ad049967eb996d43a8cc",
                    "typeString": "literal_string \"component.Motherlode\""
                  }
                ],
                "id": 22873,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "198:9:105",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 22875,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "198:33:105",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            ],
            "id": 22872,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "190:7:105",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_uint256_$",
              "typeString": "type(uint256)"
            },
            "typeName": {
              "id": 22871,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "190:7:105",
              "typeDescriptions": {}
            }
          },
          "id": 22876,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "190:42:105",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 23045,
        "nodeType": "ContractDefinition",
        "src": "235:1220:105",
        "nodes": [
          {
            "id": 22889,
            "nodeType": "FunctionDefinition",
            "src": "281:50:105",
            "nodes": [],
            "body": {
              "id": 22888,
              "nodeType": "Block",
              "src": "329:2:105",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 22884,
                    "name": "world",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22881,
                    "src": "318:5:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 22885,
                    "name": "ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22877,
                    "src": "325:2:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 22886,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 22883,
                  "name": "Component",
                  "nameLocations": [
                    "308:9:105"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 262,
                  "src": "308:9:105"
                },
                "nodeType": "ModifierInvocation",
                "src": "308:20:105"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 22882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22881,
                  "mutability": "mutable",
                  "name": "world",
                  "nameLocation": "301:5:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22889,
                  "src": "293:13:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "292:15:105"
            },
            "returnParameters": {
              "id": 22887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "329:0:105"
            },
            "scope": 23045,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 22960,
            "nodeType": "FunctionDefinition",
            "src": "335:411:105",
            "nodes": [],
            "body": {
              "id": 22959,
              "nodeType": "Block",
              "src": "446:300:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 22906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22900,
                      "name": "keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22894,
                      "src": "452:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "33",
                          "id": 22904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "472:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 22903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "459:12:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (string memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 22901,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "463:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 22902,
                          "nodeType": "ArrayTypeName",
                          "src": "463:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        }
                      },
                      "id": 22905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "459:15:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "452:22:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 22907,
                  "nodeType": "ExpressionStatement",
                  "src": "452:22:105"
                },
                {
                  "expression": {
                    "id": 22915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22908,
                      "name": "values",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22898,
                      "src": "480:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$73868_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "33",
                          "id": 22913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "516:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 22912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "489:26:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_SchemaValue_$73868_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum LibTypes.SchemaValue[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 22910,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 22909,
                              "name": "LibTypes.SchemaValue",
                              "nameLocations": [
                                "493:8:105",
                                "502:11:105"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 73868,
                              "src": "493:20:105"
                            },
                            "referencedDeclaration": 73868,
                            "src": "493:20:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SchemaValue_$73868",
                              "typeString": "enum LibTypes.SchemaValue"
                            }
                          },
                          "id": 22911,
                          "nodeType": "ArrayTypeName",
                          "src": "493:22:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_SchemaValue_$73868_$dyn_storage_ptr",
                            "typeString": "enum LibTypes.SchemaValue[]"
                          }
                        }
                      },
                      "id": 22914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "489:29:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$73868_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "src": "480:38:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$73868_$dyn_memory_ptr",
                      "typeString": "enum LibTypes.SchemaValue[] memory"
                    }
                  },
                  "id": 22916,
                  "nodeType": "ExpressionStatement",
                  "src": "480:38:105"
                },
                {
                  "expression": {
                    "id": 22921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 22917,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22894,
                        "src": "525:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 22919,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 22918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "530:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "525:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "73697a65",
                      "id": 22920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "535:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_78dea85a028ad086e64e60d66d1b2f359e0873ac03939f3d9979946eba52838c",
                        "typeString": "literal_string \"size\""
                      },
                      "value": "size"
                    },
                    "src": "525:16:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 22922,
                  "nodeType": "ExpressionStatement",
                  "src": "525:16:105"
                },
                {
                  "expression": {
                    "id": 22929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 22923,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22898,
                        "src": "547:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$73868_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 22925,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 22924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "554:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "547:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$73868",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 22926,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73869,
                          "src": "559:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$73869_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 22927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "568:11:105",
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73868,
                        "src": "559:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$73868_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 22928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "580:5:105",
                      "memberName": "UINT8",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73842,
                      "src": "559:26:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$73868",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "547:38:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$73868",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 22930,
                  "nodeType": "ExpressionStatement",
                  "src": "547:38:105"
                },
                {
                  "expression": {
                    "id": 22935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 22931,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22894,
                        "src": "592:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 22933,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 22932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "597:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "592:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6d6f746865726c6f646554797065",
                      "id": 22934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "602:16:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ba06f712be38a4fa17b122c530840ec069ed738b45ca923d0ecac9d4d60f1228",
                        "typeString": "literal_string \"motherlodeType\""
                      },
                      "value": "motherlodeType"
                    },
                    "src": "592:26:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 22936,
                  "nodeType": "ExpressionStatement",
                  "src": "592:26:105"
                },
                {
                  "expression": {
                    "id": 22943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 22937,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22898,
                        "src": "624:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$73868_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 22939,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 22938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "631:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "624:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$73868",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 22940,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73869,
                          "src": "636:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$73869_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 22941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "645:11:105",
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73868,
                        "src": "636:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$73868_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 22942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "657:5:105",
                      "memberName": "UINT8",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73842,
                      "src": "636:26:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$73868",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "624:38:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$73868",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 22944,
                  "nodeType": "ExpressionStatement",
                  "src": "624:38:105"
                },
                {
                  "expression": {
                    "id": 22949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 22945,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22894,
                        "src": "669:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 22947,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 22946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "674:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "669:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "636f6f6c646f776e426c6f636b73",
                      "id": 22948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "679:16:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_f34d43fd91700188e40dd1beaf49157e79ca6fcab5549d229c2c194019ad8dab",
                        "typeString": "literal_string \"cooldownBlocks\""
                      },
                      "value": "cooldownBlocks"
                    },
                    "src": "669:26:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 22950,
                  "nodeType": "ExpressionStatement",
                  "src": "669:26:105"
                },
                {
                  "expression": {
                    "id": 22957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 22951,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22898,
                        "src": "701:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$73868_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 22953,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 22952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "708:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "701:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$73868",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 22954,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73869,
                          "src": "713:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$73869_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 22955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "722:11:105",
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73868,
                        "src": "713:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$73868_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 22956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "734:7:105",
                      "memberName": "UINT256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73847,
                      "src": "713:28:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$73868",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "701:40:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$73868",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 22958,
                  "nodeType": "ExpressionStatement",
                  "src": "701:40:105"
                }
              ]
            },
            "baseFunctions": [
              1129
            ],
            "functionSelector": "6b122fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "344:9:105",
            "overrides": {
              "id": 22891,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "368:8:105"
            },
            "parameters": {
              "id": 22890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:2:105"
            },
            "returnParameters": {
              "id": 22899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22894,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "402:4:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22960,
                  "src": "386:20:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22892,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "386:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 22893,
                    "nodeType": "ArrayTypeName",
                    "src": "386:8:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22898,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "438:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22960,
                  "src": "408:36:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_SchemaValue_$73868_$dyn_memory_ptr",
                    "typeString": "enum LibTypes.SchemaValue[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22896,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 22895,
                        "name": "LibTypes.SchemaValue",
                        "nameLocations": [
                          "408:8:105",
                          "417:11:105"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 73868,
                        "src": "408:20:105"
                      },
                      "referencedDeclaration": 73868,
                      "src": "408:20:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$73868",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "id": 22897,
                    "nodeType": "ArrayTypeName",
                    "src": "408:22:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$73868_$dyn_storage_ptr",
                      "typeString": "enum LibTypes.SchemaValue[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "385:60:105"
            },
            "scope": 23045,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 22988,
            "nodeType": "FunctionDefinition",
            "src": "750:197:105",
            "nodes": [],
            "body": {
              "id": 22987,
              "nodeType": "Block",
              "src": "826:121:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22969,
                        "name": "entity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22962,
                        "src": "836:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 22974,
                                  "name": "motherlode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22965,
                                  "src": "862:10:105",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Motherlode_$73538_calldata_ptr",
                                    "typeString": "struct Motherlode calldata"
                                  }
                                },
                                "id": 22975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "873:4:105",
                                "memberName": "size",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 73532,
                                "src": "862:15:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_EMotherlodeSize_$73524",
                                  "typeString": "enum EMotherlodeSize"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_EMotherlodeSize_$73524",
                                  "typeString": "enum EMotherlodeSize"
                                }
                              ],
                              "id": 22973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "855:6:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint32_$",
                                "typeString": "type(uint32)"
                              },
                              "typeName": {
                                "id": 22972,
                                "name": "uint32",
                                "nodeType": "ElementaryTypeName",
                                "src": "855:6:105",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 22976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "855:23:105",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 22979,
                                  "name": "motherlode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22965,
                                  "src": "887:10:105",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Motherlode_$73538_calldata_ptr",
                                    "typeString": "struct Motherlode calldata"
                                  }
                                },
                                "id": 22980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "898:14:105",
                                "memberName": "motherlodeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 73535,
                                "src": "887:25:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_EMotherlodeType_$73529",
                                  "typeString": "enum EMotherlodeType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_EMotherlodeType_$73529",
                                  "typeString": "enum EMotherlodeType"
                                }
                              ],
                              "id": 22978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "880:6:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint32_$",
                                "typeString": "type(uint32)"
                              },
                              "typeName": {
                                "id": 22977,
                                "name": "uint32",
                                "nodeType": "ElementaryTypeName",
                                "src": "880:6:105",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 22981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "880:33:105",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "expression": {
                              "id": 22982,
                              "name": "motherlode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22965,
                              "src": "915:10:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Motherlode_$73538_calldata_ptr",
                                "typeString": "struct Motherlode calldata"
                              }
                            },
                            "id": 22983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "926:14:105",
                            "memberName": "cooldownBlocks",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73537,
                            "src": "915:25:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 22970,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "844:3:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 22971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "848:6:105",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "844:10:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 22984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "844:97:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 22968,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22988,
                        73705
                      ],
                      "referencedDeclaration": 73705,
                      "src": "832:3:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 22985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "832:110:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22986,
                  "nodeType": "ExpressionStatement",
                  "src": "832:110:105"
                }
              ]
            },
            "functionSelector": "e74526e5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "759:3:105",
            "parameters": {
              "id": 22966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22962,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "771:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22988,
                  "src": "763:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22965,
                  "mutability": "mutable",
                  "name": "motherlode",
                  "nameLocation": "799:10:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22988,
                  "src": "779:30:105",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Motherlode_$73538_calldata_ptr",
                    "typeString": "struct Motherlode"
                  },
                  "typeName": {
                    "id": 22964,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 22963,
                      "name": "Motherlode",
                      "nameLocations": [
                        "779:10:105"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73538,
                      "src": "779:10:105"
                    },
                    "referencedDeclaration": 73538,
                    "src": "779:10:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Motherlode_$73538_storage_ptr",
                      "typeString": "struct Motherlode"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "762:48:105"
            },
            "returnParameters": {
              "id": 22967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "826:0:105"
            },
            "scope": 23045,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 23027,
            "nodeType": "FunctionDefinition",
            "src": "951:327:105",
            "nodes": [],
            "body": {
              "id": 23026,
              "nodeType": "Block",
              "src": "1033:245:105",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    22997,
                    22999,
                    23001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22997,
                      "mutability": "mutable",
                      "name": "size",
                      "nameLocation": "1047:4:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 23026,
                      "src": "1040:11:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 22996,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1040:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 22999,
                      "mutability": "mutable",
                      "name": "motherlodeType",
                      "nameLocation": "1060:14:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 23026,
                      "src": "1053:21:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 22998,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1053:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23001,
                      "mutability": "mutable",
                      "name": "cooldownBlocks",
                      "nameLocation": "1084:14:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 23026,
                      "src": "1076:22:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23000,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1076:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23015,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23005,
                            "name": "entity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22990,
                            "src": "1132:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 23004,
                          "name": "getRawValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73750,
                          "src": "1120:11:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) view returns (bytes memory)"
                          }
                        },
                        "id": 23006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1120:19:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 23008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1148:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 23007,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1148:6:105",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 23010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1156:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 23009,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1156:6:105",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 23012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1164:7:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 23011,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1164:7:105",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 23013,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1147:25:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint32_$_$_t_type$_t_uint32_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint32),type(uint32),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint32_$_$_t_type$_t_uint32_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint32),type(uint32),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 23002,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1102:3:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 23003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1106:6:105",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1102:10:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 23014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1102:76:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint32_$_t_uint32_$_t_uint256_$",
                      "typeString": "tuple(uint32,uint32,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1039:139:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23018,
                            "name": "size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22997,
                            "src": "1218:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 23017,
                          "name": "EMotherlodeSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73524,
                          "src": "1202:15:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_EMotherlodeSize_$73524_$",
                            "typeString": "type(enum EMotherlodeSize)"
                          }
                        },
                        "id": 23019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1202:21:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_EMotherlodeSize_$73524",
                          "typeString": "enum EMotherlodeSize"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 23021,
                            "name": "motherlodeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22999,
                            "src": "1241:14:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 23020,
                          "name": "EMotherlodeType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73529,
                          "src": "1225:15:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_EMotherlodeType_$73529_$",
                            "typeString": "type(enum EMotherlodeType)"
                          }
                        },
                        "id": 23022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1225:31:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_EMotherlodeType_$73529",
                          "typeString": "enum EMotherlodeType"
                        }
                      },
                      {
                        "id": 23023,
                        "name": "cooldownBlocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23001,
                        "src": "1258:14:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_EMotherlodeSize_$73524",
                          "typeString": "enum EMotherlodeSize"
                        },
                        {
                          "typeIdentifier": "t_enum$_EMotherlodeType_$73529",
                          "typeString": "enum EMotherlodeType"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23016,
                      "name": "Motherlode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73538,
                      "src": "1191:10:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Motherlode_$73538_storage_ptr_$",
                        "typeString": "type(struct Motherlode storage pointer)"
                      }
                    },
                    "id": 23024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1191:82:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Motherlode_$73538_memory_ptr",
                      "typeString": "struct Motherlode memory"
                    }
                  },
                  "functionReturnParameters": 22995,
                  "id": 23025,
                  "nodeType": "Return",
                  "src": "1184:89:105"
                }
              ]
            },
            "functionSelector": "0ff4c916",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "960:8:105",
            "parameters": {
              "id": 22991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22990,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "977:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 23027,
                  "src": "969:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "968:16:105"
            },
            "returnParameters": {
              "id": 22995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22994,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23027,
                  "src": "1014:17:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Motherlode_$73538_memory_ptr",
                    "typeString": "struct Motherlode"
                  },
                  "typeName": {
                    "id": 22993,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 22992,
                      "name": "Motherlode",
                      "nameLocations": [
                        "1014:10:105"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73538,
                      "src": "1014:10:105"
                    },
                    "referencedDeclaration": 73538,
                    "src": "1014:10:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Motherlode_$73538_storage_ptr",
                      "typeString": "struct Motherlode"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1013:19:105"
            },
            "scope": 23045,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 23044,
            "nodeType": "FunctionDefinition",
            "src": "1282:171:105",
            "nodes": [],
            "body": {
              "id": 23043,
              "nodeType": "Block",
              "src": "1391:62:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23039,
                            "name": "motherlode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23030,
                            "src": "1436:10:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Motherlode_$73538_calldata_ptr",
                              "typeString": "struct Motherlode calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Motherlode_$73538_calldata_ptr",
                              "typeString": "struct Motherlode calldata"
                            }
                          ],
                          "expression": {
                            "id": 23037,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1425:3:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 23038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1429:6:105",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1425:10:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 23040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1425:22:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 23036,
                      "name": "getEntitiesWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23044,
                        104
                      ],
                      "referencedDeclaration": 104,
                      "src": "1404:20:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (uint256[] memory)"
                      }
                    },
                    "id": 23041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:44:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 23035,
                  "id": 23042,
                  "nodeType": "Return",
                  "src": "1397:51:105"
                }
              ]
            },
            "functionSelector": "d3e0f834",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntitiesWithValue",
            "nameLocation": "1291:20:105",
            "parameters": {
              "id": 23031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23030,
                  "mutability": "mutable",
                  "name": "motherlode",
                  "nameLocation": "1332:10:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 23044,
                  "src": "1312:30:105",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Motherlode_$73538_calldata_ptr",
                    "typeString": "struct Motherlode"
                  },
                  "typeName": {
                    "id": 23029,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23028,
                      "name": "Motherlode",
                      "nameLocations": [
                        "1312:10:105"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73538,
                      "src": "1312:10:105"
                    },
                    "referencedDeclaration": 73538,
                    "src": "1312:10:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Motherlode_$73538_storage_ptr",
                      "typeString": "struct Motherlode"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1311:32:105"
            },
            "returnParameters": {
              "id": 23035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23034,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23044,
                  "src": "1373:16:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23032,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1373:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23033,
                    "nodeType": "ArrayTypeName",
                    "src": "1373:9:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1372:18:105"
            },
            "scope": 23045,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22878,
              "name": "Component",
              "nameLocations": [
                "267:9:105"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 262,
              "src": "267:9:105"
            },
            "id": 22879,
            "nodeType": "InheritanceSpecifier",
            "src": "267:9:105"
          }
        ],
        "canonicalName": "MotherlodeComponent",
        "contractDependencies": [
          74062,
          74228
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          23045,
          262,
          73830,
          76563,
          74266,
          2125,
          76119,
          76602,
          75995,
          1180,
          75862,
          2168,
          76129
        ],
        "name": "MotherlodeComponent",
        "nameLocation": "244:19:105",
        "scope": 23046,
        "usedErrors": [
          73630,
          76488,
          76599,
          76601
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 105
}