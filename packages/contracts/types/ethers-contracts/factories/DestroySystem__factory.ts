/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DestroySystem, DestroySystemInterface } from "../DestroySystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "coord",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200161a3803806200161a83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000c9617901c565b5050505062000292565b600062000126620001ef60201b62000d271760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61137880620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063cb6cbba7146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610ff2565b6100cf565b60405161007191906110a5565b60405180910390f35b610082610b8c565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004611120565b610bd1565b6100cd6100c8366004611161565b610c1a565b005b60606000828060200190518101906100e7919061119e565b600080549192509061012f9073ffffffffffffffffffffffffffffffffffffffff167f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b1843106610d4b565b60008054919250906101779073ffffffffffffffffffffffffffffffffffffffff167f30f1c358b0a577824afcc8e464bcbd763eba254820a547b425765e75cc511f1e610d4b565b60008054919250906101bf9073ffffffffffffffffffffffffffffffffffffffff167f0d469bcaf5f43a6290ca2906ecdeb5ef80d7723e8cad27045bddb6e1eb9da435610d4b565b60008054919250906102079073ffffffffffffffffffffffffffffffffffffffff167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c7540610d4b565b600080549192509061024f9073ffffffffffffffffffffffffffffffffffffffff167f3ee10300fdf6d2b8c2d0e95fa7b5b8c50aa50e011ba55c2da6a5bccfeafb0340610d4b565b60008054919250906102979073ffffffffffffffffffffffffffffffffffffffff167fe95fc307e3922a4ed7e1a9d135b2e79aad91e806428d8c7ec9a376dfc8aede5e610d4b565b6040517fbf3bf26a0000000000000000000000000000000000000000000000000000000081528851600390810b600483015260208a0151900b602482015290915060009073ffffffffffffffffffffffffffffffffffffffff88169063bf3bf26a90604401600060405180830381865afa158015610319573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261035f91908101906111d3565b905060028151106103f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f5b44657374726f7953797374656d5d2043616e6e6f742064657374726f79206d60448201527f756c7469706c652074696c6573206174206f6e6365000000000000000000000060648201526084015b60405180910390fd5b8051600114610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f5b44657374726f7953797374656d5d2043616e6e6f742064657374726f79207460448201527f696c6520617420616e20656d70747920636f6f7264696e61746500000000000060648201526084016103ee565b8473ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e826000815181106104b7576104b7611279565b60200260200101516040518263ffffffff1660e01b81526004016104dd91815260200190565b602060405180830381865afa1580156104fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051e91906112a8565b156105ab578473ffffffffffffffffffffffffffffffffffffffff16634cc822158260008151811061055257610552611279565b60200260200101516040518263ffffffff1660e01b815260040161057891815260200190565b600060405180830381600087803b15801561059257600080fd5b505af11580156105a6573d6000803e3d6000fd5b505050505b60008573ffffffffffffffffffffffffffffffffffffffff1663fbdfa1ea836000815181106105dc576105dc611279565b60200260200101516040518263ffffffff1660e01b815260040161060291815260200190565b600060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261066591908101906111d3565b8051909150156107165760005b8151811015610714578673ffffffffffffffffffffffffffffffffffffffff16634cc822158383815181106106a9576106a9611279565b60200260200101516040518263ffffffff1660e01b81526004016106cf91815260200190565b600060405180830381600087803b1580156106e957600080fd5b505af11580156106fd573d6000803e3d6000fd5b50505050808061070c906112ca565b915050610672565b505b7fd1951468cf9e9494d5703385454c036cef4267b4bf50da6ae1b4239c5fa946d360001c8773ffffffffffffffffffffffffffffffffffffffff16630ff4c9168460008151811061076957610769611279565b60200260200101516040518263ffffffff1660e01b815260040161078f91815260200190565b602060405180830381865afa1580156107ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d09190611329565b0361089d57600080546108199073ffffffffffffffffffffffffffffffffffffffff167fe458f11f65f682a3ca2a47dc42132280325cc5080104dfc7fadff5901e10856e610d4b565b6040517f4cc8221500000000000000000000000000000000000000000000000000000000815233600482015290915073ffffffffffffffffffffffffffffffffffffffff821690634cc8221590602401600060405180830381600087803b15801561088357600080fd5b505af1158015610897573d6000803e3d6000fd5b50505050505b8773ffffffffffffffffffffffffffffffffffffffff16634cc82215836000815181106108cc576108cc611279565b60200260200101516040518263ffffffff1660e01b81526004016108f291815260200190565b600060405180830381600087803b15801561090c57600080fd5b505af1158015610920573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff16634cc822158360008151811061095357610953611279565b60200260200101516040518263ffffffff1660e01b815260040161097991815260200190565b600060405180830381600087803b15801561099357600080fd5b505af11580156109a7573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff16634cc82215836000815181106109da576109da611279565b60200260200101516040518263ffffffff1660e01b8152600401610a0091815260200190565b600060405180830381600087803b158015610a1a57600080fd5b505af1158015610a2e573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16634cc8221583600081518110610a6157610a61611279565b60200260200101516040518263ffffffff1660e01b8152600401610a8791815260200190565b600060405180830381600087803b158015610aa157600080fd5b505af1158015610ab5573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634cc8221583600081518110610ae857610ae8611279565b60200260200101516040518263ffffffff1660e01b8152600401610b0e91815260200190565b600060405180830381600087803b158015610b2857600080fd5b505af1158015610b3c573d6000803e3d6000fd5b5050505081600081518110610b5357610b53611279565b6020026020010151604051602001610b6d91815260200190565b6040516020818303038152906040529950505050505050505050919050565b6000610bcc7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6060610c1482604051602001610c0091908151600390810b8252602092830151900b9181019190915260400190565b6040516020818303038152906040526100cf565b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c8a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c9381610e97565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610dbb573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e0191908101906111d3565b90508051600003610e6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016103ee565b610e8f81600081518110610e8457610e84611279565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610c93928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610f9d57610f9d610f4b565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610fea57610fea610f4b565b604052919050565b6000602080838503121561100557600080fd5b823567ffffffffffffffff8082111561101d57600080fd5b818501915085601f83011261103157600080fd5b81358181111561104357611043610f4b565b611073847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610fa3565b9150808252868482850101111561108957600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156110d2578581018301518582016040015282016110b6565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b8060030b8114610c9357600080fd5b60006040828403121561113257600080fd5b61113a610f7a565b823561114581611111565b8152602083013561115581611111565b60208201529392505050565b60006020828403121561117357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461119757600080fd5b9392505050565b6000604082840312156111b057600080fd5b6111b8610f7a565b82516111c381611111565b8152602083015161115581611111565b600060208083850312156111e657600080fd5b825167ffffffffffffffff808211156111fe57600080fd5b818501915085601f83011261121257600080fd5b81518181111561122457611224610f4b565b8060051b9150611235848301610fa3565b818152918301840191848101908884111561124f57600080fd5b938501935b8385101561126d57845182529385019390850190611254565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156112ba57600080fd5b8151801515811461119757600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611322577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60006020828403121561133b57600080fd5b505191905056fea2646970667358221220f31e62b639c06de5e2faeb9d6003311b715e29c0f9328ff33eb237a43088d26c64736f6c63430008110033";

type DestroySystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestroySystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestroySystem__factory extends ContractFactory {
  constructor(...args: DestroySystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DestroySystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<DestroySystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): DestroySystem {
    return super.attach(address) as DestroySystem;
  }
  override connect(signer: Signer): DestroySystem__factory {
    return super.connect(signer) as DestroySystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestroySystemInterface {
    return new utils.Interface(_abi) as DestroySystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DestroySystem {
    return new Contract(address, _abi, signerOrProvider) as DestroySystem;
  }
}
