/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DestroySystem, DestroySystemInterface } from "../DestroySystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "coord",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001515380380620015158339810160408190526200003491620001dc565b8181620000413362000149565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200021b565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8680549092161790555050505062000242565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001d957600080fd5b50565b60008060408385031215620001f057600080fd5b8251620001fd81620001c3565b60208401519092506200021081620001c3565b809150509250929050565b6000602082840312156200022e57600080fd5b81516200023b81620001c3565b9392505050565b6112c380620002526000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063cb6cbba7146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610f3d565b6100cf565b6040516100719190610ff0565b60405180910390f35b610082610b8c565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b536600461106b565b610bd1565b6100cd6100c83660046110ac565b610c1a565b005b60606000828060200190518101906100e791906110e9565b600080549192509061012f9073ffffffffffffffffffffffffffffffffffffffff167f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b1843106610c96565b60008054919250906101779073ffffffffffffffffffffffffffffffffffffffff167f30f1c358b0a577824afcc8e464bcbd763eba254820a547b425765e75cc511f1e610c96565b60008054919250906101bf9073ffffffffffffffffffffffffffffffffffffffff167f0d469bcaf5f43a6290ca2906ecdeb5ef80d7723e8cad27045bddb6e1eb9da435610c96565b60008054919250906102079073ffffffffffffffffffffffffffffffffffffffff167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c7540610c96565b600080549192509061024f9073ffffffffffffffffffffffffffffffffffffffff167f3ee10300fdf6d2b8c2d0e95fa7b5b8c50aa50e011ba55c2da6a5bccfeafb0340610c96565b60008054919250906102979073ffffffffffffffffffffffffffffffffffffffff167fe95fc307e3922a4ed7e1a9d135b2e79aad91e806428d8c7ec9a376dfc8aede5e610c96565b6040517fbf3bf26a0000000000000000000000000000000000000000000000000000000081528851600390810b600483015260208a0151900b602482015290915060009073ffffffffffffffffffffffffffffffffffffffff88169063bf3bf26a90604401600060405180830381865afa158015610319573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261035f919081019061111e565b905060028151106103f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f5b44657374726f7953797374656d5d2043616e6e6f742064657374726f79206d60448201527f756c7469706c652074696c6573206174206f6e6365000000000000000000000060648201526084015b60405180910390fd5b8051600114610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f5b44657374726f7953797374656d5d2043616e6e6f742064657374726f79207460448201527f696c6520617420616e20656d70747920636f6f7264696e61746500000000000060648201526084016103ee565b8473ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e826000815181106104b7576104b76111c4565b60200260200101516040518263ffffffff1660e01b81526004016104dd91815260200190565b602060405180830381865afa1580156104fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051e91906111f3565b156105ab578473ffffffffffffffffffffffffffffffffffffffff16634cc8221582600081518110610552576105526111c4565b60200260200101516040518263ffffffff1660e01b815260040161057891815260200190565b600060405180830381600087803b15801561059257600080fd5b505af11580156105a6573d6000803e3d6000fd5b505050505b60008573ffffffffffffffffffffffffffffffffffffffff1663fbdfa1ea836000815181106105dc576105dc6111c4565b60200260200101516040518263ffffffff1660e01b815260040161060291815260200190565b600060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610665919081019061111e565b8051909150156107165760005b8151811015610714578673ffffffffffffffffffffffffffffffffffffffff16634cc822158383815181106106a9576106a96111c4565b60200260200101516040518263ffffffff1660e01b81526004016106cf91815260200190565b600060405180830381600087803b1580156106e957600080fd5b505af11580156106fd573d6000803e3d6000fd5b50505050808061070c90611215565b915050610672565b505b7fd1951468cf9e9494d5703385454c036cef4267b4bf50da6ae1b4239c5fa946d360001c8773ffffffffffffffffffffffffffffffffffffffff16630ff4c91684600081518110610769576107696111c4565b60200260200101516040518263ffffffff1660e01b815260040161078f91815260200190565b602060405180830381865afa1580156107ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d09190611274565b0361089d57600080546108199073ffffffffffffffffffffffffffffffffffffffff167fe458f11f65f682a3ca2a47dc42132280325cc5080104dfc7fadff5901e10856e610c96565b6040517f4cc8221500000000000000000000000000000000000000000000000000000000815233600482015290915073ffffffffffffffffffffffffffffffffffffffff821690634cc8221590602401600060405180830381600087803b15801561088357600080fd5b505af1158015610897573d6000803e3d6000fd5b50505050505b8773ffffffffffffffffffffffffffffffffffffffff16634cc82215836000815181106108cc576108cc6111c4565b60200260200101516040518263ffffffff1660e01b81526004016108f291815260200190565b600060405180830381600087803b15801561090c57600080fd5b505af1158015610920573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff16634cc8221583600081518110610953576109536111c4565b60200260200101516040518263ffffffff1660e01b815260040161097991815260200190565b600060405180830381600087803b15801561099357600080fd5b505af11580156109a7573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff16634cc82215836000815181106109da576109da6111c4565b60200260200101516040518263ffffffff1660e01b8152600401610a0091815260200190565b600060405180830381600087803b158015610a1a57600080fd5b505af1158015610a2e573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16634cc8221583600081518110610a6157610a616111c4565b60200260200101516040518263ffffffff1660e01b8152600401610a8791815260200190565b600060405180830381600087803b158015610aa157600080fd5b505af1158015610ab5573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634cc8221583600081518110610ae857610ae86111c4565b60200260200101516040518263ffffffff1660e01b8152600401610b0e91815260200190565b600060405180830381600087803b158015610b2857600080fd5b505af1158015610b3c573d6000803e3d6000fd5b5050505081600081518110610b5357610b536111c4565b6020026020010151604051602001610b6d91815260200190565b6040516020818303038152906040529950505050505050505050919050565b6000610bcc7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6060610c1482604051602001610c0091908151600390810b8252602092830151900b9181019190915260400190565b6040516020818303038152906040526100cf565b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c8a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c9381610de2565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610d06573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d4c919081019061111e565b90508051600003610db9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016103ee565b610dda81600081518110610dcf57610dcf6111c4565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610c93928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610ee857610ee8610e96565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610f3557610f35610e96565b604052919050565b60006020808385031215610f5057600080fd5b823567ffffffffffffffff80821115610f6857600080fd5b818501915085601f830112610f7c57600080fd5b813581811115610f8e57610f8e610e96565b610fbe847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610eee565b91508082528684828501011115610fd457600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561101d57858101830151858201604001528201611001565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b8060030b8114610c9357600080fd5b60006040828403121561107d57600080fd5b611085610ec5565b82356110908161105c565b815260208301356110a08161105c565b60208201529392505050565b6000602082840312156110be57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146110e257600080fd5b9392505050565b6000604082840312156110fb57600080fd5b611103610ec5565b825161110e8161105c565b815260208301516110a08161105c565b6000602080838503121561113157600080fd5b825167ffffffffffffffff8082111561114957600080fd5b818501915085601f83011261115d57600080fd5b81518181111561116f5761116f610e96565b8060051b9150611180848301610eee565b818152918301840191848101908884111561119a57600080fd5b938501935b838510156111b85784518252938501939085019061119f565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561120557600080fd5b815180151581146110e257600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361126d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60006020828403121561128657600080fd5b505191905056fea264697066735822122027533939e96829a8c818f2d691eb827356e28ee3ff9a75a2aa6bbbaf3806829864736f6c63430008130033";

type DestroySystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestroySystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestroySystem__factory extends ContractFactory {
  constructor(...args: DestroySystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DestroySystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<DestroySystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): DestroySystem {
    return super.attach(address) as DestroySystem;
  }
  override connect(signer: Signer): DestroySystem__factory {
    return super.connect(signer) as DestroySystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestroySystemInterface {
    return new utils.Interface(_abi) as DestroySystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DestroySystem {
    return new Contract(address, _abi, signerOrProvider) as DestroySystem;
  }
}
