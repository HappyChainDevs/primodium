/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  RegisterSystem,
  RegisterSystemInterface,
} from "../RegisterSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "enum RegisterType",
        name: "registerType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "requirement",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e00380380610e0083398101604081905261002f916101ce565b818161003a3361013c565b6001600160a01b0381161561004f57806100b1565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b19190610208565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8680549092161790555050505061022c565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811681146101cb57600080fd5b50565b600080604083850312156101e157600080fd5b82516101ec816101b6565b60208401519092506101fd816101b6565b809150509250929050565b60006020828403121561021a57600080fd5b8151610225816101b6565b9392505050565b610bc58061023b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806309c5eabe1461005c5780638b246a5b146100855780638da5cb5b14610099578063f2fde38b146100b9578063f6cd7a01146100ce575b600080fd5b61006f61006a366004610863565b6100e1565b60405161007c91906108f8565b60405180910390f35b61006f610093366004610863565b50606090565b6100a16105fc565b6040516001600160a01b03909116815260200161007c565b6100cc6100c736600461095b565b610634565b005b61006f6100dc36600461098c565b61068a565b6060600080600080858060200190518101906100fd91906109dd565b600154939750919550935091506001600160a01b031633146101725760405162461bcd60e51b815260206004820152602360248201527f73797374656d2063616e206f6e6c792062652063616c6c65642076696120576f6044820152621c9b1960ea1b60648201526084015b60405180910390fd5b600083600181111561018657610186610a30565b14806101a3575060018360018111156101a1576101a1610a30565b145b6101de5760405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964207479706560a01b6044820152606401610169565b8060000361021b5760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b6044820152606401610169565b6001600160a01b0382166102635760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b6044820152606401610169565b60008084600181111561027857610278610a30565b146102b8576000546102b3906001600160a01b03167f017c816a964927a00e050edd780dcf113ca2756dfa9e9fda94a05c140d9317b06106c3565b6102c5565b6000546001600160a01b03165b905060006001600160a01b038416604051636667bd4760e11b8152600481018290529091506001600160a01b0383169063cccf7a8e90602401602060405180830381865afa15801561031b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033f9190610a46565b1561038c5760405162461bcd60e51b815260206004820152601960248201527f656e7469747920616c72656164792072656769737465726564000000000000006044820152606401610169565b604051637defd0f560e11b8152600481018490526000906001600160a01b0384169063fbdfa1ea90602401600060405180830381865afa1580156103d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103fc9190810190610a68565b90508051600014806104ac5750805160011480156104ac5750866001600160a01b03166104408260008151811061043557610435610b0e565b602002602001015190565b6001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a19190610b24565b6001600160a01b0316145b61050b5760405162461bcd60e51b815260206004820152602a60248201527f696420616c7265616479207265676973746572656420616e642063616c6c6572604482015269103737ba1037bbb732b960b11b6064820152608401610169565b805160010361058f57826001600160a01b0316634cc822158260008151811061053657610536610b0e565b60200260200101516040518263ffffffff1660e01b815260040161055c91815260200190565b600060405180830381600087803b15801561057657600080fd5b505af115801561058a573d6000803e3d6000fd5b505050505b604051631ab06ee560e01b815260048101839052602481018590526001600160a01b03841690631ab06ee590604401600060405180830381600087803b1580156105d857600080fd5b505af11580156105ec573d6000803e3d6000fd5b5050505050505050505050919050565b600061062f7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b0316331461067e57604051632f7a8ee160e01b815260040160405180910390fd5b6106878161079a565b50565b60606106ba858585856040516020016106a69493929190610b41565b6040516020818303038152906040526100e1565b95945050505050565b604051637defd0f560e11b81526004810182905260009081906001600160a01b0385169063fbdfa1ea90602401600060405180830381865afa15801561070d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107359190810190610a68565b9050805160000361077c5760405162461bcd60e51b81526020600482015260116024820152701a59081b9bdd081c9959da5cdd195c9959607a1b6044820152606401610169565b6107928160008151811061043557610435610b0e565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161068792849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561085b5761085b61081c565b604052919050565b6000602080838503121561087657600080fd5b823567ffffffffffffffff8082111561088e57600080fd5b818501915085601f8301126108a257600080fd5b8135818111156108b4576108b461081c565b6108c6601f8201601f19168501610832565b915080825286848285010111156108dc57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561092557858101830151858201604001528201610909565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461068757600080fd5b60006020828403121561096d57600080fd5b813561097881610946565b9392505050565b6002811061068757600080fd5b600080600080608085870312156109a257600080fd5b84356109ad81610946565b935060208501356109bd8161097f565b925060408501356109cd81610946565b9396929550929360600135925050565b600080600080608085870312156109f357600080fd5b84516109fe81610946565b6020860151909450610a0f8161097f565b6040860151909350610a2081610946565b6060959095015193969295505050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215610a5857600080fd5b8151801515811461097857600080fd5b60006020808385031215610a7b57600080fd5b825167ffffffffffffffff80821115610a9357600080fd5b818501915085601f830112610aa757600080fd5b815181811115610ab957610ab961081c565b8060051b9150610aca848301610832565b8181529183018401918481019088841115610ae457600080fd5b938501935b83851015610b0257845182529385019390850190610ae9565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610b3657600080fd5b815161097881610946565b6001600160a01b038581168252608082019060028610610b7157634e487b7160e01b600052602160045260246000fd5b8560208401528085166040840152508260608301529594505050505056fea2646970667358221220c695ef9f57d2f3413668514fde372f11b045f8e0ae7d11103e2cf0735b9838fd64736f6c63430008130033";

type RegisterSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegisterSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RegisterSystem__factory extends ContractFactory {
  constructor(...args: RegisterSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RegisterSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<RegisterSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): RegisterSystem {
    return super.attach(address) as RegisterSystem;
  }
  override connect(signer: Signer): RegisterSystem__factory {
    return super.connect(signer) as RegisterSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegisterSystemInterface {
    return new utils.Interface(_abi) as RegisterSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RegisterSystem {
    return new Contract(address, _abi, signerOrProvider) as RegisterSystem;
  }
}
