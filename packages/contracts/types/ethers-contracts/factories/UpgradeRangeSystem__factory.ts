/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UpgradeRangeSystem,
  UpgradeRangeSystemInterface,
} from "../UpgradeRangeSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620020a9380380620020a98339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b611e5380620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063e1df4ba6146100a7578063f2fde38b146100af575b600080fd5b61006461005f366004611929565b6100c4565b60405161007191906119cd565b60405180910390f35b6100826107bf565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b610064610804565b6100c26100bd366004611a40565b61081f565b005b60603360006100f27fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e61089b565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916836040518263ffffffff1660e01b815260040161012c91815260200190565b602060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d9190611a76565b905060006101c26040518060400160405280601281526020017f72657365617263682e457870616e73696f6e00000000000000000000000000008152508360016101b79190611ac0565b63ffffffff166108c5565b600080549192509061020a9073ffffffffffffffffffffffffffffffffffffffff167f7b57b44498c6155c2cddd885fdb0bd8919e1aaa941c53d7f9870e332c474b187610917565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029c9190611ae4565b61032d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f5b5570677261646552616e676553797374656d5d20546563686e6f6c6f67792060448201527f6e6f74207265676973746572656400000000000000000000000000000000000060648201526084015b60405180910390fd5b6001546103519073ffffffffffffffffffffffffffffffffffffffff168584610a63565b6103dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5b5570677261646552616e676553797374656d5d204d61696e42617365206c6560448201527f76656c20726571756972656d656e74206e6f74206d65740000000000000000006064820152608401610324565b6000546104209073ffffffffffffffffffffffffffffffffffffffff167ff5bd2f5cb6567cf0fa832e8e7971a94af009d0ec1e329976b883c7ab50488278610917565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e836040518263ffffffff1660e01b815260040161045a91815260200190565b602060405180830381865afa158015610477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049b9190611ae4565b156106ce57600180546104ca9173ffffffffffffffffffffffffffffffffffffffff9091169086908590610c41565b610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f5b5570677261646552616e676553797374656d5d204e6f7420656e6f7567682060448201527f7265736f757263657320746f20726573656172636800000000000000000000006064820152608401610324565b600154604080517f0d59332e00000000000000000000000000000000000000000000000000000000815290516106119273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa1580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb9190611b06565b7f260bed7a4ae2c80f17d6f2234fcc01f312c59c50933985489f350f675fc3ed14610917565b6040517f6ad0ccab0000000000000000000000000000000000000000000000000000000081523360048201526024810184905273ffffffffffffffffffffffffffffffffffffffff9190911690636ad0ccab906044016000604051808303816000875af1158015610686573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106cc9190810190611b23565b505b6106f77fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e61089b565b73ffffffffffffffffffffffffffffffffffffffff1663d923c3c48561071e866001611ac0565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b15801561077a57600080fd5b505af115801561078e573d6000803e3d6000fd5b505060408051600160208201520191506107a59050565b604051602081830303815290604052945050505050919050565b60006107ff7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6040805160008152602081019091526060906107ff906100c4565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461088f576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610898816111f9565b50565b600080546108bf9073ffffffffffffffffffffffffffffffffffffffff1683610917565b92915050565b600082826040516020016108da929190611b91565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610987573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109cd9190810190611c3d565b90508051600003610a3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610324565b610a5b81600081518110610a5057610a50611c72565b602002602001015190565b949350505050565b600080610afe8573ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad89190611b06565b7fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e610917565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610b6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b909190611ae4565b610b9e576001915050610c3a565b6000610baa8686611202565b63ffffffff1690508173ffffffffffffffffffffffffffffffffffffffff16630ff4c916856040518263ffffffff1660e01b8152600401610bed91815260200190565b602060405180830381865afa158015610c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2e9190611a76565b63ffffffff1611159150505b9392505050565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527ff5bd2f5cb6567cf0fa832e8e7971a94af009d0ec1e329976b883c7ab504882786004820152600090819073ffffffffffffffffffffffffffffffffffffffff871690634f27da1890602401602060405180830381865afa158015610cd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf49190611b06565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527ffba48a04766694c16713a414735f83be9cb20bbb29b5e18846cc8f1510640845600482015290915060009073ffffffffffffffffffffffffffffffffffffffff881690634f27da1890602401602060405180830381865afa158015610d84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da89190611b06565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905290915073ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa158015610e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3a9190611ae4565b610e4957600192505050610a5b565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527f222d9674c2fee077bc82c84232803a9168906e2be25c4560d094c76895b8a432600482015260009073ffffffffffffffffffffffffffffffffffffffff891690634f27da1890602401602060405180830381865afa158015610ed6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efa9190611b06565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527fe95fc307e3922a4ed7e1a9d135b2e79aad91e806428d8c7ec9a376dfc8aede5e600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8a1690634f27da1890602401602060405180830381865afa158015610f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fae9190611b06565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810189905290915060009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401600060405180830381865afa15801561101f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110659190810190611ca1565b905060005b8151518110156111e8576000888360200151838151811061108d5761108d611c72565b602002602001015161109f9190611d91565b905060006110ca846000015184815181106110bc576110bc611c72565b60200260200101518d61151c565b905060006110d88883611538565b905060006110e68884611538565b63ffffffff1611156111ac576110fc8683611664565b6111069043611db9565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff891690630ff4c91690602401602060405180830381865afa158015611171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111959190611a76565b61119f9190611d91565b6111a99082611ac0565b90505b8063ffffffff168363ffffffff1611156111d25760009950505050505050505050610a5b565b50505080806111e090611dcc565b91505061106a565b5060019a9950505050505050505050565b61089881611790565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527f84dcd47dfd0ba519a03bd44d032054d6f29f79700587b112a577b94d6440fa666004820152600090819073ffffffffffffffffffffffffffffffffffffffff851690634f27da1890602401602060405180830381865afa158015611291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b59190611b06565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015611323573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113479190611ae4565b6113555760009150506108bf565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa1580156113c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e79190611e04565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e600482015290915073ffffffffffffffffffffffffffffffffffffffff861690634f27da1890602401602060405180830381865afa158015611474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114989190611b06565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916826040518263ffffffff1660e01b81526004016114d291815260200190565b602060405180830381865afa1580156114ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115139190611a76565b95945050505050565b60408051602081018490529081018290526000906060016108da565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa1580156115a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ca9190611ae4565b6115d5576000610c3a565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa158015611640573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3a9190611a76565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa1580156116d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f69190611ae4565b611701576000610c3a565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa15801561176c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3a9190611e04565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561188e5761188e61183c565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156118db576118db61183c565b604052919050565b600067ffffffffffffffff8211156118fd576118fd61183c565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561193b57600080fd5b813567ffffffffffffffff81111561195257600080fd5b8201601f8101841361196357600080fd5b8035611976611971826118e3565b611894565b81815285602083850101111561198b57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156119c45781810151838201526020016119ac565b50506000910152565b60208152600082518060208401526119ec8160408501602087016119a9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461089857600080fd5b600060208284031215611a5257600080fd5b8135610c3a81611a1e565b805163ffffffff81168114611a7157600080fd5b919050565b600060208284031215611a8857600080fd5b610c3a82611a5d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff818116838216019080821115611add57611add611a91565b5092915050565b600060208284031215611af657600080fd5b81518015158114610c3a57600080fd5b600060208284031215611b1857600080fd5b8151610c3a81611a1e565b600060208284031215611b3557600080fd5b815167ffffffffffffffff811115611b4c57600080fd5b8201601f81018413611b5d57600080fd5b8051611b6b611971826118e3565b818152856020838501011115611b8057600080fd5b6115138260208301602086016119a9565b60008351611ba38184602088016119a9565b9190910191825250602001919050565b600067ffffffffffffffff821115611bcd57611bcd61183c565b5060051b60200190565b600082601f830112611be857600080fd5b81516020611bf861197183611bb3565b82815260059290921b84018101918181019086841115611c1757600080fd5b8286015b84811015611c325780518352918301918301611c1b565b509695505050505050565b600060208284031215611c4f57600080fd5b815167ffffffffffffffff811115611c6657600080fd5b610a5b84828501611bd7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020808385031215611cb457600080fd5b825167ffffffffffffffff80821115611ccc57600080fd5b9084019060408287031215611ce057600080fd5b611ce861186b565b825182811115611cf757600080fd5b611d0388828601611bd7565b8252508383015182811115611d1757600080fd5b80840193505086601f840112611d2c57600080fd5b82519150611d3c61197183611bb3565b82815260059290921b83018401918481019088841115611d5b57600080fd5b938501935b83851015611d8057611d7185611a5d565b82529385019390850190611d60565b948201949094529695505050505050565b63ffffffff818116838216028082169190828114611db157611db1611a91565b505092915050565b818103818111156108bf576108bf611a91565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dfd57611dfd611a91565b5060010190565b600060208284031215611e1657600080fd5b505191905056fea2646970667358221220f48787ba4a7458443abda5c59920e0a2309dd4948c363c80249395704d139cf164736f6c63430008130033";

type UpgradeRangeSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradeRangeSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradeRangeSystem__factory extends ContractFactory {
  constructor(...args: UpgradeRangeSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UpgradeRangeSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<UpgradeRangeSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): UpgradeRangeSystem {
    return super.attach(address) as UpgradeRangeSystem;
  }
  override connect(signer: Signer): UpgradeRangeSystem__factory {
    return super.connect(signer) as UpgradeRangeSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradeRangeSystemInterface {
    return new utils.Interface(_abi) as UpgradeRangeSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradeRangeSystem {
    return new Contract(address, _abi, signerOrProvider) as UpgradeRangeSystem;
  }
}
