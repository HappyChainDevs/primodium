/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AttackSystem, AttackSystemInterface } from "../AttackSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "attackEntity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "targetCoord",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "weaponKey",
        type: "uint256",
      },
    ],
    name: "attack",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "coord",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "targetCoord",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "weaponKey",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001eb338038062001eb383398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200120217901c565b5050505062000292565b600062000126620001ef60201b620012931760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b611c1180620002a26000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100a857806396589a43146100d5578063f2fde38b146100fa57600080fd5b806309c5eabe1461006c57806367cd725c14610095575b600080fd5b61007f61007a36600461179d565b61010f565b60405161008c9190611850565b60405180910390f35b61007f6100a336600461190d565b61075d565b6100b0610795565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008c565b6100e86100e336600461194b565b6107da565b60405160ff909116815260200161008c565b61010d610108366004611981565b611186565b005b606060008060008480602001905181019061012a91906119ee565b92509250925060006040518060a0016040528061018a60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff167f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b184310660001c6112b7565b73ffffffffffffffffffffffffffffffffffffffff90811682526000546020909201916101d891167f30f1c358b0a577824afcc8e464bcbd763eba254820a547b425765e75cc511f1e6112b7565b73ffffffffffffffffffffffffffffffffffffffff908116825260005460209092019161022691167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c75406112b7565b73ffffffffffffffffffffffffffffffffffffffff908116825260005460209092019161027491167fe95fc307e3922a4ed7e1a9d135b2e79aad91e806428d8c7ec9a376dfc8aede5e6112b7565b73ffffffffffffffffffffffffffffffffffffffff90811682526000546020909201916102c291167f2fc9fa89c3e33fdaa5feead211018b3d0b1d3edd613228f7f320915fddd8d0396112b7565b73ffffffffffffffffffffffffffffffffffffffff1681525090506000816000015173ffffffffffffffffffffffffffffffffffffffff1663bf3bf26a866040518263ffffffff1660e01b815260040161031c9190611a2c565b600060405180830381865afa158015610339573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261037f9190810190611a4d565b90508051600114610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5b41747461636b53797374656d5d2043616e6e6f742061747461636b2066726f60448201527f6d20616e20656d7074792074696c65000000000000000000000000000000000060648201526084015b60405180910390fd5b6000826020015173ffffffffffffffffffffffffffffffffffffffff16630ff4c9168360008151811061044c5761044c611af3565b60200260200101516040518263ffffffff1660e01b815260040161047291815260200190565b602060405180830381865afa15801561048f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b39190611b22565b90506104be81611405565b61054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f5b41747461636b53797374656d5d2043616e6e6f742061747461636b2066726f60448201527f6d2061206e6f6e2d73696c6f2074696c65000000000000000000000000000000606482015260840161040e565b6000836040015173ffffffffffffffffffffffffffffffffffffffff16630ff4c9168460008151811061057f5761057f611af3565b60200260200101516040518263ffffffff1660e01b81526004016105a591815260200190565b602060405180830381865afa1580156105c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e69190611b22565b9050338114610677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5b41747461636b53797374656d5d2043616e6e6f742061747461636b2066726f60448201527f6d20612074696c6520796f7520646f206e6f74206f776e000000000000000000606482015260840161040e565b61068085611456565b61070c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5b41747461636b53797374656d5d20496e76616c696420776561706f6e206b6560448201527f7900000000000000000000000000000000000000000000000000000000000000606482015260840161040e565b6107318360008151811061072257610722611af3565b602002602001015187876107da565b6040805160ff909216602083015201604051602081830303815290604052975050505050505050919050565b606061078b84848460405160200161077793929190611b3b565b60405160208183030381529060405261010f565b90505b9392505050565b60006107d57f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6040805160a081019091526000805490918291819061082f9073ffffffffffffffffffffffffffffffffffffffff167f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b18431066112b7565b73ffffffffffffffffffffffffffffffffffffffff908116825260005460209092019161087d91167f30f1c358b0a577824afcc8e464bcbd763eba254820a547b425765e75cc511f1e6112b7565b73ffffffffffffffffffffffffffffffffffffffff90811682526000546020909201916108cb91167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c75406112b7565b73ffffffffffffffffffffffffffffffffffffffff908116825260005460209092019161091991167fe95fc307e3922a4ed7e1a9d135b2e79aad91e806428d8c7ec9a376dfc8aede5e6112b7565b73ffffffffffffffffffffffffffffffffffffffff908116825260005460209092019161096791167f2fc9fa89c3e33fdaa5feead211018b3d0b1d3edd613228f7f320915fddd8d0396112b7565b73ffffffffffffffffffffffffffffffffffffffff90811690915260008054929350916109b591167ffba48a04766694c16713a414735f83be9cb20bbb29b5e18846cc8f15106408456112b7565b90506000826000015173ffffffffffffffffffffffffffffffffffffffff1663bf3bf26a876040518263ffffffff1660e01b81526004016109f69190611a2c565b600060405180830381865afa158015610a13573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a599190810190611a4d565b90508051600114610aec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f5b41747461636b53797374656d5d2043616e6e6f742061747461636b2066726f60448201527f6d20616e20656d7074792074696c650000000000000000000000000000000000606482015260840161040e565b6000836040015173ffffffffffffffffffffffffffffffffffffffff16630ff4c91683600081518110610b2157610b21611af3565b60200260200101516040518263ffffffff1660e01b8152600401610b4791815260200190565b602060405180830381865afa158015610b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b889190611b22565b9050338103610c19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f5b41747461636b53797374656d5d2043616e6e6f742061747461636b20796f7560448201527f72206f776e20656e746974790000000000000000000000000000000000000000606482015260840161040e565b6000610c25878a6114fb565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905290915073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa158015610c93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb79190611b7f565b15610e06576040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa158015610d2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4e9190611b22565b90508015610df15773ffffffffffffffffffffffffffffffffffffffff8516631ab06ee583610d7e600185611ba1565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b158015610dd457600080fd5b505af1158015610de8573d6000803e3d6000fd5b50505050610e00565b6000965050505050505061078e565b50610e14565b60009550505050505061078e565b846080015173ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e84600081518110610e4757610e47611af3565b60200260200101516040518263ffffffff1660e01b8152600401610e6d91815260200190565b602060405180830381865afa158015610e8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eae9190611b7f565b1561101a576000856080015173ffffffffffffffffffffffffffffffffffffffff16630ff4c91685600081518110610ee857610ee8611af3565b60200260200101516040518263ffffffff1660e01b8152600401610f0e91815260200190565b602060405180830381865afa158015610f2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4f9190611b22565b9050801561101457856080015173ffffffffffffffffffffffffffffffffffffffff16631ab06ee585600081518110610f8a57610f8a611af3565b6020026020010151610f9b8b61157b565b610fa59085611ba1565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b158015610ffb57600080fd5b505af115801561100f573d6000803e3d6000fd5b505050505b50611177565b6000856020015173ffffffffffffffffffffffffffffffffffffffff16630ff4c9168560008151811061104f5761104f611af3565b60200260200101516040518263ffffffff1660e01b815260040161107591815260200190565b602060405180830381865afa158015611092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b69190611b22565b9050856080015173ffffffffffffffffffffffffffffffffffffffff16631ab06ee5856000815181106110eb576110eb611af3565b60200260200101516110fc8b61157b565b611107906064611ba1565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b15801561115d57600080fd5b505af1158015611171573d6000803e3d6000fd5b50505050505b50600198975050505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146111f6576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111ff81611642565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015611327573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261136d9190810190611a4d565b905080516000036113da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161040e565b6113fb816000815181106113f0576113f0611af3565b602002602001015190565b9150505b92915050565b60007f9d47592473d41327e0ccb0bb0dc69c74c6ac29b77beb0fc78a1c84d6f0bcf87b8214806113ff5750507f256c9a7f845a3a11dcb51c159d88557005a005a679ce6cd10a583b028e9d368b1490565b60007f4952f11b5e88ffd88b7a0231ee67228cf0d58eb081bf31517c674f44264c783f8214806114a557507fec80ff155d880c151528d536ae07261be7e0f0ec79c8853fb5205684633239dc82145b806114cf57507f0c3016c3f177a1aea6cba33a3ccb8e01cef39a514cc6bb0b1223aecdbbbd349282145b806113ff5750507fdf054c8ff646f055efa75559586847c60a9365d45c0aa564f013bf3ad4f3621f1490565b6000828260405160200161153e92919091825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b60007fb6ad0ee4a17700277485fdce1198dd730f2a714f7e40ceae8398b0bbd9b387c182016115ac57506014919050565b7f137f00eaa277f3eaead72ac951f8d9e4181f0f1386377ac04adfa97b9ccdc62482016115db57506064919050565b7ff3cfe93c0e885e5159345cc5c33471fe310c65aeb33944f4eddc51324442cb6e820161160a575060c8919050565b7f20fab37009b90faa1058aaa6a797b839f56c9a2ba3f55a9b0fec40c52b0c9de1820161163a575061012c919050565b506000919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516111ff928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611748576117486116f6565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611795576117956116f6565b604052919050565b600060208083850312156117b057600080fd5b823567ffffffffffffffff808211156117c857600080fd5b818501915085601f8301126117dc57600080fd5b8135818111156117ee576117ee6116f6565b61181e847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161174e565b9150808252868482850101111561183457600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561187d57858101830151858201604001528201611861565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b8060030b81146111ff57600080fd5b6000604082840312156118dd57600080fd5b6118e5611725565b905081356118f2816118bc565b81526020820135611902816118bc565b602082015292915050565b600080600060a0848603121561192257600080fd5b61192c85856118cb565b925061193b85604086016118cb565b9150608084013590509250925092565b60008060006080848603121561196057600080fd5b8335925061197185602086016118cb565b9150606084013590509250925092565b60006020828403121561199357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461078e57600080fd5b6000604082840312156119c957600080fd5b6119d1611725565b905081516119de816118bc565b81526020820151611902816118bc565b600080600060a08486031215611a0357600080fd5b611a0d85856119b7565b9250611a1c85604086016119b7565b9150608084015190509250925092565b604081016113ff8284805160030b8252602081015160030b60208301525050565b60006020808385031215611a6057600080fd5b825167ffffffffffffffff80821115611a7857600080fd5b818501915085601f830112611a8c57600080fd5b815181811115611a9e57611a9e6116f6565b8060051b9150611aaf84830161174e565b8181529183018401918481019088841115611ac957600080fd5b938501935b83851015611ae757845182529385019390850190611ace565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611b3457600080fd5b5051919050565b60a08101611b5c8286805160030b8252602081015160030b60208301525050565b8351600390810b604084015260209094015190930b606082015260800152919050565b600060208284031215611b9157600080fd5b8151801515811461078e57600080fd5b818103818111156113ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122075a4bcb9e70be6d05a9449ff88df807a92621174a3b74dce514afbe5c27e652064736f6c63430008110033";

type AttackSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttackSystem__factory extends ContractFactory {
  constructor(...args: AttackSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AttackSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<AttackSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): AttackSystem {
    return super.attach(address) as AttackSystem;
  }
  override connect(signer: Signer): AttackSystem__factory {
    return super.connect(signer) as AttackSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackSystemInterface {
    return new utils.Interface(_abi) as AttackSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AttackSystem {
    return new Contract(address, _abi, signerOrProvider) as AttackSystem;
  }
}
