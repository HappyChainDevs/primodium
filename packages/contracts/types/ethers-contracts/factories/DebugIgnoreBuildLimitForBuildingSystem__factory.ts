/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DebugIgnoreBuildLimitForBuildingSystem,
  DebugIgnoreBuildLimitForBuildingSystemInterface,
} from "../DebugIgnoreBuildLimitForBuildingSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "buildingId",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cab380380610cab83398101604081905261002f916101ce565b818161003a3361013c565b6001600160a01b0381161561004f57806100b1565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b19190610208565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8680549092161790555050505061022c565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811681146101cb57600080fd5b50565b600080604083850312156101e157600080fd5b82516101ec816101b6565b60208401519092506101fd816101b6565b809150509250929050565b60006020828403121561021a57600080fd5b8151610225816101b6565b9392505050565b610a708061023b6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f36600461078f565b6100cf565b6040516100719190610842565b60405180910390f35b6100646100883660046108ae565b6102f2565b610095610324565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c83660046108e9565b610369565b005b60606000828060200190518101906100e7919061090d565b60015490915061010c9073ffffffffffffffffffffffffffffffffffffffff166103e5565b610177576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f7420696e206465627567206d6f646500000000000000000000000000000060448201526064015b60405180910390fd5b600080546101bb9073ffffffffffffffffffffffffffffffffffffffff167f5ceb6515ed98d13c424cf71200ed3a18f9d8499e8d3e67d9ef7924b68de3e8cf610511565b6040517f60fe47b10000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff8216906360fe47b190602401600060405180830381600087803b15801561022657600080fd5b505af115801561023a573d6000803e3d6000fd5b50506040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff84169250630ff4c9169150602401602060405180830381865afa1580156102a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cd9190610926565b6040805191151560208301520160405160208183030381529060405292505050919050565b606061031e8260405160200161030a91815260200190565b6040516020818303038152906040526100cf565b92915050565b60006103647f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146103d9576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e28161065d565b50565b600061047f8273ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104599190610948565b7fc3e18fdee44dca3d8fa1615250f268046d17fbc35f417d176d5c09d7ca8d3202610511565b6040517fcccf7a8e00000000000000000000000000000000000000000000000000000000815261060d600482015273ffffffffffffffffffffffffffffffffffffffff919091169063cccf7a8e90602401602060405180830381865afa1580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031e9190610926565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610581573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105c79190810190610965565b90508051600003610634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161016e565b6106558160008151811061064a5761064a610a0b565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103e2928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561078757610787610711565b604052919050565b600060208083850312156107a257600080fd5b823567ffffffffffffffff808211156107ba57600080fd5b818501915085601f8301126107ce57600080fd5b8135818111156107e0576107e0610711565b610810847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610740565b9150808252868482850101111561082657600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561086f57858101830151858201604001528201610853565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000602082840312156108c057600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146103e257600080fd5b6000602082840312156108fb57600080fd5b8135610906816108c7565b9392505050565b60006020828403121561091f57600080fd5b5051919050565b60006020828403121561093857600080fd5b8151801515811461090657600080fd5b60006020828403121561095a57600080fd5b8151610906816108c7565b6000602080838503121561097857600080fd5b825167ffffffffffffffff8082111561099057600080fd5b818501915085601f8301126109a457600080fd5b8151818111156109b6576109b6610711565b8060051b91506109c7848301610740565b81815291830184019184810190888411156109e157600080fd5b938501935b838510156109ff578451825293850193908501906109e6565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220f9d431cc0b3bde3de02053f7c2597c1662d3b9b308a7981eb3684760ffe2e0a964736f6c63430008130033";

type DebugIgnoreBuildLimitForBuildingSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebugIgnoreBuildLimitForBuildingSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebugIgnoreBuildLimitForBuildingSystem__factory extends ContractFactory {
  constructor(
    ...args: DebugIgnoreBuildLimitForBuildingSystemConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DebugIgnoreBuildLimitForBuildingSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<DebugIgnoreBuildLimitForBuildingSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): DebugIgnoreBuildLimitForBuildingSystem {
    return super.attach(address) as DebugIgnoreBuildLimitForBuildingSystem;
  }
  override connect(
    signer: Signer
  ): DebugIgnoreBuildLimitForBuildingSystem__factory {
    return super.connect(
      signer
    ) as DebugIgnoreBuildLimitForBuildingSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebugIgnoreBuildLimitForBuildingSystemInterface {
    return new utils.Interface(
      _abi
    ) as DebugIgnoreBuildLimitForBuildingSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DebugIgnoreBuildLimitForBuildingSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DebugIgnoreBuildLimitForBuildingSystem;
  }
}
