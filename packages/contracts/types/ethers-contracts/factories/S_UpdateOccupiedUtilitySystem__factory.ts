/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_UpdateOccupiedUtilitySystem,
  S_UpdateOccupiedUtilitySystemInterface,
} from "../S_UpdateOccupiedUtilitySystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "buildingEntity",
        type: "uint256",
      },
      {
        internalType: "enum EActionType",
        name: "actionType",
        type: "uint8",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d8b38038062001d8b8339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b611b3580620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806327b450991461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f36600461156b565b6100cf565b604051610071919061161e565b60405180910390f35b6100646100883660046116b9565b6110a2565b6100956110d8565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c83660046116fb565b61111d565b005b606061018b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610141573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101659190611718565b7f57247228bbd93ac6953378fea0f421ebc4978d448f7383f1a2816e6ca6e2894d611199565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102a95750600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161027a9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610230573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102549190611718565b7f70fd2d99c63cf9e9a219a7907c6a0bc55a0323de6daf9c9d0b03e2d7250d73d2611199565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806103995750600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161036a9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610320573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103449190611718565b7ff39d315320cdfe464ad36c5d26133acfadb3c7e2d9a6ac9e6bb331cb612f42a8611199565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806104895750600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161045a9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610410573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104349190611718565b7fd573ac88b34a4d827762c3f1e7dc53ea2b602480271c42f976cd9097a3985a01611199565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152607b60248201527f535f5570646174655574696c69747950726f64756374696f6e53797374656d3a60448201527f204f6e6c79204275696c6453797374656d2c20537061776e53797374656d2c2060648201527f557067726164654275696c64696e6753797374656d2c2044657374726f79537960848201527f7374656d2063616e2063616c6c20746869732066756e6374696f6e000000000060a482015260c4015b60405180910390fd5b60008060008480602001905181019061057f9190611735565b9250925092506000610641600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b9190611718565b7f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5611199565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916846040518263ffffffff1660e01b815260040161067b91815260200190565b602060405180830381865afa158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc919061176d565b9050600061077a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610730573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190611718565b7fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e611199565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916856040518263ffffffff1660e01b81526004016107b491815260200190565b602060405180830381865afa1580156107d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f5919061179f565b9050600073ffffffffffffffffffffffffffffffffffffffff86166001546040517f4f27da180000000000000000000000000000000000000000000000000000000081527f391ed979ad48ef48aa0e385aaffe280328c830054d2153bba1cf3da0b7bf45ab600482015291925060009173ffffffffffffffffffffffffffffffffffffffff90911690634f27da1890602401602060405180830381865afa1580156108a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c89190611718565b60408051602080820188905263ffffffff871682840152825180830384018152606090920190925280519101209091506000906001546040517f4f27da180000000000000000000000000000000000000000000000000000000081527f4f2e352c22f4d6e8661eee4a98890fa6dfead6e74bc680ee4c52da1cc198d7c9600482015291925060009173ffffffffffffffffffffffffffffffffffffffff90911690634f27da1890602401602060405180830381865afa15801561098f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b39190611718565b905060018760028111156109c9576109c96117ba565b03610cb8576000610a11876109df600189611818565b63ffffffff16604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810182905290915060009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401600060405180830381865afa158015610a82573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ac891908101906118cb565b516040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905290915060009073ffffffffffffffffffffffffffffffffffffffff871690630ff4c91690602401600060405180830381865afa158015610b3a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b8091908101906118cb565b60200151905060005b8251811015610cb3576000610bde848381518110610ba957610ba96119bb565b60200260200101518a604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b90508573ffffffffffffffffffffffffffffffffffffffff1663d923c3c482858581518110610c0f57610c0f6119bb565b6020026020010151610c218a866112dd565b610c2b9190611818565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b158015610c8757600080fd5b505af1158015610c9b573d6000803e3d6000fd5b50505050508080610cab906119ea565b915050610b89565b505050505b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401600060405180830381865afa158015610d26573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d6c91908101906118cb565b516040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401600060405180830381865afa158015610dde573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e2491908101906118cb565b60200151905060005b8251811015611091576000610e82848381518110610e4d57610e4d6119bb565b602002602001015189604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b90506000838381518110610e9857610e986119bb565b6020026020010151905060016002811115610eb557610eb56117ba565b8c6002811115610ec757610ec76117ba565b03610fa35773ffffffffffffffffffffffffffffffffffffffff8816630ff4c916610ef78d6109df60018f611818565b6040518263ffffffff1660e01b8152600401610f1591815260200190565b600060405180830381865afa158015610f32573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f7891908101906118cb565b602001518381518110610f8d57610f8d6119bb565b602002602001015181610fa09190611818565b90505b73ffffffffffffffffffffffffffffffffffffffff861663d923c3c48360028f6002811115610fd457610fd46117ba565b14610ff35783610fe48a876112dd565b610fee9190611a22565b611008565b83610ffe8a876112dd565b6110089190611818565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b15801561106457600080fd5b505af1158015611078573d6000803e3d6000fd5b5050505050508080611089906119ea565b915050610e2d565b505050505050505050505050919050565b60606110d08484846040516020016110bc93929190611a3f565b6040516020818303038152906040526100cf565b949350505050565b60006111187f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461118d576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61119681611410565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015611209573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261124f9190810190611aa8565b905080516000036112bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161055d565b6110d0816000815181106112d2576112d26119bb565b602002602001015190565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa15801561134b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136f9190611add565b61137a576000611409565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa1580156113e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611409919061179f565b9392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051611196928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611516576115166114c4565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611563576115636114c4565b604052919050565b6000602080838503121561157e57600080fd5b823567ffffffffffffffff8082111561159657600080fd5b818501915085601f8301126115aa57600080fd5b8135818111156115bc576115bc6114c4565b6115ec847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161151c565b9150808252868482850101111561160257600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561164b5785810183015185820160400152820161162f565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461119657600080fd5b6003811061119657600080fd5b6000806000606084860312156116ce57600080fd5b83356116d98161168a565b92506020840135915060408401356116f0816116ac565b809150509250925092565b60006020828403121561170d57600080fd5b81356114098161168a565b60006020828403121561172a57600080fd5b81516114098161168a565b60008060006060848603121561174a57600080fd5b83516117558161168a565b6020850151604086015191945092506116f0816116ac565b60006020828403121561177f57600080fd5b5051919050565b805163ffffffff8116811461179a57600080fd5b919050565b6000602082840312156117b157600080fd5b61140982611786565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff828116828216039080821115611835576118356117e9565b5092915050565b600067ffffffffffffffff821115611856576118566114c4565b5060051b60200190565b600082601f83011261187157600080fd5b815160206118866118818361183c565b61151c565b82815260059290921b840181019181810190868411156118a557600080fd5b8286015b848110156118c057805183529183019183016118a9565b509695505050505050565b600060208083850312156118de57600080fd5b825167ffffffffffffffff808211156118f657600080fd5b908401906040828703121561190a57600080fd5b6119126114f3565b82518281111561192157600080fd5b61192d88828601611860565b825250838301518281111561194157600080fd5b80840193505086601f84011261195657600080fd5b825191506119666118818361183c565b82815260059290921b8301840191848101908884111561198557600080fd5b938501935b838510156119aa5761199b85611786565b8252938501939085019061198a565b948201949094529695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a1b57611a1b6117e9565b5060010190565b63ffffffff818116838216019080821115611835576118356117e9565b73ffffffffffffffffffffffffffffffffffffffff84168152602081018390526060810160038310611a9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826040830152949350505050565b600060208284031215611aba57600080fd5b815167ffffffffffffffff811115611ad157600080fd5b6110d084828501611860565b600060208284031215611aef57600080fd5b8151801515811461140957600080fdfea26469706673582212206f48e1b3bf604ed4731500d06adecde2345b15931cb4cddcdfafbf22fb2ccb0a64736f6c63430008130033";

type S_UpdateOccupiedUtilitySystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_UpdateOccupiedUtilitySystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_UpdateOccupiedUtilitySystem__factory extends ContractFactory {
  constructor(...args: S_UpdateOccupiedUtilitySystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_UpdateOccupiedUtilitySystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_UpdateOccupiedUtilitySystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_UpdateOccupiedUtilitySystem {
    return super.attach(address) as S_UpdateOccupiedUtilitySystem;
  }
  override connect(signer: Signer): S_UpdateOccupiedUtilitySystem__factory {
    return super.connect(signer) as S_UpdateOccupiedUtilitySystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_UpdateOccupiedUtilitySystemInterface {
    return new utils.Interface(_abi) as S_UpdateOccupiedUtilitySystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_UpdateOccupiedUtilitySystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_UpdateOccupiedUtilitySystem;
  }
}
