/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_UpdateOccupiedUtilitySystem,
  S_UpdateOccupiedUtilitySystemInterface,
} from "../S_UpdateOccupiedUtilitySystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "buildingEntity",
        type: "uint256",
      },
      {
        internalType: "enum EActionType",
        name: "actionType",
        type: "uint8",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001819380380620018198339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b6115c380620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806327b450991461007a5780638da5cb5b1461008d578063f2fde38b146100ad575b600080fd5b61006461005f3660046110d2565b6100c2565b6040516100719190611167565b60405180910390f35b6100646100883660046111d7565b610d5b565b610095610d91565b6040516001600160a01b039091168152602001610071565b6100c06100bb366004611219565b610dc9565b005b6060610164600160009054906101000a90046001600160a01b03166001600160a01b0316630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e9190611236565b7f57247228bbd93ac6953378fea0f421ebc4978d448f7383f1a2816e6ca6e2894d610e1f565b6001600160a01b0316336001600160a01b031614806102285750600154604080516306ac999760e11b81529051610213926001600160a01b031691630d59332e9160048083019260209291908290030181865afa1580156101c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ed9190611236565b7f70fd2d99c63cf9e9a219a7907c6a0bc55a0323de6daf9c9d0b03e2d7250d73d2610e1f565b6001600160a01b0316336001600160a01b0316145b806102d85750600154604080516306ac999760e11b815290516102c3926001600160a01b031691630d59332e9160048083019260209291908290030181865afa158015610279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029d9190611236565b7ff39d315320cdfe464ad36c5d26133acfadb3c7e2d9a6ac9e6bb331cb612f42a8610e1f565b6001600160a01b0316336001600160a01b0316145b806103885750600154604080516306ac999760e11b81529051610373926001600160a01b031691630d59332e9160048083019260209291908290030181865afa158015610329573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034d9190611236565b7fd573ac88b34a4d827762c3f1e7dc53ea2b602480271c42f976cd9097a3985a01610e1f565b6001600160a01b0316336001600160a01b0316145b61044b5760405162461bcd60e51b815260206004820152607b60248201527f535f5570646174655574696c69747950726f64756374696f6e53797374656d3a60448201527f204f6e6c79204275696c6453797374656d2c20537061776e53797374656d2c2060648201527f557067726164654275696c64696e6753797374656d2c2044657374726f79537960848201527f7374656d2063616e2063616c6c20746869732066756e6374696f6e000000000060a482015260c4015b60405180910390fd5b6000806000848060200190518101906104649190611253565b925092509250600061050c600160009054906101000a90046001600160a01b03166001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e69190611236565b7f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5610e1f565b6001600160a01b0316630ff4c916846040518263ffffffff1660e01b815260040161053991815260200190565b602060405180830381865afa158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a919061128b565b9050600061061e600160009054906101000a90046001600160a01b03166001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f89190611236565b7fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e610e1f565b6001600160a01b0316630ff4c916856040518263ffffffff1660e01b815260040161064b91815260200190565b602060405180830381865afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c91906112bd565b905060006001600160a01b0386166001546040516309e4fb4360e31b81527f391ed979ad48ef48aa0e385aaffe280328c830054d2153bba1cf3da0b7bf45ab60048201529192506000916001600160a01b0390911690634f27da1890602401602060405180830381865afa158015610708573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072c9190611236565b60408051602080820188905263ffffffff871682840152825180830384018152606090920190925280519101209091506000906001546040516309e4fb4360e31b81527f4f2e352c22f4d6e8661eee4a98890fa6dfead6e74bc680ee4c52da1cc198d7c960048201529192506000916001600160a01b0390911690634f27da1890602401602060405180830381865afa1580156107cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f19190611236565b90506001876002811115610807576108076112d8565b03610a4957600061084f8761081d600189611304565b63ffffffff16604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040516307fa648b60e11b8152600481018290529091506000906001600160a01b03861690630ff4c91690602401600060405180830381865afa15801561089a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108c291908101906113b7565b516040516307fa648b60e11b8152600481018490529091506000906001600160a01b03871690630ff4c91690602401600060405180830381865afa15801561090e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261093691908101906113b7565b60200151905060005b8251811015610a4457600061099484838151811061095f5761095f6114a7565b60200260200101518a604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b9050856001600160a01b031663d923c3c4828585815181106109b8576109b86114a7565b60200260200101516109ca8a86610ef9565b6109d49190611304565b6040516001600160e01b031960e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b158015610a1857600080fd5b505af1158015610a2c573d6000803e3d6000fd5b50505050508080610a3c906114bd565b91505061093f565b505050505b6040516307fa648b60e11b8152600481018390526000906001600160a01b03851690630ff4c91690602401600060405180830381865afa158015610a91573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ab991908101906113b7565b516040516307fa648b60e11b8152600481018590529091506000906001600160a01b03861690630ff4c91690602401600060405180830381865afa158015610b05573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b2d91908101906113b7565b60200151905060005b8251811015610d4a576000610b8b848381518110610b5657610b566114a7565b602002602001015189604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b90506000838381518110610ba157610ba16114a7565b6020026020010151905060016002811115610bbe57610bbe6112d8565b8c6002811115610bd057610bd06112d8565b03610c81576001600160a01b038816630ff4c916610bf38d61081d60018f611304565b6040518263ffffffff1660e01b8152600401610c1191815260200190565b600060405180830381865afa158015610c2e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c5691908101906113b7565b602001518381518110610c6b57610c6b6114a7565b602002602001015181610c7e9190611304565b90505b6001600160a01b03861663d923c3c48360028f6002811115610ca557610ca56112d8565b14610cc45783610cb58a87610ef9565b610cbf91906114d6565b610cd9565b83610ccf8a87610ef9565b610cd99190611304565b6040516001600160e01b031960e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b158015610d1d57600080fd5b505af1158015610d31573d6000803e3d6000fd5b5050505050508080610d42906114bd565b915050610b36565b505050505050505050505050919050565b6060610d89848484604051602001610d75939291906114f3565b6040516020818303038152906040526100c2565b949350505050565b6000610dc47f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b03163314610e1357604051632f7a8ee160e01b815260040160405180910390fd5b610e1c81610fe0565b50565b604051637defd0f560e11b81526004810182905260009081906001600160a01b0385169063fbdfa1ea90602401600060405180830381865afa158015610e69573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e919190810190611536565b90508051600003610ed85760405162461bcd60e51b81526020600482015260116024820152701a59081b9bdd081c9959da5cdd195c9959607a1b6044820152606401610442565b610d8981600081518110610eee57610eee6114a7565b602002602001015190565b604051636667bd4760e11b8152600481018290526000906001600160a01b0384169063cccf7a8e90602401602060405180830381865afa158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f65919061156b565b610f70576000610fd9565b6040516307fa648b60e11b8152600481018390526001600160a01b03841690630ff4c91690602401602060405180830381865afa158015610fb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd991906112bd565b9392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610e1c92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561109b5761109b611062565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156110ca576110ca611062565b604052919050565b600060208083850312156110e557600080fd5b823567ffffffffffffffff808211156110fd57600080fd5b818501915085601f83011261111157600080fd5b81358181111561112357611123611062565b611135601f8201601f191685016110a1565b9150808252868482850101111561114b57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561119457858101830151858201604001528201611178565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0381168114610e1c57600080fd5b60038110610e1c57600080fd5b6000806000606084860312156111ec57600080fd5b83356111f7816111b5565b925060208401359150604084013561120e816111ca565b809150509250925092565b60006020828403121561122b57600080fd5b8135610fd9816111b5565b60006020828403121561124857600080fd5b8151610fd9816111b5565b60008060006060848603121561126857600080fd5b8351611273816111b5565b60208501516040860151919450925061120e816111ca565b60006020828403121561129d57600080fd5b5051919050565b805163ffffffff811681146112b857600080fd5b919050565b6000602082840312156112cf57600080fd5b610fd9826112a4565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b63ffffffff828116828216039080821115611321576113216112ee565b5092915050565b600067ffffffffffffffff82111561134257611342611062565b5060051b60200190565b600082601f83011261135d57600080fd5b8151602061137261136d83611328565b6110a1565b82815260059290921b8401810191818101908684111561139157600080fd5b8286015b848110156113ac5780518352918301918301611395565b509695505050505050565b600060208083850312156113ca57600080fd5b825167ffffffffffffffff808211156113e257600080fd5b90840190604082870312156113f657600080fd5b6113fe611078565b82518281111561140d57600080fd5b6114198882860161134c565b825250838301518281111561142d57600080fd5b80840193505086601f84011261144257600080fd5b8251915061145261136d83611328565b82815260059290921b8301840191848101908884111561147157600080fd5b938501935b8385101561149657611487856112a4565b82529385019390850190611476565b948201949094529695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016114cf576114cf6112ee565b5060010190565b63ffffffff818116838216019080821115611321576113216112ee565b6001600160a01b038416815260208101839052606081016003831061152857634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b60006020828403121561154857600080fd5b815167ffffffffffffffff81111561155f57600080fd5b610d898482850161134c565b60006020828403121561157d57600080fd5b81518015158114610fd957600080fdfea2646970667358221220f665e2dc95c4b24c214f290c8e57f7c616fa9ea4ce579c03e110723b9db6429164736f6c63430008130033";

type S_UpdateOccupiedUtilitySystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_UpdateOccupiedUtilitySystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_UpdateOccupiedUtilitySystem__factory extends ContractFactory {
  constructor(...args: S_UpdateOccupiedUtilitySystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_UpdateOccupiedUtilitySystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_UpdateOccupiedUtilitySystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_UpdateOccupiedUtilitySystem {
    return super.attach(address) as S_UpdateOccupiedUtilitySystem;
  }
  override connect(signer: Signer): S_UpdateOccupiedUtilitySystem__factory {
    return super.connect(signer) as S_UpdateOccupiedUtilitySystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_UpdateOccupiedUtilitySystemInterface {
    return new utils.Interface(_abi) as S_UpdateOccupiedUtilitySystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_UpdateOccupiedUtilitySystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_UpdateOccupiedUtilitySystem;
  }
}
