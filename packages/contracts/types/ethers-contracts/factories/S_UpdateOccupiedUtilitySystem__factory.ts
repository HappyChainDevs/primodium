/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_UpdateOccupiedUtilitySystem,
  S_UpdateOccupiedUtilitySystemInterface,
} from "../S_UpdateOccupiedUtilitySystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "buildingEntity",
        type: "uint256",
      },
      {
        internalType: "enum EActionType",
        name: "actionType",
        type: "uint8",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001826380380620018268339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b6115d080620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806327b450991461007a5780638da5cb5b1461008d578063f2fde38b146100ad575b600080fd5b61006461005f3660046110df565b6100c2565b6040516100719190611174565b60405180910390f35b6100646100883660046111e4565b610d68565b610095610d9e565b6040516001600160a01b039091168152602001610071565b6100c06100bb366004611226565b610dd6565b005b6060610164600160009054906101000a90046001600160a01b03166001600160a01b0316630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e9190611243565b7f57247228bbd93ac6953378fea0f421ebc4978d448f7383f1a2816e6ca6e2894d610e2c565b6001600160a01b0316336001600160a01b031614806102285750600154604080516306ac999760e11b81529051610213926001600160a01b031691630d59332e9160048083019260209291908290030181865afa1580156101c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ed9190611243565b7f70fd2d99c63cf9e9a219a7907c6a0bc55a0323de6daf9c9d0b03e2d7250d73d2610e2c565b6001600160a01b0316336001600160a01b0316145b806102d85750600154604080516306ac999760e11b815290516102c3926001600160a01b031691630d59332e9160048083019260209291908290030181865afa158015610279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029d9190611243565b7ff39d315320cdfe464ad36c5d26133acfadb3c7e2d9a6ac9e6bb331cb612f42a8610e2c565b6001600160a01b0316336001600160a01b0316145b806103885750600154604080516306ac999760e11b81529051610373926001600160a01b031691630d59332e9160048083019260209291908290030181865afa158015610329573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034d9190611243565b7fd573ac88b34a4d827762c3f1e7dc53ea2b602480271c42f976cd9097a3985a01610e2c565b6001600160a01b0316336001600160a01b0316145b61044b5760405162461bcd60e51b815260206004820152607b60248201527f535f5570646174655574696c69747950726f64756374696f6e53797374656d3a60448201527f204f6e6c79204275696c6453797374656d2c20537061776e53797374656d2c2060648201527f557067726164654275696c64696e6753797374656d2c2044657374726f79537960848201527f7374656d2063616e2063616c6c20746869732066756e6374696f6e000000000060a482015260c4015b60405180910390fd5b6000806000848060200190518101906104649190611260565b925092509250600061050c600160009054906101000a90046001600160a01b03166001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e69190611243565b7f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5610e2c565b6001600160a01b0316630ff4c916846040518263ffffffff1660e01b815260040161053991815260200190565b602060405180830381865afa158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a9190611298565b9050600061061e600160009054906101000a90046001600160a01b03166001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f89190611243565b7fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e610e2c565b6001600160a01b0316630ff4c916856040518263ffffffff1660e01b815260040161064b91815260200190565b602060405180830381865afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c91906112ca565b905060006001600160a01b0386166001546040516309e4fb4360e31b81527f391ed979ad48ef48aa0e385aaffe280328c830054d2153bba1cf3da0b7bf45ab60048201529192506000916001600160a01b0390911690634f27da1890602401602060405180830381865afa158015610708573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072c9190611243565b60408051602080820188905263ffffffff871682840152825180830384018152606090920190925280519101209091506000906001546040516309e4fb4360e31b81527f4f2e352c22f4d6e8661eee4a98890fa6dfead6e74bc680ee4c52da1cc198d7c960048201529192506000916001600160a01b0390911690634f27da1890602401602060405180830381865afa1580156107cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f19190611243565b9050606080600189600281111561080a5761080a6112e5565b03610b225760018763ffffffff161161087e5760405162461bcd60e51b815260206004820152603060248201527f43616e6e6f7420646f205570677261646520746f2061206c6576656c204c6f7760448201526f6572206f7220657175616c20746f203160801b6064820152608401610442565b60006108c18961088f60018b611311565b63ffffffff16604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b604051636667bd4760e11b8152600481018290529091506001600160a01b0387169063cccf7a8e90602401602060405180830381865afa158015610909573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092d9190611335565b15610b20576040516307fa648b60e11b8152600481018290526001600160a01b03871690630ff4c91690602401600060405180830381865afa158015610977573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261099f91908101906113e6565b516040516307fa648b60e11b8152600481018390529093506001600160a01b03871690630ff4c91690602401600060405180830381865afa1580156109e8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a1091908101906113e6565b60200151915060005b8351811015610b1e576000610a6e858381518110610a3957610a396114d6565b60200260200101518a604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b9050856001600160a01b031663d923c3c482868581518110610a9257610a926114d6565b6020026020010151610aa48a86610f06565b610aae9190611311565b6040516001600160e01b031960e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b158015610af257600080fd5b505af1158015610b06573d6000803e3d6000fd5b50505050508080610b16906114ec565b915050610a19565b505b505b6040516307fa648b60e11b8152600481018590526001600160a01b03861690630ff4c91690602401600060405180830381865afa158015610b67573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b8f91908101906113e6565b516040516307fa648b60e11b8152600481018690529092506001600160a01b03861690630ff4c91690602401600060405180830381865afa158015610bd8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c0091908101906113e6565b60200151905060005b8251811015610d57576000610c5e848381518110610c2957610c296114d6565b602002602001015189604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b90506000838381518110610c7457610c746114d6565b60200260200101519050856001600160a01b031663d923c3c483600280811115610ca057610ca06112e5565b8f6002811115610cb257610cb26112e5565b14610cd15783610cc28a87610f06565b610ccc9190611505565b610ce6565b83610cdc8a87610f06565b610ce69190611311565b6040516001600160e01b031960e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b158015610d2a57600080fd5b505af1158015610d3e573d6000803e3d6000fd5b5050505050508080610d4f906114ec565b915050610c09565b505050505050505050505050919050565b6060610d96848484604051602001610d8293929190611522565b6040516020818303038152906040526100c2565b949350505050565b6000610dd17f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b03163314610e2057604051632f7a8ee160e01b815260040160405180910390fd5b610e2981610fed565b50565b604051637defd0f560e11b81526004810182905260009081906001600160a01b0385169063fbdfa1ea90602401600060405180830381865afa158015610e76573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e9e9190810190611565565b90508051600003610ee55760405162461bcd60e51b81526020600482015260116024820152701a59081b9bdd081c9959da5cdd195c9959607a1b6044820152606401610442565b610d9681600081518110610efb57610efb6114d6565b602002602001015190565b604051636667bd4760e11b8152600481018290526000906001600160a01b0384169063cccf7a8e90602401602060405180830381865afa158015610f4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f729190611335565b610f7d576000610fe6565b6040516307fa648b60e11b8152600481018390526001600160a01b03841690630ff4c91690602401602060405180830381865afa158015610fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe691906112ca565b9392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610e2992849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156110a8576110a861106f565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156110d7576110d761106f565b604052919050565b600060208083850312156110f257600080fd5b823567ffffffffffffffff8082111561110a57600080fd5b818501915085601f83011261111e57600080fd5b8135818111156111305761113061106f565b611142601f8201601f191685016110ae565b9150808252868482850101111561115857600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156111a157858101830151858201604001528201611185565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0381168114610e2957600080fd5b60038110610e2957600080fd5b6000806000606084860312156111f957600080fd5b8335611204816111c2565b925060208401359150604084013561121b816111d7565b809150509250925092565b60006020828403121561123857600080fd5b8135610fe6816111c2565b60006020828403121561125557600080fd5b8151610fe6816111c2565b60008060006060848603121561127557600080fd5b8351611280816111c2565b60208501516040860151919450925061121b816111d7565b6000602082840312156112aa57600080fd5b5051919050565b805163ffffffff811681146112c557600080fd5b919050565b6000602082840312156112dc57600080fd5b610fe6826112b1565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b63ffffffff82811682821603908082111561132e5761132e6112fb565b5092915050565b60006020828403121561134757600080fd5b81518015158114610fe657600080fd5b600067ffffffffffffffff8211156113715761137161106f565b5060051b60200190565b600082601f83011261138c57600080fd5b815160206113a161139c83611357565b6110ae565b82815260059290921b840181019181810190868411156113c057600080fd5b8286015b848110156113db57805183529183019183016113c4565b509695505050505050565b600060208083850312156113f957600080fd5b825167ffffffffffffffff8082111561141157600080fd5b908401906040828703121561142557600080fd5b61142d611085565b82518281111561143c57600080fd5b6114488882860161137b565b825250838301518281111561145c57600080fd5b80840193505086601f84011261147157600080fd5b8251915061148161139c83611357565b82815260059290921b830184019184810190888411156114a057600080fd5b938501935b838510156114c5576114b6856112b1565b825293850193908501906114a5565b948201949094529695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016114fe576114fe6112fb565b5060010190565b63ffffffff81811683821601908082111561132e5761132e6112fb565b6001600160a01b038416815260208101839052606081016003831061155757634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b60006020828403121561157757600080fd5b815167ffffffffffffffff81111561158e57600080fd5b610d968482850161137b56fea26469706673582212206b887a09dedad3ad35a5913b28846925a6f65f2343a14ae776ce626a76a0f90f64736f6c63430008130033";

type S_UpdateOccupiedUtilitySystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_UpdateOccupiedUtilitySystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_UpdateOccupiedUtilitySystem__factory extends ContractFactory {
  constructor(...args: S_UpdateOccupiedUtilitySystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_UpdateOccupiedUtilitySystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_UpdateOccupiedUtilitySystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_UpdateOccupiedUtilitySystem {
    return super.attach(address) as S_UpdateOccupiedUtilitySystem;
  }
  override connect(signer: Signer): S_UpdateOccupiedUtilitySystem__factory {
    return super.connect(signer) as S_UpdateOccupiedUtilitySystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_UpdateOccupiedUtilitySystemInterface {
    return new utils.Interface(_abi) as S_UpdateOccupiedUtilitySystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_UpdateOccupiedUtilitySystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_UpdateOccupiedUtilitySystem;
  }
}
