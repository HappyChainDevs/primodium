/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BattleRaidResultComponent,
  BattleRaidResultComponentInterface,
} from "../BattleRaidResultComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "resources",
            type: "uint256[]",
          },
          {
            internalType: "uint32[]",
            name: "defenderValuesBeforeRaid",
            type: "uint32[]",
          },
          {
            internalType: "uint32[]",
            name: "raidedAmount",
            type: "uint32[]",
          },
        ],
        internalType: "struct RaidResult",
        name: "mines",
        type: "tuple",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "resources",
            type: "uint256[]",
          },
          {
            internalType: "uint32[]",
            name: "defenderValuesBeforeRaid",
            type: "uint32[]",
          },
          {
            internalType: "uint32[]",
            name: "raidedAmount",
            type: "uint32[]",
          },
        ],
        internalType: "struct RaidResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "indexer",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256[]",
            name: "resources",
            type: "uint256[]",
          },
          {
            internalType: "uint32[]",
            name: "defenderValuesBeforeRaid",
            type: "uint32[]",
          },
          {
            internalType: "uint32[]",
            name: "raidedAmount",
            type: "uint32[]",
          },
        ],
        internalType: "struct RaidResult",
        name: "value",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002bc138038062002bc1833981016040819052620000349162000262565b807f1b2fe01cda07de45f5d26ee59e97e01d843c2e77f9a6c8fbf6e356e3a05ec4118181620000633362000127565b60028190556001600160a01b038216156200008357620000838262000190565b5050604051620000939062000246565b604051809103906000f080158015620000b0573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055604051620000df9062000254565b604051809103906000f080158015620000fc573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b03929092169190911790555062000294915050565b60008051602062002ba183398151915280546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b60008051602062002ba1833981519152546001600160a01b03163314620001ca57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200022a57600080fd5b505af11580156200023f573d6000803e3d6000fd5b5050505050565b6106c98062001dcd83390190565b61070b806200249683390190565b6000602082840312156200027557600080fd5b81516001600160a01b03811681146200028d57600080fd5b9392505050565b611b2980620002a46000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638b282947116100ad578063b8bc073d11610071578063b8bc073d1461026e578063bf4fe57e1461028e578063cccf7a8e146102a1578063f2fb000a146102b4578063f2fde38b146102c757600080fd5b80638b282947146102165780638da5cb5b146102295780639d2c76b414610231578063af640d0f14610244578063b361be461461025b57600080fd5b80634fef6a38116100f45780634fef6a38146101a45780636b122fe0146101b75780636f60d2b5146101cd57806375c0669c146101e0578063861eb905146101f357600080fd5b80630ff4c9161461012657806330b67baa1461014f57806331b933b91461017a5780634cc822151461018f575b600080fd5b6101396101343660046110e3565b6102da565b604051610146919061113d565b60405180910390f35b600054610162906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b610182610341565b60405161014691906111c9565b6101a261019d3660046110e3565b6103b8565b005b6101a26101b236600461120d565b6103ea565b6101bf610466565b604051610146929190611299565b6101826101db36600461136a565b610661565b6101a26101ee36600461120d565b610691565b61020661020136600461120d565b610709565b6040519015158152602001610146565b6101a261022436600461145e565b61076c565b6101626107a0565b6101a261023f36600461120d565b6107aa565b61024d60025481565b604051908152602001610146565b6101826102693660046114a5565b61085e565b61028161027c3660046110e3565b6108d7565b60405161014691906114da565b6101a261029c36600461120d565b610979565b6102066102af3660046110e3565b6109f2565b6101a26102c23660046114ed565b610a60565b6101a26102d536600461120d565b610ab1565b6102fe60405180606001604052806060815260200160608152602001606081525090565b600080600061030c856108d7565b80602001905181019061031f919061162f565b6040805160608101825293845260208401929092529082015295945050505050565b60035460408051631043567360e21b815290516060926001600160a01b03169163410d59cc9160048083019260009291908290030181865afa15801561038b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103b391908101906116b7565b905090565b6103c133610709565b6103de5760405163203769ed60e11b815260040160405180910390fd5b6103e781610af3565b50565b6103f2610d1c565b6001600160a01b0316336001600160a01b03161461042357604051632f7a8ee160e01b815260040160405180910390fd5b6001600160a01b031660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c90960205260409020805460ff19166001179055565b60408051600380825260808201909252606091829190816020015b60608152602001906001900390816104815750506040805160038082526080820190925291935060208201606080368337019050509050604051806040016040528060098152602001687265736f757263657360b81b815250826000815181106104ed576104ed6116ec565b6020026020010181905250601f8160008151811061050d5761050d6116ec565b6020026020010190602181111561052657610526611283565b9081602181111561053957610539611283565b815250506040518060400160405280601881526020017f646566656e64657256616c7565734265666f726552616964000000000000000081525082600181518110610586576105866116ec565b6020026020010181905250601c816001815181106105a6576105a66116ec565b602002602001019060218111156105bf576105bf611283565b908160218111156105d2576105d2611283565b815250506040518060400160405280600c81526020016b1c985a591959105b5bdd5b9d60a21b8152508260028151811061060e5761060e6116ec565b6020026020010181905250601c8160028151811061062e5761062e6116ec565b6020026020010190602181111561064757610647611283565b9081602181111561065a5761065a611283565b9052509091565b606061068b8260405160200161067791906117bf565b60405160208183030381529060405261085e565b92915050565b61069a33610709565b6106b75760405163203769ed60e11b815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061068b57506107526107a0565b6001600160a01b0316826001600160a01b03161492915050565b61077533610709565b6107925760405163203769ed60e11b815260040160405180910390fd5b61079c8282610d4a565b5050565b60006103b3610d1c565b6107b2610d1c565b6001600160a01b0316336001600160a01b0316146107e357604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f3034770906044015b600060405180830381600087803b15801561084357600080fd5b505af1158015610857573d6000803e3d6000fd5b5050505050565b6004805482516020840120604051631e5b17a560e21b8152928301526060916001600160a01b039091169063796c5e9490602401600060405180830381865afa1580156108af573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261068b91908101906116b7565b60008181526001602052604090208054606091906108f490611835565b80601f016020809104026020016040519081016040528092919081815260200182805461092090611835565b801561096d5780601f106109425761010080835404028352916020019161096d565b820191906000526020600020905b81548152906001019060200180831161095057829003601f168201915b50505050509050919050565b610981610d1c565b6001600160a01b0316336001600160a01b0316146109b257604051632f7a8ee160e01b815260040160405180910390fd5b6001600160a01b031660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c90960205260409020805460ff19169055565b600354604051636667bd4760e11b8152600481018390526000916001600160a01b03169063cccf7a8e90602401602060405180830381865afa158015610a3c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b9190611869565b61079c82610a6e838061188b565b610a7b602086018661188b565b610a88604088018861188b565b604051602001610a9d969594939291906118d5565b60405160208183030381529060405261076c565b610ab9610d1c565b6001600160a01b0316336001600160a01b031614610aea57604051632f7a8ee160e01b815260040160405180910390fd5b6103e781610f49565b6004546000828152600160205260409081902090516001600160a01b03909216916385edea1391610b239161191e565b60405190819003812060e083901b6001600160e01b03191682526004820152602401602060405180830381865afa158015610b62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b869190611994565b600003610b905750565b6004546000828152600160205260409081902090516001600160a01b0390921691636526db7a91610bc09161191e565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101849052604401600060405180830381600087803b158015610c0357600080fd5b505af1158015610c17573d6000803e3d6000fd5b5050600354604051634cc8221560e01b8152600481018590526001600160a01b039091169250634cc822159150602401600060405180830381600087803b158015610c6157600080fd5b505af1158015610c75573d6000803e3d6000fd5b50505050610c8281610f52565b60005b60055481101561079c5760058181548110610ca257610ca26116ec565b600091825260209091200154604051634cc8221560e01b8152600481018490526001600160a01b0390911690634cc8221590602401600060405180830381600087803b158015610cf157600080fd5b505af1158015610d05573d6000803e3d6000fd5b505050508080610d14906119ad565b915050610c85565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b600354604051630801f16960e11b8152600481018490526001600160a01b0390911690631003e2d290602401600060405180830381600087803b158015610d9057600080fd5b505af1158015610da4573d6000803e3d6000fd5b50506004546000858152600160205260409081902090516001600160a01b039092169350636526db7a9250610dd89161191e565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101859052604401600060405180830381600087803b158015610e1b57600080fd5b505af1158015610e2f573d6000803e3d6000fd5b5050600480548451602086012060405163771602f760e01b815292830152602482018690526001600160a01b0316925063771602f79150604401600060405180830381600087803b158015610e8357600080fd5b505af1158015610e97573d6000803e3d6000fd5b50505050610ea58282610f9a565b60005b600554811015610f445760058181548110610ec557610ec56116ec565b6000918252602090912001546040516242d70760e31b81526001600160a01b0390911690630216b83890610eff90869086906004016119d4565b600060405180830381600087803b158015610f1957600080fd5b505af1158015610f2d573d6000803e3d6000fd5b505050508080610f3c906119ad565b915050610ea8565b505050565b6103e78161101b565b6000818152600160205260408120610f6991611095565b600054604051630de3b7b560e01b8152600481018390526001600160a01b0390911690630de3b7b590602401610829565b6000828152600160205260409020610fb28282611a33565b5060005460405163cfd3c57f60e01b81526001600160a01b039091169063cfd3c57f90610fe590859085906004016119d4565b600060405180830381600087803b158015610fff57600080fd5b505af1158015611013573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b5080546110a190611835565b6000825580601f106110b1575050565b601f0160209004906000526020600020908101906103e791905b808211156110df57600081556001016110cb565b5090565b6000602082840312156110f557600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561113257815163ffffffff1687529582019590820190600101611110565b509495945050505050565b6020808252825160608383015280516080840181905260009291820190839060a08601905b808310156111825783518252928401926001929092019190840190611162565b50838701519350601f199250828682030160408701526111a281856110fc565b935050506040850151818584030160608601526111bf83826110fc565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611201578351835292840192918401916001016111e5565b50909695505050505050565b60006020828403121561121f57600080fd5b81356001600160a01b038116811461123657600080fd5b9392505050565b6000815180845260005b8181101561126357602081850181015186830182015201611247565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156112f057605f198887030185526112de86835161123d565b955093820193908201906001016112c2565b50508584038187015286518085528782019482019350915060005b828110156113455784516022811061133357634e487b7160e01b600052602160045260246000fd5b8452938101939281019260010161130b565b5091979650505050505050565b60006060828403121561136457600080fd5b50919050565b60006020828403121561137c57600080fd5b813567ffffffffffffffff81111561139357600080fd5b61139f84828501611352565b949350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156113e6576113e66113a7565b604052919050565b600082601f8301126113ff57600080fd5b813567ffffffffffffffff811115611419576114196113a7565b61142c601f8201601f19166020016113bd565b81815284602083860101111561144157600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561147157600080fd5b82359150602083013567ffffffffffffffff81111561148f57600080fd5b61149b858286016113ee565b9150509250929050565b6000602082840312156114b757600080fd5b813567ffffffffffffffff8111156114ce57600080fd5b61139f848285016113ee565b602081526000611236602083018461123d565b6000806040838503121561150057600080fd5b82359150602083013567ffffffffffffffff81111561151e57600080fd5b61149b85828601611352565b600067ffffffffffffffff821115611544576115446113a7565b5060051b60200190565b600082601f83011261155f57600080fd5b8151602061157461156f8361152a565b6113bd565b82815260059290921b8401810191818101908684111561159357600080fd5b8286015b848110156115ae5780518352918301918301611597565b509695505050505050565b63ffffffff811681146103e757600080fd5b600082601f8301126115dc57600080fd5b815160206115ec61156f8361152a565b82815260059290921b8401810191818101908684111561160b57600080fd5b8286015b848110156115ae578051611622816115b9565b835291830191830161160f565b60008060006060848603121561164457600080fd5b835167ffffffffffffffff8082111561165c57600080fd5b6116688783880161154e565b9450602086015191508082111561167e57600080fd5b61168a878388016115cb565b935060408601519150808211156116a057600080fd5b506116ad868287016115cb565b9150509250925092565b6000602082840312156116c957600080fd5b815167ffffffffffffffff8111156116e057600080fd5b61139f8482850161154e565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261171957600080fd5b830160208101925035905067ffffffffffffffff81111561173957600080fd5b8060051b360382131561174b57600080fd5b9250929050565b81835260006001600160fb1b0383111561176b57600080fd5b8260051b80836020870137939093016020019392505050565b8183526000602080850194508260005b858110156111325781356117a7816115b9565b63ffffffff1687529582019590820190600101611794565b6020815260006117cf8384611702565b606060208501526117e4608085018284611752565b9150506117f46020850185611702565b601f198086850301604087015261180c848385611784565b935061181b6040880188611702565b9350915080868503016060870152506111bf838383611784565b600181811c9082168061184957607f821691505b60208210810361136457634e487b7160e01b600052602260045260246000fd5b60006020828403121561187b57600080fd5b8151801515811461123657600080fd5b6000808335601e198436030181126118a257600080fd5b83018035915067ffffffffffffffff8211156118bd57600080fd5b6020019150600581901b360382131561174b57600080fd5b6060815260006118e960608301888a611752565b82810360208401526118fc818789611784565b90508281036040840152611911818587611784565b9998505050505050505050565b600080835461192c81611835565b60018281168015611944576001811461195957611988565b60ff1984168752821515830287019450611988565b8760005260208060002060005b8581101561197f5781548a820152908401908201611966565b50505082870194505b50929695505050505050565b6000602082840312156119a657600080fd5b5051919050565b6000600182016119cd57634e487b7160e01b600052601160045260246000fd5b5060010190565b82815260406020820152600061139f604083018461123d565b601f821115610f4457600081815260208120601f850160051c81016020861015611a145750805b601f850160051c820191505b8181101561101357828155600101611a20565b815167ffffffffffffffff811115611a4d57611a4d6113a7565b611a6181611a5b8454611835565b846119ed565b602080601f831160018114611a965760008415611a7e5750858301515b600019600386901b1c1916600185901b178555611013565b600085815260208120601f198616915b82811015611ac557888601518255948401946001909101908401611aa6565b5085821015611ae35787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122030774d5f11c11a294482466daa9894ed676817eeba98938762f8fd07f40bd37064736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610621806100a86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e7cb6e11161005b5780638e7cb6e1146100f3578063949d225d1461011d578063cccf7a8e1461012e578063f2fde38b1461015157600080fd5b80631003e2d21461008d578063410d59cc146100a25780634cc82215146100c05780638da5cb5b146100d3575b600080fd5b6100a061009b36600461050b565b610164565b005b6100aa6101ef565b6040516100b79190610524565b60405180910390f35b6100a06100ce36600461050b565b610247565b6100db610374565b6040516001600160a01b0390911681526020016100b7565b61010661010136600461050b565b610383565b6040805192151583526020830191909152016100b7565b6000546040519081526020016100b7565b61014161013c36600461050b565b6103b6565b60405190151581526020016100b7565b6100a061015f366004610568565b610419565b61016c61045b565b6001600160a01b0316336001600160a01b03161461019d57604051632f7a8ee160e01b815260040160405180910390fd5b6101a6816103b6565b6101ec57600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190555b50565b6060600080548060200260200160405190810160405280929190818152602001828054801561023d57602002820191906000526020600020905b815481526020019060010190808311610229575b5050505050905090565b61024f61045b565b6001600160a01b0316336001600160a01b03161461028057604051632f7a8ee160e01b815260040160405180910390fd5b610289816103b6565b156101ec576000805461029e90600190610598565b815481106102ae576102ae6105bf565b906000526020600020015460006001600084815260200190815260200160002054815481106102df576102df6105bf565b60009182526020808320909101929092558281526001918290526040812054815490929190819084908110610316576103166105bf565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061035b5761035b6105d5565b6001900381819060005260206000200160009055905550565b600061037e61045b565b905090565b60008061038f836103b6565b61039e57506000928392509050565b50506000908152600160208190526040909120549091565b6000805481036103c857506000919050565b60008281526001602052604081205490036104045781600080815481106103f1576103f16105bf565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b61042161045b565b6001600160a01b0316336001600160a01b03161461045257604051632f7a8ee160e01b815260040160405180910390fd5b6101ec81610489565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516101ec92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561051d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561055c57835183529284019291840191600101610540565b50909695505050505050565b60006020828403121561057a57600080fd5b81356001600160a01b038116811461059157600080fd5b9392505050565b818103818111156105b957634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e26b625121584afbfcdd5a7c76a89bd07c2a082781c4635c0fc11c4dffdf9aed64736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610663806100a86000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806385edea131161005b57806385edea13146100d35780638da5cb5b14610101578063a0265ff814610121578063f2fde38b1461014457600080fd5b80636526db7a14610082578063771602f714610097578063796c5e94146100aa575b600080fd5b610095610090366004610531565b610157565b005b6100956100a5366004610531565b6102bd565b6100bd6100b8366004610553565b61033a565b6040516100ca919061056c565b60405180910390f35b6100f36100e1366004610553565b60009081526020819052604090205490565b6040519081526020016100ca565b61010961039a565b6040516001600160a01b0390911681526020016100ca565b61013461012f366004610531565b6103a9565b60405190151581526020016100ca565b6100956101523660046105b0565b61043c565b61015f610481565b6001600160a01b0316336001600160a01b03161461019057604051632f7a8ee160e01b815260040160405180910390fd5b61019a82826103a9565b156102b957600082815260208190526040902080546101bb906001906105e0565b815481106101cb576101cb610601565b6000918252602080832090910154848352828252604080842060018452818520868652909352909220548154811061020557610205610601565b60009182526020808320909101929092558381526001825260408082208483528084528183205486845283855291832085845293819052835491939092918490811061025357610253610601565b600091825260208083209091015483528281019390935260409182018120939093558483526001825280832084845282528083208390558483529082905290208054806102a2576102a2610617565b600190038181906000526020600020016000905590555b5050565b6102c5610481565b6001600160a01b0316336001600160a01b0316146102f657604051632f7a8ee160e01b815260040160405180910390fd5b61030082826103a9565b6102b95760009182526020828152604080842080546001808552838720868852855292862081905585845291820181558452922090910155565b6000818152602081815260409182902080548351818402810184019094528084526060939283018282801561038e57602002820191906000526020600020905b81548152602001906001019080831161037a575b50505050509050919050565b60006103a4610481565b905090565b60008281526020819052604081205481036103c657506000610436565b60008381526001602090815260408083208584529091528120549003610418576000838152602081905260408120805484929061040557610405610601565b9060005260206000200154149050610436565b50600082815260016020908152604080832084845290915290205415155b92915050565b610444610481565b6001600160a01b0316336001600160a01b03161461047557604051632f7a8ee160e01b815260040160405180910390fd5b61047e816104af565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161047e92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806040838503121561054457600080fd5b50508035926020909101359150565b60006020828403121561056557600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156105a457835183529284019291840191600101610588565b50909695505050505050565b6000602082840312156105c257600080fd5b81356001600160a01b03811681146105d957600080fd5b9392505050565b8181038181111561043657634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122074d2dbc3f020a29d6081fb9fcf69e8e3c85026be8658abafc11ba431c108e33464736f6c634300081300338a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460";

type BattleRaidResultComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BattleRaidResultComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BattleRaidResultComponent__factory extends ContractFactory {
  constructor(...args: BattleRaidResultComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BattleRaidResultComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<BattleRaidResultComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): BattleRaidResultComponent {
    return super.attach(address) as BattleRaidResultComponent;
  }
  override connect(signer: Signer): BattleRaidResultComponent__factory {
    return super.connect(signer) as BattleRaidResultComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BattleRaidResultComponentInterface {
    return new utils.Interface(_abi) as BattleRaidResultComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BattleRaidResultComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BattleRaidResultComponent;
  }
}
