/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ResearchSystem,
  ResearchSystemInterface,
} from "../ResearchSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "researchItem",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200195a3803806200195a8339810160408190526200003491620001dc565b8181620000413362000149565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200021b565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8680549092161790555050505062000242565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001d957600080fd5b50565b60008060408385031215620001f057600080fd5b8251620001fd81620001c3565b60208401519092506200021081620001c3565b809150509250929050565b6000602082840312156200022e57600080fd5b81516200023b81620001c3565b9392505050565b61170880620002526000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f3660046113da565b6100cf565b604051610071919061148d565b60405180910390f35b6100646100883660046114f9565b61069d565b6100956106cf565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611512565b610714565b005b60606000828060200190518101906100e79190611548565b600080549192509061012f9073ffffffffffffffffffffffffffffffffffffffff167ffba48a04766694c16713a414735f83be9cb20bbb29b5e18846cc8f1510640845610790565b60008054919250906101779073ffffffffffffffffffffffffffffffffffffffff167f260499b7630a3093f2f4ce16a340a578c70fc65603511dac57ee1b24a87e1ecd610790565b60008054919250906101bf9073ffffffffffffffffffffffffffffffffffffffff167fe082307e43314cb08ba9c88fe7cb7bb84208415d656da41d199ff8c1c7b0adce610790565b60008054919250906102079073ffffffffffffffffffffffffffffffffffffffff167f0842a184a814d4c9890dc4a7e03369a83e6e7490abc9f169e0062ff4011b8a23610790565b600080549192509061024f9073ffffffffffffffffffffffffffffffffffffffff167f1203294d5b2b02e65b2344f70a790c2cf726d3822e7f267d74f37f3dbe44a344610790565b60008054919250906102979073ffffffffffffffffffffffffffffffffffffffff167fefd95b731bdcc0cab498dd7b56526d6fc3bfdb6cf60ca7aa7080b8ffd6f093c7610790565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810189905290915073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015610305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103299190611561565b6103e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152605760248201527f5b526573656172636853797374656d5d2063616e206e6f74207265736561726360448201527f68206120746563686e6f6c6f6779207468617420646f6573206e6f742068617660648201527f65207265736f7572636520726571756972656d656e7473000000000000000000608482015260a4015b60405180910390fd5b6103eb8133896108dc565b610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5b526573656172636853797374656d5d204d61696e42617365206c6576656c2060448201527f726571756972656d656e74206e6f74206d65740000000000000000000000000060648201526084016103d7565b61048382868933610a24565b61050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f5b526573656172636853797374656d5d2052657365617263682072657175697260448201527f656d656e7473206e6f74206d657400000000000000000000000000000000000060648201526084016103d7565b61051b83878933610bec565b6105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f5b526573656172636853797374656d5d204e6f7420656e6f756768207265736f60448201527f757263657320746f20726573656172636800000000000000000000000000000060648201526084016103d7565b6040805160208082018a90523382840152825180830384018152606083019384905280519101207f60fe47b100000000000000000000000000000000000000000000000000000000909252606481019190915273ffffffffffffffffffffffffffffffffffffffff8616906360fe47b190608401600060405180830381600087803b15801561063557600080fd5b505af1158015610649573d6000803e3d6000fd5b50505050610674848861066f3373ffffffffffffffffffffffffffffffffffffffff1690565b6110c1565b604080516001602082015201604051602081830303815290604052975050505050505050919050565b60606106c9826040516020016106b591815260200190565b6040516020818303038152906040526100cf565b92915050565b600061070f7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610784576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61078d8161117b565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610800573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108469190810190611583565b905080516000036108b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016103d7565b6108d4816000815181106108c9576108c9611629565b602002602001015190565b949350505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa15801561094a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096e9190611561565b61097a57506001610a1d565b60006109868585611184565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa1580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a189190611548565b111590505b9392505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff86169063cccf7a8e90602401602060405180830381865afa158015610a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab69190611561565b1580610be357508373ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e610b848773ffffffffffffffffffffffffffffffffffffffff16630ff4c916876040518263ffffffff1660e01b8152600401610b1791815260200190565b602060405180830381865afa158015610b34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b589190611548565b604080516020808201939093528082018890528151808203830181526060909101909152805191012090565b6040518263ffffffff1660e01b8152600401610ba291815260200190565b602060405180830381865afa158015610bbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be39190611561565b95945050505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff86169063cccf7a8e90602401602060405180830381865afa158015610c5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7e9190611561565b610c8a575060016108d4565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff871690630ff4c91690602401600060405180830381865afa158015610cf8573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d3e9190810190611583565b90506000815167ffffffffffffffff811115610d5c57610d5c61135c565b604051908082528060200260200182016040528015610d85578160200160208202803683370190505b5090506000825167ffffffffffffffff811115610da457610da461135c565b604051908082528060200260200182016040528015610dcd578160200160208202803683370190505b50905060005b83518110156110b257610e2f88610e2a868481518110610df557610df5611629565b60200260200101518a604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b611184565b838281518110610e4157610e41611629565b602002602001018181525050610e9b88610e2a868481518110610e6657610e66611629565b602002602001015189604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b828281518110610ead57610ead611629565b602002602001018181525050818181518110610ecb57610ecb611629565b6020026020010151838281518110610ee557610ee5611629565b60200260200101511115610fc25760005b81811015610fb4578873ffffffffffffffffffffffffffffffffffffffff16631ab06ee5610f2f878481518110610df557610df5611629565b858481518110610f4157610f41611629565b60200260200101516040518363ffffffff1660e01b8152600401610f6f929190918252602082015260400190565b600060405180830381600087803b158015610f8957600080fd5b505af1158015610f9d573d6000803e3d6000fd5b505050508080610fac90611687565b915050610ef6565b5060009450505050506108d4565b8773ffffffffffffffffffffffffffffffffffffffff16631ab06ee5610ff3868481518110610e6657610e66611629565b85848151811061100557611005611629565b602002602001015185858151811061101f5761101f611629565b602002602001015161103191906116bf565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b15801561108757600080fd5b505af115801561109b573d6000803e3d6000fd5b5050505080806110aa90611687565b915050610dd3565b50600198975050505050505050565b604080516020808201859052818301849052825180830384018152606090920190925280519101206000906040517f1ab06ee50000000000000000000000000000000000000000000000000000000081526004810182905243602482015290915073ffffffffffffffffffffffffffffffffffffffff851690631ab06ee590604401600060405180830381600087803b15801561115d57600080fd5b505af1158015611171573d6000803e3d6000fd5b5050505050505050565b61078d816112b0565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa1580156111f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112169190611561565b611221576000610a1d565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa15801561128c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1d9190611548565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156113d2576113d261135c565b604052919050565b600060208083850312156113ed57600080fd5b823567ffffffffffffffff8082111561140557600080fd5b818501915085601f83011261141957600080fd5b81358181111561142b5761142b61135c565b61145b847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161138b565b9150808252868482850101111561147157600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156114ba5785810183015185820160400152820161149e565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561150b57600080fd5b5035919050565b60006020828403121561152457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610a1d57600080fd5b60006020828403121561155a57600080fd5b5051919050565b60006020828403121561157357600080fd5b81518015158114610a1d57600080fd5b6000602080838503121561159657600080fd5b825167ffffffffffffffff808211156115ae57600080fd5b818501915085601f8301126115c257600080fd5b8151818111156115d4576115d461135c565b8060051b91506115e584830161138b565b81815291830184019184810190888411156115ff57600080fd5b938501935b8385101561161d57845182529385019390850190611604565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116b8576116b8611658565b5060010190565b818103818111156106c9576106c961165856fea2646970667358221220308a305b47694440b28b1c47cc7ce1b51697fc322307d1b1afea434ab50b53c864736f6c63430008130033";

type ResearchSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResearchSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ResearchSystem__factory extends ContractFactory {
  constructor(...args: ResearchSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ResearchSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<ResearchSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): ResearchSystem {
    return super.attach(address) as ResearchSystem;
  }
  override connect(signer: Signer): ResearchSystem__factory {
    return super.connect(signer) as ResearchSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResearchSystemInterface {
    return new utils.Interface(_abi) as ResearchSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ResearchSystem {
    return new Contract(address, _abi, signerOrProvider) as ResearchSystem;
  }
}
