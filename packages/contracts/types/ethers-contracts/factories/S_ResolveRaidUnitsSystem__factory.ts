/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_ResolveRaidUnitsSystem,
  S_ResolveRaidUnitsSystemInterface,
} from "../S_ResolveRaidUnitsSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "battleEntity",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200225c3803806200225c8339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b61200680620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780636ad0ccab1461007a5780638da5cb5b1461008d578063f2fde38b146100ad575b600080fd5b61006461005f3660046119ea565b6100c2565b6040516100719190611a7f565b60405180910390f35b610064610088366004611ae2565b610346565b610095610383565b6040516001600160a01b039091168152602001610071565b6100c06100bb366004611b0e565b6103bb565b005b6060600080838060200190518101906100db9190611b2b565b9150915061017f600160009054906101000a90046001600160a01b03166001600160a01b0316630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610135573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101599190611b59565b7fb8a52632f0fa53342d6f565f4dc61c9da5e2efc28b66119fedd7e968574a7470610411565b6001600160a01b0316336001600160a01b03161461020a5760405162461bcd60e51b815260206004820152603760248201527f535f5265736f6c766552616964556e69747353797374656d3a206f6e6c79205260448201527f61696453797374656d2063616e2063616c6c207468697300000000000000000060648201526084015b60405180910390fd5b60006102357fe640406de38b5823e93b424dea7e50f1ad48bbf64449bd5a2cb23e5979ef46256104f3565b604051636667bd4760e11b8152600481018490529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa15801561027d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a19190611b76565b61030b5760405162461bcd60e51b815260206004820152603560248201527f535f5265736f6c766552616964556e69747353797374656d3a20626174746c65604482015274081a185cc81b9bdd081c995cdbdb1d9959081e595d605a1b6064820152608401610201565b600154610321906001600160a01b031683610510565b6040805160208101849052016040516020818303038152906040529350505050919050565b604080516001600160a01b038416602082015290810182905260609061037c9082016040516020818303038152906040526100c2565b9392505050565b60006103b67f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b0316331461040557604051632f7a8ee160e01b815260040160405180910390fd5b61040e81610cae565b50565b604051637defd0f560e11b81526004810182905260009081906001600160a01b0385169063fbdfa1ea90602401600060405180830381865afa15801561045b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104839190810190611c27565b905080516000036104ca5760405162461bcd60e51b81526020600482015260116024820152701a59081b9bdd081c9959da5cdd195c9959607a1b6044820152606401610201565b6104eb816000815181106104e0576104e0611c5c565b602002602001015190565b949350505050565b6000805461050a906001600160a01b031683610411565b92915050565b6040516309e4fb4360e31b81527f54503ed0adc1ee183e210d2dafda9a19dbe669eaef7621753179cec7de6492f560048201526000906001600160a01b03841690634f27da1890602401602060405180830381865afa158015610577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059b9190611b59565b6001600160a01b0316630ff4c916836040518263ffffffff1660e01b81526004016105c891815260200190565b602060405180830381865afa1580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106099190611c72565b6040516309e4fb4360e31b81527fe640406de38b5823e93b424dea7e50f1ad48bbf64449bd5a2cb23e5979ef462560048201529091506000906001600160a01b03851690634f27da1890602401602060405180830381865afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106979190611b59565b6001600160a01b0316630ff4c916846040518263ffffffff1660e01b81526004016106c491815260200190565b600060405180830381865afa1580156106e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107099190810190611d06565b6040516309e4fb4360e31b81527f36b0c3b8398693329455058d1e1551eb4ed06a51e8f6e8cffc5da55872caccd860048201529091506000906001600160a01b03861690634f27da1890602401602060405180830381865afa158015610773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107979190611b59565b6001600160a01b0316630ff4c916856040518263ffffffff1660e01b81526004016107c491815260200190565b600060405180830381865afa1580156107e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108099190810190611db7565b6040516309e4fb4360e31b81527ff9768ca34b9927c41f0ddbd0cce635ef12f645937c14ca934428e6a9c05e48da60048201529091506000906001600160a01b03871690634f27da1890602401602060405180830381865afa158015610873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108979190611b59565b6001600160a01b0316630ff4c916866040518263ffffffff1660e01b81526004016108c491815260200190565b600060405180830381865afa1580156108e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109099190810190611db7565b825184519192506000911461091f578251610922565b81515b6040516309e4fb4360e31b81527f1637987787e4c0e1b376a0a4c44d9803d16014ee56d45bdca1e885d52368752460048201529091506000906001600160a01b03891690634f27da1890602401602060405180830381865afa15801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b09190611b59565b604051621326ab60e01b8152600160048201526001600160a01b039190911690621326ab90602401600060405180830381865afa1580156109f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a1d9190810190611c27565b90506000610a2f898660000151610cb7565b865186519192509003610b5257610a47898489610cf6565b60005b866020015151811015610b4c57600086606001518281518110610a6f57610a6f611c5c565b602002602001015163ffffffff161115610b3a57610af38a8760000151858481518110610a9e57610a9e611c5c565b60200260200101518a602001518581518110610abc57610abc611c5c565b60200260200101518a606001518681518110610ada57610ada611c5c565b6020026020010151610aec9190611e8c565b6000610f6b565b610b3a8a876000015184868581518110610b0f57610b0f611c5c565b60200260200101518b602001518681518110610b2d57610b2d611c5c565b60200260200101516113ec565b80610b4481611eb0565b915050610a4a565b50610ca3565b60005b8251811015610ca157600086606001518281518110610b7657610b76611c5c565b602002602001015163ffffffff161115610bd257610bd28a8760000151858481518110610ba557610ba5611c5c565b602002602001015189606001518581518110610bc357610bc3611c5c565b60200260200101516000610f6b565b600085606001518281518110610bea57610bea611c5c565b602002602001015163ffffffff161115610c8f57610c558a8760000151858481518110610c1957610c19611c5c565b60200260200101518a604001518581518110610c3757610c37611c5c565b602002602001015189606001518681518110610ada57610ada611c5c565b610c8f8a88600001518a868581518110610c7157610c71611c5c565b60200260200101518b604001518681518110610b2d57610b2d611c5c565b80610c9981611eb0565b915050610b55565b505b505050505050505050565b61040e816114e8565b604080516001600160a01b03841660208201529081018290526000906060015b60408051601f1981840301815291905280516020909101209392505050565b6040516309e4fb4360e31b81527f1637987787e4c0e1b376a0a4c44d9803d16014ee56d45bdca1e885d52368752460048201526000906001600160a01b03851690634f27da1890602401602060405180830381865afa158015610d5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d819190611b59565b604051621326ab60e01b8152600160048201526001600160a01b039190911690621326ab90602401600060405180830381865afa158015610dc6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dee9190810190611c27565b6040516309e4fb4360e31b81527f8bd637b568ed540cabc10b49a9f3688fe5b7e4b706298b6cd07c2e1ed5600e9360048201529091506000906001600160a01b03861690634f27da1890602401602060405180830381865afa158015610e58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7c9190611b59565b905060005b8251811015610f63576000610eb0848381518110610ea157610ea1611c5c565b60200260200101518787611562565b604051636667bd4760e11b8152600481018290529091506001600160a01b0384169063cccf7a8e90602401602060405180830381865afa158015610ef8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1c9190611b76565b15610f5057610f50878787878681518110610f3957610f39611c5c565b6020026020010151610f4b8887611599565b611679565b5080610f5b81611eb0565b915050610e81565b505050505050565b63ffffffff8216156113e5576040516309e4fb4360e31b81527f391ed979ad48ef48aa0e385aaffe280328c830054d2153bba1cf3da0b7bf45ab60048201526000906001600160a01b03871690634f27da1890602401602060405180830381865afa158015610fde573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110029190611b59565b905060006110118787876118b3565b90506000611025868363ffffffff1661195e565b604051636667bd4760e11b8152600481018290529091506001600160a01b0384169063cccf7a8e90602401602060405180830381865afa15801561106d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110919190611b76565b61109d575050506113e5565b6040516309e4fb4360e31b81527f4f2e352c22f4d6e8661eee4a98890fa6dfead6e74bc680ee4c52da1cc198d7c960048201526000906001600160a01b038a1690634f27da1890602401602060405180830381865afa158015611104573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111289190611b59565b6040516307fa648b60e11b8152600481018490529091506000906001600160a01b03861690630ff4c91690602401600060405180830381865afa158015611173573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261119b9190810190611ec9565b516040516307fa648b60e11b8152600481018590529091506000906001600160a01b03871690630ff4c91690602401600060405180830381865afa1580156111e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261120f9190810190611ec9565b60200151905060005b82518110156113dd5781818151811061123357611233611c5c565b602002602001015163ffffffff16600003156113cb5760008983838151811061125e5761125e611c5c565b60200260200101516112709190611f70565b9050600061129785848151811061128957611289611c5c565b60200260200101518e61195e565b9050891561132557856001600160a01b031663d923c3c482846112ba8a86611599565b6112c49190611f98565b6040516001600160e01b031960e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b15801561130857600080fd5b505af115801561131c573d6000803e3d6000fd5b505050506113c8565b61132f8682611599565b63ffffffff168263ffffffff161161136657856001600160a01b031663d923c3c4828461135c8a86611599565b6112c49190611e8c565b604051633648f0f160e21b815260048101829052600060248201526001600160a01b0387169063d923c3c490604401600060405180830381600087803b1580156113af57600080fd5b505af11580156113c3573d6000803e3d6000fd5b505050505b50505b806113d581611eb0565b915050611218565b505050505050505b5050505050565b60006113f9838686611562565b6040516309e4fb4360e31b81527f8bd637b568ed540cabc10b49a9f3688fe5b7e4b706298b6cd07c2e1ed5600e9360048201529091506001600160a01b03871690634f27da1890602401602060405180830381865afa158015611460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114849190611b59565b604051633648f0f160e21b81526004810183905263ffffffff841660248201526001600160a01b03919091169063d923c3c490604401600060405180830381600087803b1580156114d457600080fd5b505af1158015610ca1573d6000803e3d6000fd5b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160208082019590955280820193909352606080840192909252805180840390920182526080909201909152805191012090565b604051636667bd4760e11b8152600481018290526000906001600160a01b0384169063cccf7a8e90602401602060405180830381865afa1580156115e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116059190611b76565b61161057600061037c565b6040516307fa648b60e11b8152600481018390526001600160a01b03841690630ff4c91690602401602060405180830381865afa158015611655573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037c9190611fb5565b63ffffffff8116156113e5576000611692838686611562565b6040516309e4fb4360e31b81527f8bd637b568ed540cabc10b49a9f3688fe5b7e4b706298b6cd07c2e1ed5600e9360048201529091506000906001600160a01b03881690634f27da1890602401602060405180830381865afa1580156116fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117209190611b59565b9050600061172e8284611599565b90508063ffffffff168463ffffffff1611156117b25760405162461bcd60e51b815260206004820152603d60248201527f4c69625570646174655370616365526f636b3a20756e6974436f756e74206d7560448201527f7374206265206c657373207468616e2063757272556e6974436f756e740000006064820152608401610201565b6117c0888887876000610f6b565b60006117cc8583611e8c565b63ffffffff161115611853576001600160a01b03821663d923c3c4846117f28785611e8c565b6040516001600160e01b031960e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b15801561183657600080fd5b505af115801561184a573d6000803e3d6000fd5b505050506118a9565b604051634cc8221560e01b8152600481018490526001600160a01b03831690634cc8221590602401600060405180830381600087803b15801561189557600080fd5b505af11580156113dd573d6000803e3d6000fd5b5050505050505050565b6000806118c0838561195e565b6040516309e4fb4360e31b81527fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e6004820152909150611955906001600160a01b03871690634f27da1890602401602060405180830381865afa15801561192b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194f9190611b59565b82611599565b95945050505050565b6040805160208101849052908101829052600090606001610cd7565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156119b3576119b361197a565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156119e2576119e261197a565b604052919050565b600060208083850312156119fd57600080fd5b823567ffffffffffffffff80821115611a1557600080fd5b818501915085601f830112611a2957600080fd5b813581811115611a3b57611a3b61197a565b611a4d601f8201601f191685016119b9565b91508082528684828501011115611a6357600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b81811015611aac57858101830151858201604001528201611a90565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461040e57600080fd5b60008060408385031215611af557600080fd5b8235611b0081611acd565b946020939093013593505050565b600060208284031215611b2057600080fd5b813561037c81611acd565b60008060408385031215611b3e57600080fd5b8251611b4981611acd565b6020939093015192949293505050565b600060208284031215611b6b57600080fd5b815161037c81611acd565b600060208284031215611b8857600080fd5b8151801515811461037c57600080fd5b600067ffffffffffffffff821115611bb257611bb261197a565b5060051b60200190565b600082601f830112611bcd57600080fd5b81516020611be2611bdd83611b98565b6119b9565b82815260059290921b84018101918181019086841115611c0157600080fd5b8286015b84811015611c1c5780518352918301918301611c05565b509695505050505050565b600060208284031215611c3957600080fd5b815167ffffffffffffffff811115611c5057600080fd5b6104eb84828501611bbc565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611c8457600080fd5b5051919050565b805163ffffffff81168114611c9f57600080fd5b919050565b600082601f830112611cb557600080fd5b81516020611cc5611bdd83611b98565b82815260059290921b84018101918181019086841115611ce457600080fd5b8286015b84811015611c1c57611cf981611c8b565b8352918301918301611ce8565b600060208284031215611d1857600080fd5b815167ffffffffffffffff80821115611d3057600080fd5b9083019060608286031215611d4457600080fd5b604051606081018181108382111715611d5f57611d5f61197a565b60405282518152602083015182811115611d7857600080fd5b611d8487828601611ca4565b602083015250604083015182811115611d9c57600080fd5b611da887828601611ca4565b60408301525095945050505050565b600060208284031215611dc957600080fd5b815167ffffffffffffffff80821115611de157600080fd5b9083019060808286031215611df557600080fd5b611dfd611990565b82518152602083015182811115611e1357600080fd5b611e1f87828601611bbc565b602083015250604083015182811115611e3757600080fd5b611e4387828601611ca4565b604083015250606083015182811115611e5b57600080fd5b611e6787828601611ca4565b60608301525095945050505050565b634e487b7160e01b600052601160045260246000fd5b63ffffffff828116828216039080821115611ea957611ea9611e76565b5092915050565b600060018201611ec257611ec2611e76565b5060010190565b600060208284031215611edb57600080fd5b815167ffffffffffffffff80821115611ef357600080fd5b9083019060408286031215611f0757600080fd5b604051604081018181108382111715611f2257611f2261197a565b604052825182811115611f3457600080fd5b611f4087828601611bbc565b825250602083015182811115611f5557600080fd5b611f6187828601611ca4565b60208301525095945050505050565b63ffffffff818116838216028082169190828114611f9057611f90611e76565b505092915050565b63ffffffff818116838216019080821115611ea957611ea9611e76565b600060208284031215611fc757600080fd5b61037c82611c8b56fea2646970667358221220a5a9ac8ca937db81fad8ed2e1da737eca324f8898aea3362cbcfa7cae47c95a964736f6c63430008130033";

type S_ResolveRaidUnitsSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_ResolveRaidUnitsSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_ResolveRaidUnitsSystem__factory extends ContractFactory {
  constructor(...args: S_ResolveRaidUnitsSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_ResolveRaidUnitsSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_ResolveRaidUnitsSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_ResolveRaidUnitsSystem {
    return super.attach(address) as S_ResolveRaidUnitsSystem;
  }
  override connect(signer: Signer): S_ResolveRaidUnitsSystem__factory {
    return super.connect(signer) as S_ResolveRaidUnitsSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_ResolveRaidUnitsSystemInterface {
    return new utils.Interface(_abi) as S_ResolveRaidUnitsSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_ResolveRaidUnitsSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_ResolveRaidUnitsSystem;
  }
}
