/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_ClaimAllResourcesSystem,
  S_ClaimAllResourcesSystemInterface,
} from "../S_ClaimAllResourcesSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dd4380380610dd483398101604081905261002f916101d2565b8181818161003c33610140565b6001600160a01b0381161561005157806100b3565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b3919061020c565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054909216179055505050505050610230565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811681146101cf57600080fd5b50565b600080604083850312156101e557600080fd5b82516101f0816101ba565b6020840151909250610201816101ba565b809150509250929050565b60006020828403121561021e57600080fd5b8151610229816101ba565b9392505050565b610b958061023f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe14610051578063240b27e61461007a5780638da5cb5b1461008d578063f2fde38b146100ad575b600080fd5b61006461005f3660046108b6565b6100c2565b604051610071919061095a565b60405180910390f35b6100646100883660046109a2565b61011b565b610095610150565b6040516001600160a01b039091168152602001610071565b6100c06100bb3660046109a2565b610188565b005b60606000828060200190518101906100da91906109c6565b6001549091506001600160a01b03808316916100f79116826101de565b60408051600060208201520160405160208183030381529060405292505050919050565b604080516001600160a01b038316602082015260609161014a91016040516020818303038152906040526100c2565b92915050565b60006101837f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031633146101d257604051632f7a8ee160e01b815260040160405180910390fd5b6101db816106de565b50565b6040516309e4fb4360e31b81527f72887d78bbad0f2696fb431d6367da7b429df07154724db7df055e27fb64080f60048201526000906001600160a01b03841690634f27da1890602401602060405180830381865afa158015610245573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026991906109c6565b604051636667bd4760e11b8152600481018490529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa1580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d591906109e3565b6102de57505050565b6040516309e4fb4360e31b81527fe95fc307e3922a4ed7e1a9d135b2e79aad91e806428d8c7ec9a376dfc8aede5e60048201526000906001600160a01b03851690634f27da1890602401602060405180830381865afa158015610345573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036991906109c6565b6040516307fa648b60e11b8152600481018590529091506000906001600160a01b03841690630ff4c91690602401600060405180830381865afa1580156103b4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103dc9190810190610a05565b905060005b81518110156106d657600061043683838151811061040157610401610aab565b602002602001015187604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040516309e4fb4360e31b81527f222d9674c2fee077bc82c84232803a9168906e2be25c4560d094c76895b8a43260048201529091506001600160a01b03881690634f27da1890602401602060405180830381865afa15801561049d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c191906109c6565b6001600160a01b031663cccf7a8e826040518263ffffffff1660e01b81526004016104ee91815260200190565b602060405180830381865afa15801561050b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052f91906109e3565b15610662576105bf876001600160a01b0316630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610575573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059991906109c6565b7fbfa4e94ac46519bd16654700fe5605b990ceb82f41218bfba1018857ba5e01c06106e7565b6001600160a01b0316636ad0ccab338585815181106105e0576105e0610aab565b60200260200101516040518363ffffffff1660e01b81526004016106199291906001600160a01b03929092168252602082015260400190565b6000604051808303816000875af1158015610638573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106609190810190610ac1565b505b604051631ab06ee560e01b8152600481018290524360248201526001600160a01b03851690631ab06ee590604401600060405180830381600087803b1580156106aa57600080fd5b505af11580156106be573d6000803e3d6000fd5b505050505080806106ce90610b38565b9150506103e1565b505050505050565b6101db816107cd565b604051637defd0f560e11b81526004810182905260009081906001600160a01b0385169063fbdfa1ea90602401600060405180830381865afa158015610731573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107599190810190610a05565b905080516000036107a45760405162461bcd60e51b81526020600482015260116024820152701a59081b9bdd081c9959da5cdd195c9959607a1b604482015260640160405180910390fd5b6107c5816000815181106107ba576107ba610aab565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561088657610886610847565b604052919050565b600067ffffffffffffffff8211156108a8576108a8610847565b50601f01601f191660200190565b6000602082840312156108c857600080fd5b813567ffffffffffffffff8111156108df57600080fd5b8201601f810184136108f057600080fd5b80356109036108fe8261088e565b61085d565b81815285602083850101111561091857600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015610951578181015183820152602001610939565b50506000910152565b6020815260008251806020840152610979816040850160208701610936565b601f01601f19169190910160400192915050565b6001600160a01b03811681146101db57600080fd5b6000602082840312156109b457600080fd5b81356109bf8161098d565b9392505050565b6000602082840312156109d857600080fd5b81516109bf8161098d565b6000602082840312156109f557600080fd5b815180151581146109bf57600080fd5b60006020808385031215610a1857600080fd5b825167ffffffffffffffff80821115610a3057600080fd5b818501915085601f830112610a4457600080fd5b815181811115610a5657610a56610847565b8060051b9150610a6784830161085d565b8181529183018401918481019088841115610a8157600080fd5b938501935b83851015610a9f57845182529385019390850190610a86565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610ad357600080fd5b815167ffffffffffffffff811115610aea57600080fd5b8201601f81018413610afb57600080fd5b8051610b096108fe8261088e565b818152856020838501011115610b1e57600080fd5b610b2f826020830160208601610936565b95945050505050565b600060018201610b5857634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212206af86bc8ab860cb6f003378b15c09bdf484903962f229c784399549f4ddddc4f64736f6c63430008130033";

type S_ClaimAllResourcesSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_ClaimAllResourcesSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_ClaimAllResourcesSystem__factory extends ContractFactory {
  constructor(...args: S_ClaimAllResourcesSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_ClaimAllResourcesSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_ClaimAllResourcesSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_ClaimAllResourcesSystem {
    return super.attach(address) as S_ClaimAllResourcesSystem;
  }
  override connect(signer: Signer): S_ClaimAllResourcesSystem__factory {
    return super.connect(signer) as S_ClaimAllResourcesSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_ClaimAllResourcesSystemInterface {
    return new utils.Interface(_abi) as S_ClaimAllResourcesSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_ClaimAllResourcesSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_ClaimAllResourcesSystem;
  }
}
