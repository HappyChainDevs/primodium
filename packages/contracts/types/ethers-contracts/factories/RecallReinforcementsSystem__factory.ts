/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  RecallReinforcementsSystem,
  RecallReinforcementsSystemInterface,
} from "../RecallReinforcementsSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rockEntity",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018a4380380620018a48339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b61164e80620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ad575b600080fd5b61006461005f3660046111d5565b6100c2565b604051610071919061126a565b60405180910390f35b6100646100883660046112b8565b610117565b610095610149565b6040516001600160a01b039091168152602001610071565b6100c06100bb3660046112e6565b610181565b005b60606000828060200190518101906100da9190611303565b6001549091506100f4906001600160a01b031633836101d7565b604080516020810183905201604051602081830303815290604052915050919050565b60606101438260405160200161012f91815260200190565b6040516020818303038152906040526100c2565b92915050565b600061017c7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031633146101cb57604051632f7a8ee160e01b815260040160405180910390fd5b6101d481610623565b50565b6040516309e4fb4360e31b81527faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c754060048201526000906001600160a01b03851690634f27da1890602401602060405180830381865afa15801561023e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610262919061131c565b604051636667bd4760e11b8152600481018490529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa1580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce9190611339565b6103605760405162461bcd60e51b815260206004820152605260248201527f5b5265696e666f7263656d656e745d3a2072657175657374207265696e666f7260448201527f63656d656e742063616e206e6f7420626520646f6e65206f6e206120726f636b606482015271081d1a185d081a5cc81b9bdd081bdddb995960721b608482015260a4015b60405180910390fd5b6040516307fa648b60e11b8152600481018390526000906103d6906001600160a01b03841690630ff4c91690602401602060405180830381865afa1580156103ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d09190611303565b8461062c565b6040516309e4fb4360e31b81526000805160206115f9833981519152600482015290915060009061045c906001600160a01b03881690634f27da1890602401602060405180830381865afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610456919061131c565b83610663565b63ffffffff169050600080610471888861074a565b90505b8282101561061957600061048989868561076e565b90506002815160028111156104a0576104a061135b565b1415806104b1575087816060015114155b806104bf5750438160400151115b156104d757826104ce81611387565b93505050610474565b60005b81602001515181101561057857816020015181815181106104fd576104fd6113a0565b60200260200101516020015163ffffffff1660000315610566576105668a8a8585602001518581518110610533576105336113a0565b60200260200101516000015186602001518681518110610555576105556113a0565b602002602001015160200151610a76565b8061057081611387565b9150506104da565b506040516309e4fb4360e31b81526000805160206115f983398151915260048201526105fb906001600160a01b038b1690634f27da1890602401602060405180830381865afa1580156105cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f3919061131c565b896001610b55565b610606898685610c31565b6106116001856113b6565b935050610474565b5050505050505050565b6101d48161109f565b60408051602081018490529081018290526000906060015b60408051601f1981840301815291905280516020909101209392505050565b604051636667bd4760e11b8152600481018290526000906001600160a01b0384169063cccf7a8e90602401602060405180830381865afa1580156106ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf9190611339565b6106da576000610743565b6040516307fa648b60e11b8152600481018390526001600160a01b03841690630ff4c91690602401602060405180830381865afa15801561071f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074391906113e2565b9392505050565b604080516001600160a01b0384166020820152908101829052600090606001610644565b6107b76040805161010081019091528060008152602001606081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040516309e4fb4360e31b81526000805160206115f983398151915260048201526000906001600160a01b03861690634f27da1890602401602060405180830381865afa15801561080c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610830919061131c565b9050600061083e8286610663565b90508063ffffffff1684106108655760405162461bcd60e51b8152600401610357906113fd565b6000610871868661062c565b6040516309e4fb4360e31b81527ffa4a0d59b8b1e16e79fdb8b2d0a8b06b5189b664b4ac382b586c64014469098e60048201529091506000906001600160a01b03891690634f27da1890602401602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff919061131c565b6001600160a01b0316630ff4c916836040518263ffffffff1660e01b815260040161092c91815260200190565b602060405180830381865afa158015610949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d9190611303565b6040516309e4fb4360e31b81527f8e9099e75678919c8e1307fac4366e095ace966d09bb54991618c1fa0d72bf3360048201529091506001600160a01b03891690634f27da1890602401602060405180830381865afa1580156109d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f8919061131c565b6001600160a01b0316630ff4c916826040518263ffffffff1660e01b8152600401610a2591815260200190565b600060405180830381865afa158015610a42573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a6a91908101906114f9565b98975050505050505050565b63ffffffff811615610b4e57604080516020808201859052818301879052606080830187905283518084039091018152608090920190925280519101206000906040516309e4fb4360e31b81527f8bd637b568ed540cabc10b49a9f3688fe5b7e4b706298b6cd07c2e1ed5600e936004820152909150610b4c906001600160a01b03881690634f27da1890602401602060405180830381865afa158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b45919061131c565b8284611119565b505b5050505050565b6000610b618484610663565b90508163ffffffff168163ffffffff161015610bbf5760405162461bcd60e51b815260206004820152601c60248201527f6e6f7420656e6f7567682076616c756520746f207375627472616374000000006044820152606401610357565b6001600160a01b03841663d923c3c484610bd985856115b7565b6040516001600160e01b031960e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b158015610c1d57600080fd5b505af1158015610619573d6000803e3d6000fd5b6040516309e4fb4360e31b81526000805160206115f983398151915260048201526000906001600160a01b03851690634f27da1890602401602060405180830381865afa158015610c86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caa919061131c565b6040516309e4fb4360e31b81527ffa4a0d59b8b1e16e79fdb8b2d0a8b06b5189b664b4ac382b586c64014469098e60048201529091506000906001600160a01b03861690634f27da1890602401602060405180830381865afa158015610d14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d38919061131c565b90506000610d468386610663565b90508063ffffffff168410610d6d5760405162461bcd60e51b8152600401610357906113fd565b6000610d8986610d7e6001856115b7565b63ffffffff1661062c565b6040516307fa648b60e11b8152600481018290529091506000906001600160a01b03851690630ff4c91690602401602060405180830381865afa158015610dd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df89190611303565b90506000610e06888861062c565b6040516307fa648b60e11b8152600481018290529091506000906001600160a01b03871690630ff4c91690602401602060405180830381865afa158015610e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e759190611303565b604051631ab06ee560e01b815260048101849052602481018590529091506001600160a01b03871690631ab06ee590604401600060405180830381600087803b158015610ec157600080fd5b505af1158015610ed5573d6000803e3d6000fd5b5050604051634cc8221560e01b8152600481018790526001600160a01b0389169250634cc822159150602401600060405180830381600087803b158015610f1b57600080fd5b505af1158015610f2f573d6000803e3d6000fd5b50506040516309e4fb4360e31b81527f8e9099e75678919c8e1307fac4366e095ace966d09bb54991618c1fa0d72bf3360048201526001600160a01b038d169250634f27da189150602401602060405180830381865afa158015610f97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbb919061131c565b6001600160a01b0316634cc82215826040518263ffffffff1660e01b8152600401610fe891815260200190565b600060405180830381600087803b15801561100257600080fd5b505af1158015611016573d6000803e3d6000fd5b50505050866001600160a01b031663d923c3c48a60018861103791906115b7565b6040516001600160e01b031960e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b15801561107b57600080fd5b505af115801561108f573d6000803e3d6000fd5b5050505050505050505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b60006111258484610663565b90506001600160a01b03841663d923c3c484610bd985856115db565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561117a5761117a611141565b60405290565b604051610100810167ffffffffffffffff8111828210171561117a5761117a611141565b604051601f8201601f1916810167ffffffffffffffff811182821017156111cd576111cd611141565b604052919050565b600060208083850312156111e857600080fd5b823567ffffffffffffffff8082111561120057600080fd5b818501915085601f83011261121457600080fd5b81358181111561122657611226611141565b611238601f8201601f191685016111a4565b9150808252868482850101111561124e57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156112975785810183015185820160400152820161127b565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156112ca57600080fd5b5035919050565b6001600160a01b03811681146101d457600080fd5b6000602082840312156112f857600080fd5b8135610743816112d1565b60006020828403121561131557600080fd5b5051919050565b60006020828403121561132e57600080fd5b8151610743816112d1565b60006020828403121561134b57600080fd5b8151801515811461074357600080fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161139957611399611371565b5060010190565b634e487b7160e01b600052603260045260246000fd5b8181038181111561014357610143611371565b805163ffffffff811681146113dd57600080fd5b919050565b6000602082840312156113f457600080fd5b610743826113c9565b60208082526022908201527f5b4172726976616c4c6973745d3a20496e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b8051600381106113dd57600080fd5b600082601f83011261145f57600080fd5b8151602067ffffffffffffffff82111561147b5761147b611141565b611489818360051b016111a4565b82815260069290921b840181019181810190868411156114a857600080fd5b8286015b848110156114ee57604081890312156114c55760008081fd5b6114cd611157565b815181526114dc8583016113c9565b818601528352918301916040016114ac565b509695505050505050565b60006020828403121561150b57600080fd5b815167ffffffffffffffff8082111561152357600080fd5b90830190610100828603121561153857600080fd5b611540611180565b6115498361143f565b815260208301518281111561155d57600080fd5b6115698782860161144e565b60208301525060408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e082015280935050505092915050565b63ffffffff8281168282160390808211156115d4576115d4611371565b5092915050565b63ffffffff8181168382160190808211156115d4576115d461137156fed45fdfed2b19493f9c0dea49312c61e65de5d4865d541980330c47bdce57e145a26469706673582212205f4a997cc3365fed983cd59b82afb5ed26bef85f70771413c2b5dbc6d07eff2b64736f6c63430008130033";

type RecallReinforcementsSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RecallReinforcementsSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RecallReinforcementsSystem__factory extends ContractFactory {
  constructor(...args: RecallReinforcementsSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RecallReinforcementsSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<RecallReinforcementsSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): RecallReinforcementsSystem {
    return super.attach(address) as RecallReinforcementsSystem;
  }
  override connect(signer: Signer): RecallReinforcementsSystem__factory {
    return super.connect(signer) as RecallReinforcementsSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RecallReinforcementsSystemInterface {
    return new utils.Interface(_abi) as RecallReinforcementsSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RecallReinforcementsSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RecallReinforcementsSystem;
  }
}
