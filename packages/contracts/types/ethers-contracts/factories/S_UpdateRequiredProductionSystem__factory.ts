/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_UpdateRequiredProductionSystem,
  S_UpdateRequiredProductionSystemInterface,
} from "../S_UpdateRequiredProductionSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "buildingEntity",
        type: "uint256",
      },
      {
        internalType: "enum EActionType",
        name: "actionType",
        type: "uint8",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a8638038062001a868339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b61183080620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806327b450991461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f3660046111bd565b6100cf565b6040516100719190611270565b60405180910390f35b61006461008836600461130b565b610e27565b610095610e5d565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c836600461134d565b610ea2565b005b606061018b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610141573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101659190611371565b7f57247228bbd93ac6953378fea0f421ebc4978d448f7383f1a2816e6ca6e2894d610f1e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102a95750600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161027a9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610230573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102549190611371565b7f70fd2d99c63cf9e9a219a7907c6a0bc55a0323de6daf9c9d0b03e2d7250d73d2610f1e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806103995750600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161036a9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610320573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103449190611371565b7ff39d315320cdfe464ad36c5d26133acfadb3c7e2d9a6ac9e6bb331cb612f42a8610f1e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806104895750600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161045a9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610410573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104349190611371565b7fd573ac88b34a4d827762c3f1e7dc53ea2b602480271c42f976cd9097a3985a01610f1e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152607760248201527f535f557064617465506c6179657253746f7261676553797374656d3a204f6e6c60448201527f79204275696c6453797374656d2c20537061776e53797374656d2c205570677260648201527f6164654275696c64696e6753797374656d2c2044657374726f7953797374656d60848201527f2063616e2063616c6c20746869732066756e6374696f6e00000000000000000060a482015260c4015b60405180910390fd5b60008060008480602001905181019061057f919061138e565b9250925092506000610641600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b9190611371565b7f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5610f1e565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916846040518263ffffffff1660e01b815260040161067b91815260200190565b602060405180830381865afa158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc91906113c6565b9050600061077a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610730573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190611371565b7fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e610f1e565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916856040518263ffffffff1660e01b81526004016107b491815260200190565b602060405180830381865afa1580156107d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f591906113f8565b905060006108b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d9190611371565b7fa9030fd5d2d8df4ef9e9a591c66869629e3031bc7112e7766b55d9f29321005d610f1e565b60408051602080820187905263ffffffff8616828401528251808303840181526060909201909252805191012090915060008560028111156108f7576108f7611413565b03610a0b576040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff8316906308a43e029088908390630ff4c91690602401600060405180830381865afa158015610971573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109b791908101906114d1565b6040518363ffffffff1660e01b81526004016109d49291906115c1565b600060405180830381600087803b1580156109ee57600080fd5b505af1158015610a02573d6000803e3d6000fd5b50505050610e1b565b6001856002811115610a1f57610a1f611413565b03610d9a576040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810187905260009073ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401600060405180830381865afa158015610a92573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ad891908101906114d1565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905290915060009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401600060405180830381865afa158015610b49573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b8f91908101906114d1565b9050600073ffffffffffffffffffffffffffffffffffffffff8516630ff4c916610bf089610bbe60018b6116b4565b63ffffffff16604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040518263ffffffff1660e01b8152600401610c0e91815260200190565b600060405180830381865afa158015610c2b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c7191908101906114d1565b905060005b825151811015610d0b5781602001518181518110610c9657610c966116d8565b602002602001015183602001518281518110610cb457610cb46116d8565b6020026020010151610cc691906116b4565b84602001518281518110610cdc57610cdc6116d8565b60200260200101818151610cf09190611707565b63ffffffff1690525080610d0381611724565b915050610c76565b506040517f08a43e0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616906308a43e0290610d60908c9087906004016115c1565b600060405180830381600087803b158015610d7a57600080fd5b505af1158015610d8e573d6000803e3d6000fd5b50505050505050610e1b565b6040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff831690634cc8221590602401600060405180830381600087803b158015610e0257600080fd5b505af1158015610e16573d6000803e3d6000fd5b505050505b50505050505050919050565b6060610e55848484604051602001610e419392919061175c565b6040516020818303038152906040526100cf565b949350505050565b6000610e9d7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610f12576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f1b81611062565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610f8e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610fd491908101906117c5565b90508051600003611041576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161055d565b610e5581600081518110611057576110576116d8565b602002602001015190565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610f1b928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561116857611168611116565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156111b5576111b5611116565b604052919050565b600060208083850312156111d057600080fd5b823567ffffffffffffffff808211156111e857600080fd5b818501915085601f8301126111fc57600080fd5b81358181111561120e5761120e611116565b61123e847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161116e565b9150808252868482850101111561125457600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561129d57858101830151858201604001528201611281565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114610f1b57600080fd5b60038110610f1b57600080fd5b60008060006060848603121561132057600080fd5b833561132b816112dc565b9250602084013591506040840135611342816112fe565b809150509250925092565b60006020828403121561135f57600080fd5b813561136a816112dc565b9392505050565b60006020828403121561138357600080fd5b815161136a816112dc565b6000806000606084860312156113a357600080fd5b83516113ae816112dc565b602085015160408601519194509250611342816112fe565b6000602082840312156113d857600080fd5b5051919050565b805163ffffffff811681146113f357600080fd5b919050565b60006020828403121561140a57600080fd5b61136a826113df565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600067ffffffffffffffff82111561145c5761145c611116565b5060051b60200190565b600082601f83011261147757600080fd5b8151602061148c61148783611442565b61116e565b82815260059290921b840181019181810190868411156114ab57600080fd5b8286015b848110156114c657805183529183019183016114af565b509695505050505050565b600060208083850312156114e457600080fd5b825167ffffffffffffffff808211156114fc57600080fd5b908401906040828703121561151057600080fd5b611518611145565b82518281111561152757600080fd5b61153388828601611466565b825250838301518281111561154757600080fd5b80840193505086601f84011261155c57600080fd5b8251915061156c61148783611442565b82815260059290921b8301840191848101908884111561158b57600080fd5b938501935b838510156115b0576115a1856113df565b82529385019390850190611590565b948201949094529695505050505050565b8281526000602060408184015260808301845160408086015281815180845260a0870191508483019350600092505b8083101561161057835182529284019260019290920191908401906115f0565b50868401518682037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00160608801528051808352908501935090840191506000905b8082101561167857835163ffffffff168352928401929184019160019190910190611652565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff8281168282160390808211156116d1576116d1611685565b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b63ffffffff8181168382160190808211156116d1576116d1611685565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361175557611755611685565b5060010190565b73ffffffffffffffffffffffffffffffffffffffff841681526020810183905260608101600383106117b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826040830152949350505050565b6000602082840312156117d757600080fd5b815167ffffffffffffffff8111156117ee57600080fd5b610e558482850161146656fea2646970667358221220a69bf9390a97c4d52c9fb55c3a21a43c6bb2afa1ad4d83607855cbf1e8bb121764736f6c63430008130033";

type S_UpdateRequiredProductionSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_UpdateRequiredProductionSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_UpdateRequiredProductionSystem__factory extends ContractFactory {
  constructor(...args: S_UpdateRequiredProductionSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_UpdateRequiredProductionSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_UpdateRequiredProductionSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_UpdateRequiredProductionSystem {
    return super.attach(address) as S_UpdateRequiredProductionSystem;
  }
  override connect(signer: Signer): S_UpdateRequiredProductionSystem__factory {
    return super.connect(signer) as S_UpdateRequiredProductionSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_UpdateRequiredProductionSystemInterface {
    return new utils.Interface(
      _abi
    ) as S_UpdateRequiredProductionSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_UpdateRequiredProductionSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_UpdateRequiredProductionSystem;
  }
}
