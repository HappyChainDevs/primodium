/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_UpdateRequiredProductionSystem,
  S_UpdateRequiredProductionSystemInterface,
} from "../S_UpdateRequiredProductionSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "buildingEntity",
        type: "uint256",
      },
      {
        internalType: "enum EActionType",
        name: "actionType",
        type: "uint8",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001996380380620019968339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b61174080620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806327b450991461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f3660046110cd565b6100cf565b6040516100719190611180565b60405180910390f35b61006461008836600461121b565b610d37565b610095610d6d565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c836600461125d565b610db2565b005b606061018b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610141573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101659190611281565b7f57247228bbd93ac6953378fea0f421ebc4978d448f7383f1a2816e6ca6e2894d610e2e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102a95750600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161027a9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610230573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102549190611281565b7f4da6f081491c6405fbf6124fb31464485c6014c63905afcb67dc5016c543a3b2610e2e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806103995750600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161036a9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610320573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103449190611281565b7fd573ac88b34a4d827762c3f1e7dc53ea2b602480271c42f976cd9097a3985a01610e2e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152606260248201527f535f557064617465506c6179657253746f7261676553797374656d3a204f6e6c60448201527f79204275696c6453797374656d2c205570677261646553797374656d2c20446560648201527f7374726f7953797374656d2063616e2063616c6c20746869732066756e63746960848201527f6f6e00000000000000000000000000000000000000000000000000000000000060a482015260c4015b60405180910390fd5b60008060008480602001905181019061048f919061129e565b9250925092506000610551600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052b9190611281565b7f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5610e2e565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916846040518263ffffffff1660e01b815260040161058b91815260200190565b602060405180830381865afa1580156105a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cc91906112d6565b9050600061068a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106649190611281565b7fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e610e2e565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916856040518263ffffffff1660e01b81526004016106c491815260200190565b602060405180830381865afa1580156106e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107059190611308565b905060006107c3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d9190611281565b7fa9030fd5d2d8df4ef9e9a591c66869629e3031bc7112e7766b55d9f29321005d610e2e565b60408051602080820187905263ffffffff86168284015282518083038401815260609092019092528051910120909150600085600281111561080757610807611323565b0361091b576040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff8316906308a43e029088908390630ff4c91690602401600060405180830381865afa158015610881573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108c791908101906113e1565b6040518363ffffffff1660e01b81526004016108e49291906114d1565b600060405180830381600087803b1580156108fe57600080fd5b505af1158015610912573d6000803e3d6000fd5b50505050610d2b565b600185600281111561092f5761092f611323565b03610caa576040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810187905260009073ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401600060405180830381865afa1580156109a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109e891908101906113e1565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905290915060009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401600060405180830381865afa158015610a59573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a9f91908101906113e1565b9050600073ffffffffffffffffffffffffffffffffffffffff8516630ff4c916610b0089610ace60018b6115c4565b63ffffffff16604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040518263ffffffff1660e01b8152600401610b1e91815260200190565b600060405180830381865afa158015610b3b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b8191908101906113e1565b905060005b825151811015610c1b5781602001518181518110610ba657610ba66115e8565b602002602001015183602001518281518110610bc457610bc46115e8565b6020026020010151610bd691906115c4565b84602001518281518110610bec57610bec6115e8565b60200260200101818151610c009190611617565b63ffffffff1690525080610c1381611634565b915050610b86565b506040517f08a43e0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616906308a43e0290610c70908c9087906004016114d1565b600060405180830381600087803b158015610c8a57600080fd5b505af1158015610c9e573d6000803e3d6000fd5b50505050505050610d2b565b6040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff831690634cc8221590602401600060405180830381600087803b158015610d1257600080fd5b505af1158015610d26573d6000803e3d6000fd5b505050505b50505050505050919050565b6060610d65848484604051602001610d519392919061166c565b6040516020818303038152906040526100cf565b949350505050565b6000610dad7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610e22576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e2b81610f72565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610e9e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ee491908101906116d5565b90508051600003610f51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161046d565b610d6581600081518110610f6757610f676115e8565b602002602001015190565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610e2b928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561107857611078611026565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156110c5576110c5611026565b604052919050565b600060208083850312156110e057600080fd5b823567ffffffffffffffff808211156110f857600080fd5b818501915085601f83011261110c57600080fd5b81358181111561111e5761111e611026565b61114e847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161107e565b9150808252868482850101111561116457600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156111ad57858101830151858201604001528201611191565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114610e2b57600080fd5b60038110610e2b57600080fd5b60008060006060848603121561123057600080fd5b833561123b816111ec565b92506020840135915060408401356112528161120e565b809150509250925092565b60006020828403121561126f57600080fd5b813561127a816111ec565b9392505050565b60006020828403121561129357600080fd5b815161127a816111ec565b6000806000606084860312156112b357600080fd5b83516112be816111ec565b6020850151604086015191945092506112528161120e565b6000602082840312156112e857600080fd5b5051919050565b805163ffffffff8116811461130357600080fd5b919050565b60006020828403121561131a57600080fd5b61127a826112ef565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600067ffffffffffffffff82111561136c5761136c611026565b5060051b60200190565b600082601f83011261138757600080fd5b8151602061139c61139783611352565b61107e565b82815260059290921b840181019181810190868411156113bb57600080fd5b8286015b848110156113d657805183529183019183016113bf565b509695505050505050565b600060208083850312156113f457600080fd5b825167ffffffffffffffff8082111561140c57600080fd5b908401906040828703121561142057600080fd5b611428611055565b82518281111561143757600080fd5b61144388828601611376565b825250838301518281111561145757600080fd5b80840193505086601f84011261146c57600080fd5b8251915061147c61139783611352565b82815260059290921b8301840191848101908884111561149b57600080fd5b938501935b838510156114c0576114b1856112ef565b825293850193908501906114a0565b948201949094529695505050505050565b8281526000602060408184015260808301845160408086015281815180845260a0870191508483019350600092505b808310156115205783518252928401926001929092019190840190611500565b50868401518682037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00160608801528051808352908501935090840191506000905b8082101561158857835163ffffffff168352928401929184019160019190910190611562565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff8281168282160390808211156115e1576115e1611595565b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b63ffffffff8181168382160190808211156115e1576115e1611595565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361166557611665611595565b5060010190565b73ffffffffffffffffffffffffffffffffffffffff841681526020810183905260608101600383106116c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826040830152949350505050565b6000602082840312156116e757600080fd5b815167ffffffffffffffff8111156116fe57600080fd5b610d658482850161137656fea2646970667358221220335f0af77adb48e27e687136aabbbb8ff86713ae981ba7e30dcd1856981668ea64736f6c63430008130033";

type S_UpdateRequiredProductionSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_UpdateRequiredProductionSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_UpdateRequiredProductionSystem__factory extends ContractFactory {
  constructor(...args: S_UpdateRequiredProductionSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_UpdateRequiredProductionSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_UpdateRequiredProductionSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_UpdateRequiredProductionSystem {
    return super.attach(address) as S_UpdateRequiredProductionSystem;
  }
  override connect(signer: Signer): S_UpdateRequiredProductionSystem__factory {
    return super.connect(signer) as S_UpdateRequiredProductionSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_UpdateRequiredProductionSystemInterface {
    return new utils.Interface(
      _abi
    ) as S_UpdateRequiredProductionSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_UpdateRequiredProductionSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_UpdateRequiredProductionSystem;
  }
}
