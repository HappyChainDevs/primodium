/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AsteroidTypeComponent,
  AsteroidTypeComponentInterface,
} from "../AsteroidTypeComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ESpaceRockType",
        name: "value",
        type: "uint8",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "enum ESpaceRockType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "indexer",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "enum ESpaceRockType",
        name: "value",
        type: "uint8",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620026a8380380620026a8833981016040819052620000349162000262565b807ff18c85dc8044969168fe68af2b3239ad68b185f16d2fa46ca0d19909255133f98181620000633362000127565b60028190556001600160a01b038216156200008357620000838262000190565b5050604051620000939062000246565b604051809103906000f080158015620000b0573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055604051620000df9062000254565b604051809103906000f080158015620000fc573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b03929092169190911790555062000294915050565b6000805160206200268883398151915280546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b60008051602062002688833981519152546001600160a01b03163314620001ca57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200022a57600080fd5b505af11580156200023f573d6000803e3d6000fd5b5050505050565b6106c980620018b483390190565b61070b8062001f7d83390190565b6000602082840312156200027557600080fd5b81516001600160a01b03811681146200028d57600080fd5b9392505050565b61161080620002a46000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063b8bc073d11610071578063b8bc073d1461026e578063bf4fe57e1461028e578063cccf7a8e146102a1578063f2fde38b146102b4578063f419df72146102c757600080fd5b80638da5cb5b146102165780639d2c76b41461021e578063a2d829ca14610231578063af640d0f14610244578063b361be461461025b57600080fd5b80634fef6a38116100f45780634fef6a38146101a45780636b122fe0146101b757806375c0669c146101cd578063861eb905146101e05780638b2829471461020357600080fd5b80630ff4c9161461012657806330b67baa1461014f57806331b933b91461017a5780634cc822151461018f575b600080fd5b610139610134366004610f77565b6102da565b6040516101469190610fa6565b60405180910390f35b600054610162906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b61018261031a565b6040516101469190610fc0565b6101a261019d366004610f77565b610391565b005b6101a26101b2366004611004565b6103c3565b6101bf61043f565b604051610146929190611073565b6101a26101db366004611004565b610513565b6101f36101ee366004611004565b61058b565b6040519015158152602001610146565b6101a26102113660046111d5565b6105ef565b610162610623565b6101a261022c366004611004565b61062d565b61018261023f366004611230565b6106e1565b61024d60025481565b604051908152602001610146565b61018261026936600461124b565b61071a565b61028161027c366004610f77565b610793565b6040516101469190611288565b6101a261029c366004611004565b610835565b6101f36102af366004610f77565b6108ae565b6101a26102c2366004611004565b61091c565b6101a26102d536600461129b565b61095e565b6000806102e683610793565b8060200190518101906102f991906112c7565b90508063ffffffff16600281111561031357610313610f90565b9392505050565b60035460408051631043567360e21b815290516060926001600160a01b03169163410d59cc9160048083019260009291908290030181865afa158015610364573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261038c91908101906112ed565b905090565b61039a3361058b565b6103b75760405163203769ed60e11b815260040160405180910390fd5b6103c081610987565b50565b6103cb610bb0565b6001600160a01b0316336001600160a01b0316146103fc57604051632f7a8ee160e01b815260040160405180910390fd5b6001600160a01b031660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c90960205260409020805460ff19166001179055565b604080516001808252818301909252606091829190816020015b6060815260200190600190039081610459575050604080516001808252818301909252919350602080830190803683370190505090506040518060400160405280600581526020016476616c756560d81b815250826000815181106104c0576104c0611393565b6020026020010181905250600a816000815181106104e0576104e0611393565b602002602001019060218111156104f9576104f9610f90565b9081602181111561050c5761050c610f90565b9052509091565b61051c3361058b565b6105395760405163203769ed60e11b815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806105e957506105d4610623565b6001600160a01b0316826001600160a01b0316145b92915050565b6105f83361058b565b6106155760405163203769ed60e11b815260040160405180910390fd5b61061f8282610bde565b5050565b600061038c610bb0565b610635610bb0565b6001600160a01b0316336001600160a01b03161461066657604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156106c657600080fd5b505af11580156106da573d6000803e3d6000fd5b5050505050565b60606105e98260028111156106f8576106f8610f90565b6040805163ffffffff9092166020830152016040516020818303038152906040525b6004805482516020840120604051631e5b17a560e21b8152928301526060916001600160a01b039091169063796c5e9490602401600060405180830381865afa15801561076b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e991908101906112ed565b60008181526001602052604090208054606091906107b0906113a9565b80601f01602080910402602001604051908101604052809291908181526020018280546107dc906113a9565b80156108295780601f106107fe57610100808354040283529160200191610829565b820191906000526020600020905b81548152906001019060200180831161080c57829003601f168201915b50505050509050919050565b61083d610bb0565b6001600160a01b0316336001600160a01b03161461086e57604051632f7a8ee160e01b815260040160405180910390fd5b6001600160a01b031660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c90960205260409020805460ff19169055565b600354604051636667bd4760e11b8152600481018390526000916001600160a01b03169063cccf7a8e90602401602060405180830381865afa1580156108f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e991906113e3565b610924610bb0565b6001600160a01b0316336001600160a01b03161461095557604051632f7a8ee160e01b815260040160405180910390fd5b6103c081610ddd565b61061f82826040516020016109739190610fa6565b6040516020818303038152906040526105ef565b6004546000828152600160205260409081902090516001600160a01b03909216916385edea13916109b791611405565b60405190819003812060e083901b6001600160e01b03191682526004820152602401602060405180830381865afa1580156109f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1a919061147b565b600003610a245750565b6004546000828152600160205260409081902090516001600160a01b0390921691636526db7a91610a5491611405565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101849052604401600060405180830381600087803b158015610a9757600080fd5b505af1158015610aab573d6000803e3d6000fd5b5050600354604051634cc8221560e01b8152600481018590526001600160a01b039091169250634cc822159150602401600060405180830381600087803b158015610af557600080fd5b505af1158015610b09573d6000803e3d6000fd5b50505050610b1681610de6565b60005b60055481101561061f5760058181548110610b3657610b36611393565b600091825260209091200154604051634cc8221560e01b8152600481018490526001600160a01b0390911690634cc8221590602401600060405180830381600087803b158015610b8557600080fd5b505af1158015610b99573d6000803e3d6000fd5b505050508080610ba890611494565b915050610b19565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b600354604051630801f16960e11b8152600481018490526001600160a01b0390911690631003e2d290602401600060405180830381600087803b158015610c2457600080fd5b505af1158015610c38573d6000803e3d6000fd5b50506004546000858152600160205260409081902090516001600160a01b039092169350636526db7a9250610c6c91611405565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101859052604401600060405180830381600087803b158015610caf57600080fd5b505af1158015610cc3573d6000803e3d6000fd5b5050600480548451602086012060405163771602f760e01b815292830152602482018690526001600160a01b0316925063771602f79150604401600060405180830381600087803b158015610d1757600080fd5b505af1158015610d2b573d6000803e3d6000fd5b50505050610d398282610e2e565b60005b600554811015610dd85760058181548110610d5957610d59611393565b6000918252602090912001546040516242d70760e31b81526001600160a01b0390911690630216b83890610d9390869086906004016114bb565b600060405180830381600087803b158015610dad57600080fd5b505af1158015610dc1573d6000803e3d6000fd5b505050508080610dd090611494565b915050610d3c565b505050565b6103c081610eaf565b6000818152600160205260408120610dfd91610f29565b600054604051630de3b7b560e01b8152600481018390526001600160a01b0390911690630de3b7b5906024016106ac565b6000828152600160205260409020610e46828261151a565b5060005460405163cfd3c57f60e01b81526001600160a01b039091169063cfd3c57f90610e7990859085906004016114bb565b600060405180830381600087803b158015610e9357600080fd5b505af1158015610ea7573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b508054610f35906113a9565b6000825580601f10610f45575050565b601f0160209004906000526020600020908101906103c091905b80821115610f735760008155600101610f5f565b5090565b600060208284031215610f8957600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6020810160038310610fba57610fba610f90565b91905290565b6020808252825182820181905260009190848201906040850190845b81811015610ff857835183529284019291840191600101610fdc565b50909695505050505050565b60006020828403121561101657600080fd5b81356001600160a01b038116811461031357600080fd5b6000815180845260005b8181101561105357602081850181015186830182015201611037565b506000602082860101526020601f19601f83011685010191505092915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156110ca57605f198887030185526110b886835161102d565b9550938201939082019060010161109c565b50508584038187015286518085528782019482019350915060005b82811015611111578451602281106110ff576110ff610f90565b845293810193928101926001016110e5565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561115d5761115d61111e565b604052919050565b600082601f83011261117657600080fd5b813567ffffffffffffffff8111156111905761119061111e565b6111a3601f8201601f1916602001611134565b8181528460208386010111156111b857600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156111e857600080fd5b82359150602083013567ffffffffffffffff81111561120657600080fd5b61121285828601611165565b9150509250929050565b80356003811061122b57600080fd5b919050565b60006020828403121561124257600080fd5b6103138261121c565b60006020828403121561125d57600080fd5b813567ffffffffffffffff81111561127457600080fd5b61128084828501611165565b949350505050565b602081526000610313602083018461102d565b600080604083850312156112ae57600080fd5b823591506112be6020840161121c565b90509250929050565b6000602082840312156112d957600080fd5b815163ffffffff8116811461031357600080fd5b6000602080838503121561130057600080fd5b825167ffffffffffffffff8082111561131857600080fd5b818501915085601f83011261132c57600080fd5b81518181111561133e5761133e61111e565b8060051b915061134f848301611134565b818152918301840191848101908884111561136957600080fd5b938501935b838510156113875784518252938501939085019061136e565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806113bd57607f821691505b6020821081036113dd57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156113f557600080fd5b8151801515811461031357600080fd5b6000808354611413816113a9565b6001828116801561142b57600181146114405761146f565b60ff198416875282151583028701945061146f565b8760005260208060002060005b858110156114665781548a82015290840190820161144d565b50505082870194505b50929695505050505050565b60006020828403121561148d57600080fd5b5051919050565b6000600182016114b457634e487b7160e01b600052601160045260246000fd5b5060010190565b828152604060208201526000611280604083018461102d565b601f821115610dd857600081815260208120601f850160051c810160208610156114fb5750805b601f850160051c820191505b81811015610ea757828155600101611507565b815167ffffffffffffffff8111156115345761153461111e565b6115488161154284546113a9565b846114d4565b602080601f83116001811461157d57600084156115655750858301515b600019600386901b1c1916600185901b178555610ea7565b600085815260208120601f198616915b828110156115ac5788860151825594840194600190910190840161158d565b50858210156115ca5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212207e6aac6c505145caf254979ac78e942631c6c92d876dfb8f5a4c66a9eefcd2a264736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610621806100a86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e7cb6e11161005b5780638e7cb6e1146100f3578063949d225d1461011d578063cccf7a8e1461012e578063f2fde38b1461015157600080fd5b80631003e2d21461008d578063410d59cc146100a25780634cc82215146100c05780638da5cb5b146100d3575b600080fd5b6100a061009b36600461050b565b610164565b005b6100aa6101ef565b6040516100b79190610524565b60405180910390f35b6100a06100ce36600461050b565b610247565b6100db610374565b6040516001600160a01b0390911681526020016100b7565b61010661010136600461050b565b610383565b6040805192151583526020830191909152016100b7565b6000546040519081526020016100b7565b61014161013c36600461050b565b6103b6565b60405190151581526020016100b7565b6100a061015f366004610568565b610419565b61016c61045b565b6001600160a01b0316336001600160a01b03161461019d57604051632f7a8ee160e01b815260040160405180910390fd5b6101a6816103b6565b6101ec57600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190555b50565b6060600080548060200260200160405190810160405280929190818152602001828054801561023d57602002820191906000526020600020905b815481526020019060010190808311610229575b5050505050905090565b61024f61045b565b6001600160a01b0316336001600160a01b03161461028057604051632f7a8ee160e01b815260040160405180910390fd5b610289816103b6565b156101ec576000805461029e90600190610598565b815481106102ae576102ae6105bf565b906000526020600020015460006001600084815260200190815260200160002054815481106102df576102df6105bf565b60009182526020808320909101929092558281526001918290526040812054815490929190819084908110610316576103166105bf565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061035b5761035b6105d5565b6001900381819060005260206000200160009055905550565b600061037e61045b565b905090565b60008061038f836103b6565b61039e57506000928392509050565b50506000908152600160208190526040909120549091565b6000805481036103c857506000919050565b60008281526001602052604081205490036104045781600080815481106103f1576103f16105bf565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b61042161045b565b6001600160a01b0316336001600160a01b03161461045257604051632f7a8ee160e01b815260040160405180910390fd5b6101ec81610489565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516101ec92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561051d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561055c57835183529284019291840191600101610540565b50909695505050505050565b60006020828403121561057a57600080fd5b81356001600160a01b038116811461059157600080fd5b9392505050565b818103818111156105b957634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e26b625121584afbfcdd5a7c76a89bd07c2a082781c4635c0fc11c4dffdf9aed64736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610663806100a86000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806385edea131161005b57806385edea13146100d35780638da5cb5b14610101578063a0265ff814610121578063f2fde38b1461014457600080fd5b80636526db7a14610082578063771602f714610097578063796c5e94146100aa575b600080fd5b610095610090366004610531565b610157565b005b6100956100a5366004610531565b6102bd565b6100bd6100b8366004610553565b61033a565b6040516100ca919061056c565b60405180910390f35b6100f36100e1366004610553565b60009081526020819052604090205490565b6040519081526020016100ca565b61010961039a565b6040516001600160a01b0390911681526020016100ca565b61013461012f366004610531565b6103a9565b60405190151581526020016100ca565b6100956101523660046105b0565b61043c565b61015f610481565b6001600160a01b0316336001600160a01b03161461019057604051632f7a8ee160e01b815260040160405180910390fd5b61019a82826103a9565b156102b957600082815260208190526040902080546101bb906001906105e0565b815481106101cb576101cb610601565b6000918252602080832090910154848352828252604080842060018452818520868652909352909220548154811061020557610205610601565b60009182526020808320909101929092558381526001825260408082208483528084528183205486845283855291832085845293819052835491939092918490811061025357610253610601565b600091825260208083209091015483528281019390935260409182018120939093558483526001825280832084845282528083208390558483529082905290208054806102a2576102a2610617565b600190038181906000526020600020016000905590555b5050565b6102c5610481565b6001600160a01b0316336001600160a01b0316146102f657604051632f7a8ee160e01b815260040160405180910390fd5b61030082826103a9565b6102b95760009182526020828152604080842080546001808552838720868852855292862081905585845291820181558452922090910155565b6000818152602081815260409182902080548351818402810184019094528084526060939283018282801561038e57602002820191906000526020600020905b81548152602001906001019080831161037a575b50505050509050919050565b60006103a4610481565b905090565b60008281526020819052604081205481036103c657506000610436565b60008381526001602090815260408083208584529091528120549003610418576000838152602081905260408120805484929061040557610405610601565b9060005260206000200154149050610436565b50600082815260016020908152604080832084845290915290205415155b92915050565b610444610481565b6001600160a01b0316336001600160a01b03161461047557604051632f7a8ee160e01b815260040160405180910390fd5b61047e816104af565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161047e92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806040838503121561054457600080fd5b50508035926020909101359150565b60006020828403121561056557600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156105a457835183529284019291840191600101610588565b50909695505050505050565b6000602082840312156105c257600080fd5b81356001600160a01b03811681146105d957600080fd5b9392505050565b8181038181111561043657634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122074d2dbc3f020a29d6081fb9fcf69e8e3c85026be8658abafc11ba431c108e33464736f6c634300081300338a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460";

type AsteroidTypeComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AsteroidTypeComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AsteroidTypeComponent__factory extends ContractFactory {
  constructor(...args: AsteroidTypeComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AsteroidTypeComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<AsteroidTypeComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): AsteroidTypeComponent {
    return super.attach(address) as AsteroidTypeComponent;
  }
  override connect(signer: Signer): AsteroidTypeComponent__factory {
    return super.connect(signer) as AsteroidTypeComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AsteroidTypeComponentInterface {
    return new utils.Interface(_abi) as AsteroidTypeComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AsteroidTypeComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AsteroidTypeComponent;
  }
}
