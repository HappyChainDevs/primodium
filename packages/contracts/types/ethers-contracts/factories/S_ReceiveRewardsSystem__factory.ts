/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_ReceiveRewardsSystem,
  S_ReceiveRewardsSystemInterface,
} from "../S_ReceiveRewardsSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "battleEntity",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200200d3803806200200d8339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b611db780620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780636ad0ccab1461007a5780638da5cb5b1461008d578063f2fde38b146100ad575b600080fd5b61006461005f36600461186d565b6100c2565b6040516100719190611902565b60405180910390f35b610064610088366004611965565b61025e565b61009561029d565b6040516001600160a01b039091168152602001610071565b6100c06100bb366004611991565b6102d5565b005b6060600080838060200190518101906100db91906119ae565b9150915061017f600160009054906101000a90046001600160a01b03166001600160a01b0316630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610135573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015991906119dc565b7ff20fa73a7829be932c96614103009dc29af7918a98769c83c4610db9c2d16ccb61032b565b6001600160a01b0316336001600160a01b0316146102145760405162461bcd60e51b815260206004820152604160248201527f5b535f526563656976655265776172647353797374656d5d3a206f6e6c79204360448201527f6c61696d4f626a65637469766553797374656d2063616e2063616c6c207468696064820152607360f81b608482015260a4015b60405180910390fd5b60015461023a906001600160a01b0316610234846001600160a01b031690565b8361040d565b60408051602081018390520160405160208183030381529060405292505050919050565b604080516001600160a01b03841660208201529081018290526060906102949082016040516020818303038152906040526100c2565b90505b92915050565b60006102d07f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b0316331461031f57604051632f7a8ee160e01b815260040160405180910390fd5b61032881610428565b50565b604051637defd0f560e11b81526004810182905260009081906001600160a01b0385169063fbdfa1ea90602401600060405180830381865afa158015610375573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261039d9190810190611a88565b905080516000036103e45760405162461bcd60e51b81526020600482015260116024820152701a59081b9bdd081c9959da5cdd195c9959607a1b604482015260640161020b565b610405816000815181106103fa576103fa611abd565b602002602001015190565b949350505050565b610418838383610431565b610423838383610614565b505050565b61032881610836565b60006104be846001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610474573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049891906119dc565b7f5aae4235e012d9a8cfc3ae11f4c17dcb210c060407d93dcfa31a8953bb3f713761032b565b604051636667bd4760e11b8152600481018490529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa158015610506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052a9190611ad3565b6105345750505050565b6040516307fa648b60e11b8152600481018390526000906001600160a01b03831690630ff4c91690602401600060405180830381865afa15801561057c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105a49190810190611b0e565b905060005b81515181101561060c576105f98686846000015184815181106105ce576105ce611abd565b6020026020010151856020015185815181106105ec576105ec611abd565b60200260200101516108b0565b508061060481611c14565b9150506105a9565b505050505050565b60006106a1846001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b91906119dc565b7f40fc33e305e2b5c001af7a31c425b49065a9b9fc2dd4ddc143ca7bd8fcbaf98661032b565b604051636667bd4760e11b8152600481018490529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa1580156106e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070d9190611ad3565b6107175750505050565b6040516307fa648b60e11b8152600481018390526000906001600160a01b03831690630ff4c91690602401600060405180830381865afa15801561075f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107879190810190611b0e565b905060005b81515181101561060c576107de8686846000015184815181106107b1576107b1611abd565b6020026020010151856020015185815181106107cf576107cf611abd565b602002602001015160016109c3565b6108248686846000015184815181106107f9576107f9611abd565b60200260200101518560200151858151811061081757610817611abd565b6020026020010151610e44565b8061082e81611c14565b91505061078c565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6040516309e4fb4360e31b81527ffba48a04766694c16713a414735f83be9cb20bbb29b5e18846cc8f1510640845600482015260009081906001600160a01b03871690634f27da1890602401602060405180830381865afa158015610919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093d91906119dc565b9050600061094b8587610e5f565b9050600061095a888888610e8b565b90508463ffffffff168163ffffffff16111561099c57610990888888886109818888610f70565b61098b9190611c2d565b611050565b60009350505050610405565b6109ad888888846109818888610f70565b6109b78186611c51565b98975050505050505050565b63ffffffff821615610e3d576040516309e4fb4360e31b81527f391ed979ad48ef48aa0e385aaffe280328c830054d2153bba1cf3da0b7bf45ab60048201526000906001600160a01b03871690634f27da1890602401602060405180830381865afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a91906119dc565b90506000610a69878787611375565b90506000610a7d868363ffffffff16610e5f565b604051636667bd4760e11b8152600481018290529091506001600160a01b0384169063cccf7a8e90602401602060405180830381865afa158015610ac5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae99190611ad3565b610af557505050610e3d565b6040516309e4fb4360e31b81527f4f2e352c22f4d6e8661eee4a98890fa6dfead6e74bc680ee4c52da1cc198d7c960048201526000906001600160a01b038a1690634f27da1890602401602060405180830381865afa158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8091906119dc565b6040516307fa648b60e11b8152600481018490529091506000906001600160a01b03861690630ff4c91690602401600060405180830381865afa158015610bcb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bf39190810190611b0e565b516040516307fa648b60e11b8152600481018590529091506000906001600160a01b03871690630ff4c91690602401600060405180830381865afa158015610c3f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c679190810190611b0e565b60200151905060005b8251811015610e3557818181518110610c8b57610c8b611abd565b602002602001015163ffffffff1660000315610e2357600089838381518110610cb657610cb6611abd565b6020026020010151610cc89190611c6e565b90506000610cef858481518110610ce157610ce1611abd565b60200260200101518e610e5f565b90508915610d7d57856001600160a01b031663d923c3c48284610d128a86610f70565b610d1c9190611c2d565b6040516001600160e01b031960e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b158015610d6057600080fd5b505af1158015610d74573d6000803e3d6000fd5b50505050610e20565b610d878682610f70565b63ffffffff168263ffffffff1611610dbe57856001600160a01b031663d923c3c48284610db48a86610f70565b610d1c9190611c51565b604051633648f0f160e21b815260048101829052600060248201526001600160a01b0387169063d923c3c490604401600060405180830381600087803b158015610e0757600080fd5b505af1158015610e1b573d6000803e3d6000fd5b505050505b50505b80610e2d81611c14565b915050610c70565b505050505050505b5050505050565b6000610e508585611420565b9050610e3d8585838686611524565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600080610e998585856115fa565b6040516309e4fb4360e31b81527ffba48a04766694c16713a414735f83be9cb20bbb29b5e18846cc8f15106408456004820152909150600090610f3a906001600160a01b03881690634f27da1890602401602060405180830381865afa158015610f07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2b91906119dc565b610f358688610e5f565b610f70565b90508063ffffffff168263ffffffff1611610f5a57600092505050610f69565b610f648183611c51565b925050505b9392505050565b604051636667bd4760e11b8152600481018290526000906001600160a01b0384169063cccf7a8e90602401602060405180830381865afa158015610fb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdc9190611ad3565b610fe7576000610294565b6040516307fa648b60e11b8152600481018390526001600160a01b03841690630ff4c91690602401602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102949190611c96565b6040516309e4fb4360e31b81527ffba48a04766694c16713a414735f83be9cb20bbb29b5e18846cc8f151064084560048201526000906001600160a01b03861690634f27da1890602401602060405180830381865afa1580156110b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110db91906119dc565b6040516309e4fb4360e31b81527f8d5746953402e95fa35ce71ddaa7efe7922c48a307985b7d64ea3f27abcb14f960048201529091506000906001600160a01b03871690634f27da1890602401602060405180830381865afa158015611145573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116991906119dc565b905060006111778587610e5f565b905060006111858483610f70565b905060006111938489611693565b6040516309e4fb4360e31b81527fd9603ec917f4576302b3c02b1fa235f8e01465fbf139aba994a05da60796f53e600482015290915060009061122b906001600160a01b038c1690634f27da1890602401602060405180830381865afa158015611201573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122591906119dc565b89611693565b90508263ffffffff168763ffffffff1610156112795761124b8784611c51565b61125b9063ffffffff1682611cb1565b9050818111156112685750805b6112728183611cc8565b91506112a2565b6112838388611c51565b6112939063ffffffff1682611cb1565b905061129f8183611cdb565b91505b604051631ab06ee560e01b8152600481018a9052602481018390526001600160a01b03861690631ab06ee590604401600060405180830381600087803b1580156112eb57600080fd5b505af11580156112ff573d6000803e3d6000fd5b5050604051633648f0f160e21b81526004810187905263ffffffff8a1660248201526001600160a01b038916925063d923c3c49150604401600060405180830381600087803b15801561135157600080fd5b505af1158015611365573d6000803e3d6000fd5b5050505050505050505050505050565b6000806113828385610e5f565b6040516309e4fb4360e31b81527fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e6004820152909150611417906001600160a01b03871690634f27da1890602401602060405180830381865afa1580156113ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141191906119dc565b82610f70565b95945050505050565b6040516309e4fb4360e31b81527f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b184310660048201526000906001600160a01b03841690634f27da1890602401602060405180830381865afa158015611487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ab91906119dc565b6001600160a01b0316630ff4c916836040518263ffffffff1660e01b81526004016114d891815260200190565b606060405180830381865afa1580156114f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115199190611d00565b604001519392505050565b63ffffffff811615610e3d57604080516020808201859052818301879052606080830187905283518084039091018152608090920190925280519101206000906040516309e4fb4360e31b81527f8bd637b568ed540cabc10b49a9f3688fe5b7e4b706298b6cd07c2e1ed5600e93600482015290915061060c906001600160a01b03881690634f27da1890602401602060405180830381865afa1580156115cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f391906119dc565b8284611773565b6040516309e4fb4360e31b81527f16b501788471b0e2be7833a8d54a049f02ca15b837831d34c5bc534a33e5a1f76004820152600090610405906001600160a01b03861690634f27da1890602401602060405180830381865afa158015611665573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168991906119dc565b610f358486610e5f565b604051636667bd4760e11b8152600481018290526000906001600160a01b0384169063cccf7a8e90602401602060405180830381865afa1580156116db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ff9190611ad3565b61170a576000610294565b6040516307fa648b60e11b8152600481018390526001600160a01b03841690630ff4c91690602401602060405180830381865afa15801561174f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102949190611d68565b600061177f8484610f70565b90506001600160a01b03841663d923c3c48461179b8585611c2d565b6040516001600160e01b031960e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b1580156117df57600080fd5b505af11580156117f3573d6000803e3d6000fd5b5050505050505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611836576118366117fd565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611865576118656117fd565b604052919050565b6000602080838503121561188057600080fd5b823567ffffffffffffffff8082111561189857600080fd5b818501915085601f8301126118ac57600080fd5b8135818111156118be576118be6117fd565b6118d0601f8201601f1916850161183c565b915080825286848285010111156118e657600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561192f57858101830151858201604001528201611913565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461032857600080fd5b6000806040838503121561197857600080fd5b823561198381611950565b946020939093013593505050565b6000602082840312156119a357600080fd5b8135610f6981611950565b600080604083850312156119c157600080fd5b82516119cc81611950565b6020939093015192949293505050565b6000602082840312156119ee57600080fd5b8151610f6981611950565b600067ffffffffffffffff821115611a1357611a136117fd565b5060051b60200190565b600082601f830112611a2e57600080fd5b81516020611a43611a3e836119f9565b61183c565b82815260059290921b84018101918181019086841115611a6257600080fd5b8286015b84811015611a7d5780518352918301918301611a66565b509695505050505050565b600060208284031215611a9a57600080fd5b815167ffffffffffffffff811115611ab157600080fd5b61040584828501611a1d565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ae557600080fd5b81518015158114610f6957600080fd5b805163ffffffff81168114611b0957600080fd5b919050565b60006020808385031215611b2157600080fd5b825167ffffffffffffffff80821115611b3957600080fd5b9084019060408287031215611b4d57600080fd5b611b55611813565b825182811115611b6457600080fd5b611b7088828601611a1d565b8252508383015182811115611b8457600080fd5b80840193505086601f840112611b9957600080fd5b82519150611ba9611a3e836119f9565b82815260059290921b83018401918481019088841115611bc857600080fd5b938501935b83851015611bed57611bde85611af5565b82529385019390850190611bcd565b948201949094529695505050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201611c2657611c26611bfe565b5060010190565b63ffffffff818116838216019080821115611c4a57611c4a611bfe565b5092915050565b63ffffffff828116828216039080821115611c4a57611c4a611bfe565b63ffffffff818116838216028082169190828114611c8e57611c8e611bfe565b505092915050565b600060208284031215611ca857600080fd5b61029482611af5565b808202811582820484141761029757610297611bfe565b8181038181111561029757610297611bfe565b8082018082111561029757610297611bfe565b8051600381900b8114611b0957600080fd5b600060608284031215611d1257600080fd5b6040516060810181811067ffffffffffffffff82111715611d3557611d356117fd565b604052611d4183611cee565b8152611d4f60208401611cee565b6020820152604083015160408201528091505092915050565b600060208284031215611d7a57600080fd5b505191905056fea2646970667358221220868b862f852f3e17c4bcfeb3b42dab7a1595f2181918a783a141769c6e171e7264736f6c63430008130033";

type S_ReceiveRewardsSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_ReceiveRewardsSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_ReceiveRewardsSystem__factory extends ContractFactory {
  constructor(...args: S_ReceiveRewardsSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_ReceiveRewardsSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_ReceiveRewardsSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_ReceiveRewardsSystem {
    return super.attach(address) as S_ReceiveRewardsSystem;
  }
  override connect(signer: Signer): S_ReceiveRewardsSystem__factory {
    return super.connect(signer) as S_ReceiveRewardsSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_ReceiveRewardsSystemInterface {
    return new utils.Interface(_abi) as S_ReceiveRewardsSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_ReceiveRewardsSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_ReceiveRewardsSystem;
  }
}
