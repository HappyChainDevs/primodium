/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DebugRemoveUpgradeRequirementsSystem,
  DebugRemoveUpgradeRequirementsSystemInterface,
} from "../DebugRemoveUpgradeRequirementsSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "buildingId",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "buildingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "removeRequiredResourcesAndTechnologyConditionsForUpgradingBuildingIdLevel",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162000e8238038062000e82833981016040819052610031916101d0565b818161003c3361013e565b6001600160a01b0381161561005157806100b3565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b3919061020a565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8680549092161790555050505061022e565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811681146101cd57600080fd5b50565b600080604083850312156101e357600080fd5b82516101ee816101b8565b60208401519092506101ff816101b8565b809150509250929050565b60006020828403121561021c57600080fd5b8151610227816101b8565b9392505050565b610c44806200023e6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063596317c811610050578063596317c8146100a85780638da5cb5b146100bb578063f2fde38b146100e857600080fd5b806309c5eabe1461006c5780633e991df314610095575b600080fd5b61007f61007a3660046108e2565b6100fd565b60405161008c9190610995565b60405180910390f35b61007f6100a3366004610a01565b6101d5565b61007f6100b6366004610a1a565b610207565b6100c3610477565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008c565b6100fb6100f6366004610a5e565b6104bc565b005b6001546060906101229073ffffffffffffffffffffffffffffffffffffffff16610538565b61018d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f7420696e206465627567206d6f646500000000000000000000000000000060448201526064015b60405180910390fd5b6000828060200190518101906101a39190610a82565b905060005b60648110156101ce576101bb8282610207565b50806101c681610a9b565b9150506101a8565b5050919050565b6060610201826040516020016101ed91815260200190565b6040516020818303038152906040526100fd565b92915050565b60015460609061022c9073ffffffffffffffffffffffffffffffffffffffff16610538565b610292576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f7420696e206465627567206d6f64650000000000000000000000000000006044820152606401610184565b600080546102d69073ffffffffffffffffffffffffffffffffffffffff167f1203294d5b2b02e65b2344f70a790c2cf726d3822e7f267d74f37f3dbe44a344610664565b600080549192509061031e9073ffffffffffffffffffffffffffffffffffffffff167f0842a184a814d4c9890dc4a7e03369a83e6e7490abc9f169e0062ff4011b8a23610664565b604080516020808201899052818301889052825180830384018152606083019384905280519101207f4cc8221500000000000000000000000000000000000000000000000000000000909252606481019190915290915073ffffffffffffffffffffffffffffffffffffffff831690634cc8221590608401600060405180830381600087803b1580156103b057600080fd5b505af11580156103c4573d6000803e3d6000fd5b50506040805160208082018a9052818301899052825180830384018152606083019384905280519101207f4cc8221500000000000000000000000000000000000000000000000000000000909252606481019190915273ffffffffffffffffffffffffffffffffffffffff84169250634cc822159150608401600060405180830381600087803b15801561045757600080fd5b505af115801561046b573d6000803e3d6000fd5b50505050505092915050565b60006104b77f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461052c576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610535816107b0565b50565b60006105d28273ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ac9190610afa565b7fc3e18fdee44dca3d8fa1615250f268046d17fbc35f417d176d5c09d7ca8d3202610664565b6040517fcccf7a8e00000000000000000000000000000000000000000000000000000000815261060d600482015273ffffffffffffffffffffffffffffffffffffffff919091169063cccf7a8e90602401602060405180830381865afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102019190610b17565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156106d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261071a9190810190610b39565b90508051600003610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610184565b6107a88160008151811061079d5761079d610bdf565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610535928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156108da576108da610864565b604052919050565b600060208083850312156108f557600080fd5b823567ffffffffffffffff8082111561090d57600080fd5b818501915085601f83011261092157600080fd5b81358181111561093357610933610864565b610963847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610893565b9150808252868482850101111561097957600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156109c2578581018301518582016040015282016109a6565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b600060208284031215610a1357600080fd5b5035919050565b60008060408385031215610a2d57600080fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff8116811461053557600080fd5b600060208284031215610a7057600080fd5b8135610a7b81610a3c565b9392505050565b600060208284031215610a9457600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610af3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600060208284031215610b0c57600080fd5b8151610a7b81610a3c565b600060208284031215610b2957600080fd5b81518015158114610a7b57600080fd5b60006020808385031215610b4c57600080fd5b825167ffffffffffffffff80821115610b6457600080fd5b818501915085601f830112610b7857600080fd5b815181811115610b8a57610b8a610864565b8060051b9150610b9b848301610893565b8181529183018401918481019088841115610bb557600080fd5b938501935b83851015610bd357845182529385019390850190610bba565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212202d01980bbd659861ca2136cfa37faaaef9299490da84d85421a400d9576c3b8c64736f6c63430008130033";

type DebugRemoveUpgradeRequirementsSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebugRemoveUpgradeRequirementsSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebugRemoveUpgradeRequirementsSystem__factory extends ContractFactory {
  constructor(...args: DebugRemoveUpgradeRequirementsSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DebugRemoveUpgradeRequirementsSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<DebugRemoveUpgradeRequirementsSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): DebugRemoveUpgradeRequirementsSystem {
    return super.attach(address) as DebugRemoveUpgradeRequirementsSystem;
  }
  override connect(
    signer: Signer
  ): DebugRemoveUpgradeRequirementsSystem__factory {
    return super.connect(
      signer
    ) as DebugRemoveUpgradeRequirementsSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebugRemoveUpgradeRequirementsSystemInterface {
    return new utils.Interface(
      _abi
    ) as DebugRemoveUpgradeRequirementsSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DebugRemoveUpgradeRequirementsSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DebugRemoveUpgradeRequirementsSystem;
  }
}
