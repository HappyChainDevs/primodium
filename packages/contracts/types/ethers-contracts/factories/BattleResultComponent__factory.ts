/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BattleResultComponent,
  BattleResultComponentInterface,
} from "../BattleResultComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "winnerEntity",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "attackerUnitsLeft",
            type: "uint32[]",
          },
          {
            internalType: "uint32[]",
            name: "defenderUnitsLeft",
            type: "uint32[]",
          },
        ],
        internalType: "struct BattleResult",
        name: "result",
        type: "tuple",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "winnerEntity",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "attackerUnitsLeft",
            type: "uint32[]",
          },
          {
            internalType: "uint32[]",
            name: "defenderUnitsLeft",
            type: "uint32[]",
          },
        ],
        internalType: "struct BattleResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "indexer",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "winnerEntity",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "attackerUnitsLeft",
            type: "uint32[]",
          },
          {
            internalType: "uint32[]",
            name: "defenderUnitsLeft",
            type: "uint32[]",
          },
        ],
        internalType: "struct BattleResult",
        name: "value",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "winnerEntity",
        type: "uint256",
      },
      {
        internalType: "uint32[]",
        name: "attackerUnitsLeft",
        type: "uint32[]",
      },
      {
        internalType: "uint32[]",
        name: "defenderUnitsLeft",
        type: "uint32[]",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002c2d38038062002c2d833981016040819052620000349162000262565b807fe640406de38b5823e93b424dea7e50f1ad48bbf64449bd5a2cb23e5979ef46258181620000633362000127565b60028190556001600160a01b038216156200008357620000838262000190565b5050604051620000939062000246565b604051809103906000f080158015620000b0573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055604051620000df9062000254565b604051809103906000f080158015620000fc573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b03929092169190911790555062000294915050565b60008051602062002c0d83398151915280546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b60008051602062002c0d833981519152546001600160a01b03163314620001ca57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200022a57600080fd5b505af11580156200023f573d6000803e3d6000fd5b5050505050565b6106c98062001e3983390190565b61070b806200250283390190565b6000602082840312156200027557600080fd5b81516001600160a01b03811681146200028d57600080fd5b9392505050565b611b9580620002a46000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638da5cb5b116100ad578063b361be4611610071578063b361be461461028c578063b8bc073d1461029f578063bf4fe57e146102bf578063cccf7a8e146102d2578063f2fde38b146102e557600080fd5b80638da5cb5b14610234578063901c89e31461023c5780639aefc2b81461024f5780639d2c76b414610262578063af640d0f1461027557600080fd5b80634fef6a38116100f45780634fef6a38146101c25780636b122fe0146101d557806375c0669c146101eb578063861eb905146101fe5780638b2829471461022157600080fd5b80630ff4c9161461013157806330b67baa1461015a57806331b933b9146101855780634cbc4bbd1461019a5780634cc82215146101af575b600080fd5b61014461013f366004611108565b6102f8565b6040516101519190611162565b60405180910390f35b60005461016d906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b61018d61035f565b60405161015191906111ae565b6101ad6101a836600461120a565b6103d6565b005b6101ad6101bd366004611108565b610422565b6101ad6101d0366004611250565b610454565b6101dd6104d0565b6040516101519291906112dc565b6101ad6101f9366004611250565b6106c1565b61021161020c366004611250565b610739565b6040519015158152602001610151565b6101ad61022f36600461144a565b61079d565b61016d6107cd565b61018d61024a366004611486565b6107d7565b6101ad61025d36600461156b565b610801565b6101ad610270366004611250565b610820565b61027e60025481565b604051908152602001610151565b61018d61029a3660046115e1565b6108d4565b6102b26102ad366004611108565b61094d565b6040516101519190611615565b6101ad6102cd366004611250565b6109ef565b6102116102e0366004611108565b610a68565b6101ad6102f3366004611250565b610ad6565b61031c60405180606001604052806000815260200160608152602001606081525090565b600080600061032a8561094d565b80602001905181019061033d919061168c565b6040805160608101825293845260208401929092529082015295945050505050565b60035460408051631043567360e21b815290516060926001600160a01b03169163410d59cc9160048083019260009291908290030181865afa1580156103a9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103d191908101906116f8565b905090565b61041e8282356103e96020850185611788565b6103f66040870187611788565b60405160200161040a959493929190611813565b60405160208183030381529060405261079d565b5050565b61042b33610739565b6104485760405163203769ed60e11b815260040160405180910390fd5b61045181610b18565b50565b61045c610d41565b6001600160a01b0316336001600160a01b03161461048d57604051632f7a8ee160e01b815260040160405180910390fd5b6001600160a01b031660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c90960205260409020805460ff19166001179055565b60408051600380825260808201909252606091829190816020015b60608152602001906001900390816104eb5750506040805160038082526080820190925291935060208201606080368337019050509050604051806040016040528060068152602001653bb4b73732b960d11b815250826000815181106105545761055461184c565b6020026020010181905250600d816000815181106105745761057461184c565b6020026020010190602181111561058d5761058d6112c6565b908160218111156105a0576105a06112c6565b8152505060405180604001604052806011815260200170185d1d1858dad95c955b9a5d1cd319599d607a1b815250826001815181106105e1576105e161184c565b6020026020010181905250601c816001815181106106015761060161184c565b6020026020010190602181111561061a5761061a6112c6565b9081602181111561062d5761062d6112c6565b8152505060405180604001604052806011815260200170191959995b99195c955b9a5d1cd319599d607a1b8152508260028151811061066e5761066e61184c565b6020026020010181905250601c8160028151811061068e5761068e61184c565b602002602001019060218111156106a7576106a76112c6565b908160218111156106ba576106ba6112c6565b9052509091565b6106ca33610739565b6106e75760405163203769ed60e11b815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061079757506107826107cd565b6001600160a01b0316826001600160a01b0316145b92915050565b6107a633610739565b6107c35760405163203769ed60e11b815260040160405180910390fd5b61041e8282610d6f565b60006103d1610d41565b6060610797826040516020016107ed91906118aa565b6040516020818303038152906040526108d4565b61081a8484848460405160200161040a9392919061190a565b50505050565b610828610d41565b6001600160a01b0316336001600160a01b03161461085957604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156108b957600080fd5b505af11580156108cd573d6000803e3d6000fd5b5050505050565b6004805482516020840120604051631e5b17a560e21b8152928301526060916001600160a01b039091169063796c5e9490602401600060405180830381865afa158015610925573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261079791908101906116f8565b600081815260016020526040902080546060919061096a90611935565b80601f016020809104026020016040519081016040528092919081815260200182805461099690611935565b80156109e35780601f106109b8576101008083540402835291602001916109e3565b820191906000526020600020905b8154815290600101906020018083116109c657829003601f168201915b50505050509050919050565b6109f7610d41565b6001600160a01b0316336001600160a01b031614610a2857604051632f7a8ee160e01b815260040160405180910390fd5b6001600160a01b031660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c90960205260409020805460ff19169055565b600354604051636667bd4760e11b8152600481018390526000916001600160a01b03169063cccf7a8e90602401602060405180830381865afa158015610ab2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107979190611969565b610ade610d41565b6001600160a01b0316336001600160a01b031614610b0f57604051632f7a8ee160e01b815260040160405180910390fd5b61045181610f6e565b6004546000828152600160205260409081902090516001600160a01b03909216916385edea1391610b489161198b565b60405190819003812060e083901b6001600160e01b03191682526004820152602401602060405180830381865afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab9190611a01565b600003610bb55750565b6004546000828152600160205260409081902090516001600160a01b0390921691636526db7a91610be59161198b565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101849052604401600060405180830381600087803b158015610c2857600080fd5b505af1158015610c3c573d6000803e3d6000fd5b5050600354604051634cc8221560e01b8152600481018590526001600160a01b039091169250634cc822159150602401600060405180830381600087803b158015610c8657600080fd5b505af1158015610c9a573d6000803e3d6000fd5b50505050610ca781610f77565b60005b60055481101561041e5760058181548110610cc757610cc761184c565b600091825260209091200154604051634cc8221560e01b8152600481018490526001600160a01b0390911690634cc8221590602401600060405180830381600087803b158015610d1657600080fd5b505af1158015610d2a573d6000803e3d6000fd5b505050508080610d3990611a1a565b915050610caa565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b600354604051630801f16960e11b8152600481018490526001600160a01b0390911690631003e2d290602401600060405180830381600087803b158015610db557600080fd5b505af1158015610dc9573d6000803e3d6000fd5b50506004546000858152600160205260409081902090516001600160a01b039092169350636526db7a9250610dfd9161198b565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101859052604401600060405180830381600087803b158015610e4057600080fd5b505af1158015610e54573d6000803e3d6000fd5b5050600480548451602086012060405163771602f760e01b815292830152602482018690526001600160a01b0316925063771602f79150604401600060405180830381600087803b158015610ea857600080fd5b505af1158015610ebc573d6000803e3d6000fd5b50505050610eca8282610fbf565b60005b600554811015610f695760058181548110610eea57610eea61184c565b6000918252602090912001546040516242d70760e31b81526001600160a01b0390911690630216b83890610f249086908690600401611a41565b600060405180830381600087803b158015610f3e57600080fd5b505af1158015610f52573d6000803e3d6000fd5b505050508080610f6190611a1a565b915050610ecd565b505050565b61045181611040565b6000818152600160205260408120610f8e916110ba565b600054604051630de3b7b560e01b8152600481018390526001600160a01b0390911690630de3b7b59060240161089f565b6000828152600160205260409020610fd78282611aa0565b5060005460405163cfd3c57f60e01b81526001600160a01b039091169063cfd3c57f9061100a9085908590600401611a41565b600060405180830381600087803b15801561102457600080fd5b505af1158015611038573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b5080546110c690611935565b6000825580601f106110d6575050565b601f01602090049060005260206000209081019061045191905b8082111561110457600081556001016110f0565b5090565b60006020828403121561111a57600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561115757815163ffffffff1687529582019590820190600101611135565b509495945050505050565b602081528151602082015260006020830151606060408401526111886080840182611121565b90506040840151601f198483030160608501526111a58282611121565b95945050505050565b6020808252825182820181905260009190848201906040850190845b818110156111e6578351835292840192918401916001016111ca565b50909695505050505050565b60006060828403121561120457600080fd5b50919050565b6000806040838503121561121d57600080fd5b8235915060208301356001600160401b0381111561123a57600080fd5b611246858286016111f2565b9150509250929050565b60006020828403121561126257600080fd5b81356001600160a01b038116811461127957600080fd5b9392505050565b6000815180845260005b818110156112a65760208185018101518683018201520161128a565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561133357605f19888703018552611321868351611280565b95509382019390820190600101611305565b50508584038187015286518085528782019482019350915060005b828110156113885784516022811061137657634e487b7160e01b600052602160045260246000fd5b8452938101939281019260010161134e565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156113d3576113d3611395565b604052919050565b600082601f8301126113ec57600080fd5b81356001600160401b0381111561140557611405611395565b611418601f8201601f19166020016113ab565b81815284602083860101111561142d57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561145d57600080fd5b8235915060208301356001600160401b0381111561147a57600080fd5b611246858286016113db565b60006020828403121561149857600080fd5b81356001600160401b038111156114ae57600080fd5b6114ba848285016111f2565b949350505050565b60006001600160401b038211156114db576114db611395565b5060051b60200190565b63ffffffff8116811461045157600080fd5b600082601f83011261150857600080fd5b8135602061151d611518836114c2565b6113ab565b82815260059290921b8401810191818101908684111561153c57600080fd5b8286015b84811015611560578035611553816114e5565b8352918301918301611540565b509695505050505050565b6000806000806080858703121561158157600080fd5b843593506020850135925060408501356001600160401b03808211156115a657600080fd5b6115b2888389016114f7565b935060608701359150808211156115c857600080fd5b506115d5878288016114f7565b91505092959194509250565b6000602082840312156115f357600080fd5b81356001600160401b0381111561160957600080fd5b6114ba848285016113db565b6020815260006112796020830184611280565b600082601f83011261163957600080fd5b81516020611649611518836114c2565b82815260059290921b8401810191818101908684111561166857600080fd5b8286015b8481101561156057805161167f816114e5565b835291830191830161166c565b6000806000606084860312156116a157600080fd5b8351925060208401516001600160401b03808211156116bf57600080fd5b6116cb87838801611628565b935060408601519150808211156116e157600080fd5b506116ee86828701611628565b9150509250925092565b6000602080838503121561170b57600080fd5b82516001600160401b0381111561172157600080fd5b8301601f8101851361173257600080fd5b8051611740611518826114c2565b81815260059190911b8201830190838101908783111561175f57600080fd5b928401925b8284101561177d57835182529284019290840190611764565b979650505050505050565b6000808335601e1984360301811261179f57600080fd5b8301803591506001600160401b038211156117b957600080fd5b6020019150600581901b36038213156117d157600080fd5b9250929050565b8183526000602080850194508260005b858110156111575781356117fb816114e5565b63ffffffff16875295820195908201906001016117e8565b85815260606020820152600061182d6060830186886117d8565b82810360408401526118408185876117d8565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261187957600080fd5b83016020810192503590506001600160401b0381111561189857600080fd5b8060051b36038213156117d157600080fd5b602081528135602082015260006118c46020840184611862565b606060408501526118d96080850182846117d8565b9150506118e96040850185611862565b848303601f190160608601526119008382846117d8565b9695505050505050565b8381526060602082015260006119236060830185611121565b82810360408401526119008185611121565b600181811c9082168061194957607f821691505b60208210810361120457634e487b7160e01b600052602260045260246000fd5b60006020828403121561197b57600080fd5b8151801515811461127957600080fd5b600080835461199981611935565b600182811680156119b157600181146119c6576119f5565b60ff19841687528215158302870194506119f5565b8760005260208060002060005b858110156119ec5781548a8201529084019082016119d3565b50505082870194505b50929695505050505050565b600060208284031215611a1357600080fd5b5051919050565b600060018201611a3a57634e487b7160e01b600052601160045260246000fd5b5060010190565b8281526040602082015260006114ba6040830184611280565b601f821115610f6957600081815260208120601f850160051c81016020861015611a815750805b601f850160051c820191505b8181101561103857828155600101611a8d565b81516001600160401b03811115611ab957611ab9611395565b611acd81611ac78454611935565b84611a5a565b602080601f831160018114611b025760008415611aea5750858301515b600019600386901b1c1916600185901b178555611038565b600085815260208120601f198616915b82811015611b3157888601518255948401946001909101908401611b12565b5085821015611b4f5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220bed4c02393fe6da6672b70cc75a8ac4d6d3d94e798fdf9f1e440ec04a6a55d6b64736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610621806100a86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e7cb6e11161005b5780638e7cb6e1146100f3578063949d225d1461011d578063cccf7a8e1461012e578063f2fde38b1461015157600080fd5b80631003e2d21461008d578063410d59cc146100a25780634cc82215146100c05780638da5cb5b146100d3575b600080fd5b6100a061009b36600461050b565b610164565b005b6100aa6101ef565b6040516100b79190610524565b60405180910390f35b6100a06100ce36600461050b565b610247565b6100db610374565b6040516001600160a01b0390911681526020016100b7565b61010661010136600461050b565b610383565b6040805192151583526020830191909152016100b7565b6000546040519081526020016100b7565b61014161013c36600461050b565b6103b6565b60405190151581526020016100b7565b6100a061015f366004610568565b610419565b61016c61045b565b6001600160a01b0316336001600160a01b03161461019d57604051632f7a8ee160e01b815260040160405180910390fd5b6101a6816103b6565b6101ec57600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190555b50565b6060600080548060200260200160405190810160405280929190818152602001828054801561023d57602002820191906000526020600020905b815481526020019060010190808311610229575b5050505050905090565b61024f61045b565b6001600160a01b0316336001600160a01b03161461028057604051632f7a8ee160e01b815260040160405180910390fd5b610289816103b6565b156101ec576000805461029e90600190610598565b815481106102ae576102ae6105bf565b906000526020600020015460006001600084815260200190815260200160002054815481106102df576102df6105bf565b60009182526020808320909101929092558281526001918290526040812054815490929190819084908110610316576103166105bf565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061035b5761035b6105d5565b6001900381819060005260206000200160009055905550565b600061037e61045b565b905090565b60008061038f836103b6565b61039e57506000928392509050565b50506000908152600160208190526040909120549091565b6000805481036103c857506000919050565b60008281526001602052604081205490036104045781600080815481106103f1576103f16105bf565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b61042161045b565b6001600160a01b0316336001600160a01b03161461045257604051632f7a8ee160e01b815260040160405180910390fd5b6101ec81610489565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516101ec92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561051d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561055c57835183529284019291840191600101610540565b50909695505050505050565b60006020828403121561057a57600080fd5b81356001600160a01b038116811461059157600080fd5b9392505050565b818103818111156105b957634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e26b625121584afbfcdd5a7c76a89bd07c2a082781c4635c0fc11c4dffdf9aed64736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610663806100a86000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806385edea131161005b57806385edea13146100d35780638da5cb5b14610101578063a0265ff814610121578063f2fde38b1461014457600080fd5b80636526db7a14610082578063771602f714610097578063796c5e94146100aa575b600080fd5b610095610090366004610531565b610157565b005b6100956100a5366004610531565b6102bd565b6100bd6100b8366004610553565b61033a565b6040516100ca919061056c565b60405180910390f35b6100f36100e1366004610553565b60009081526020819052604090205490565b6040519081526020016100ca565b61010961039a565b6040516001600160a01b0390911681526020016100ca565b61013461012f366004610531565b6103a9565b60405190151581526020016100ca565b6100956101523660046105b0565b61043c565b61015f610481565b6001600160a01b0316336001600160a01b03161461019057604051632f7a8ee160e01b815260040160405180910390fd5b61019a82826103a9565b156102b957600082815260208190526040902080546101bb906001906105e0565b815481106101cb576101cb610601565b6000918252602080832090910154848352828252604080842060018452818520868652909352909220548154811061020557610205610601565b60009182526020808320909101929092558381526001825260408082208483528084528183205486845283855291832085845293819052835491939092918490811061025357610253610601565b600091825260208083209091015483528281019390935260409182018120939093558483526001825280832084845282528083208390558483529082905290208054806102a2576102a2610617565b600190038181906000526020600020016000905590555b5050565b6102c5610481565b6001600160a01b0316336001600160a01b0316146102f657604051632f7a8ee160e01b815260040160405180910390fd5b61030082826103a9565b6102b95760009182526020828152604080842080546001808552838720868852855292862081905585845291820181558452922090910155565b6000818152602081815260409182902080548351818402810184019094528084526060939283018282801561038e57602002820191906000526020600020905b81548152602001906001019080831161037a575b50505050509050919050565b60006103a4610481565b905090565b60008281526020819052604081205481036103c657506000610436565b60008381526001602090815260408083208584529091528120549003610418576000838152602081905260408120805484929061040557610405610601565b9060005260206000200154149050610436565b50600082815260016020908152604080832084845290915290205415155b92915050565b610444610481565b6001600160a01b0316336001600160a01b03161461047557604051632f7a8ee160e01b815260040160405180910390fd5b61047e816104af565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161047e92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806040838503121561054457600080fd5b50508035926020909101359150565b60006020828403121561056557600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156105a457835183529284019291840191600101610588565b50909695505050505050565b6000602082840312156105c257600080fd5b81356001600160a01b03811681146105d957600080fd5b9392505050565b8181038181111561043657634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122074d2dbc3f020a29d6081fb9fcf69e8e3c85026be8658abafc11ba431c108e33464736f6c634300081300338a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460";

type BattleResultComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BattleResultComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BattleResultComponent__factory extends ContractFactory {
  constructor(...args: BattleResultComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BattleResultComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<BattleResultComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): BattleResultComponent {
    return super.attach(address) as BattleResultComponent;
  }
  override connect(signer: Signer): BattleResultComponent__factory {
    return super.connect(signer) as BattleResultComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BattleResultComponentInterface {
    return new utils.Interface(_abi) as BattleResultComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BattleResultComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BattleResultComponent;
  }
}
