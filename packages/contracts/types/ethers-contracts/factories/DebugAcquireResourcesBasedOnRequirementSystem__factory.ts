/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DebugAcquireResourcesBasedOnRequirementSystem,
  DebugAcquireResourcesBasedOnRequirementSystemInterface,
} from "../DebugAcquireResourcesBasedOnRequirementSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dec380380610dec83398101604081905261002f916101ce565b818161003a3361013c565b6001600160a01b0381161561004f57806100b1565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b19190610208565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8680549092161790555050505061022c565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811681146101cb57600080fd5b50565b600080604083850312156101e157600080fd5b82516101ec816101b6565b60208401519092506101fd816101b6565b809150509250929050565b60006020828403121561021a57600080fd5b8151610225816101b6565b9392505050565b610bb18061023b6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610883565b6100cf565b6040516100719190610936565b60405180910390f35b6100646100883660046109a2565b6103df565b610095610411565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c83660046109bb565b610456565b005b60606000828060200190518101906100e791906109f1565b90506100f7565b60405180910390fd5b6000805461013b9073ffffffffffffffffffffffffffffffffffffffff167f0842a184a814d4c9890dc4a7e03369a83e6e7490abc9f169e0062ff4011b8a236104d2565b60008054919250906101839073ffffffffffffffffffffffffffffffffffffffff167ffba48a04766694c16713a414735f83be9cb20bbb29b5e18846cc8f15106408456104d2565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401600060405180830381865afa1580156101f4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261023a9190810190610a0a565b905060005b81518110156103b85760006102b083838151811061025f5761025f610ab0565b60200260200101516102843373ffffffffffffffffffffffffffffffffffffffff1690565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b90508373ffffffffffffffffffffffffffffffffffffffff16631ab06ee5826103228761031d8888815181106102e8576102e8610ab0565b60200260200101518c604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b61061e565b61032c888661061e565b6103369190610b0e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b15801561038c57600080fd5b505af11580156103a0573d6000803e3d6000fd5b505050505080806103b090610b21565b91505061023f565b50604080516000602082015201604051602081830303815290604052945050505050919050565b606061040b826040516020016103f791815260200190565b6040516020818303038152906040526100cf565b92915050565b60006104517f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104c6576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104cf81610751565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610542573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105889190810190610a0a565b905080516000036105f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016100ee565b6106168160008151811061060b5761060b610ab0565b602002602001015190565b949350505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b09190610b59565b6106bb57600061074a565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a91906109f1565b9392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516104cf928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561087b5761087b610805565b604052919050565b6000602080838503121561089657600080fd5b823567ffffffffffffffff808211156108ae57600080fd5b818501915085601f8301126108c257600080fd5b8135818111156108d4576108d4610805565b610904847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610834565b9150808252868482850101111561091a57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561096357858101830151858201604001528201610947565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000602082840312156109b457600080fd5b5035919050565b6000602082840312156109cd57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461074a57600080fd5b600060208284031215610a0357600080fd5b5051919050565b60006020808385031215610a1d57600080fd5b825167ffffffffffffffff80821115610a3557600080fd5b818501915085601f830112610a4957600080fd5b815181811115610a5b57610a5b610805565b8060051b9150610a6c848301610834565b8181529183018401918481019088841115610a8657600080fd5b938501935b83851015610aa457845182529385019390850190610a8b565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561040b5761040b610adf565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b5257610b52610adf565b5060010190565b600060208284031215610b6b57600080fd5b8151801515811461074a57600080fdfea2646970667358221220b2202036b3281c410fdfcb0f96879b17bcd333448398bd0dd62dce3d5dd50e3b64736f6c63430008130033";

type DebugAcquireResourcesBasedOnRequirementSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebugAcquireResourcesBasedOnRequirementSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebugAcquireResourcesBasedOnRequirementSystem__factory extends ContractFactory {
  constructor(
    ...args: DebugAcquireResourcesBasedOnRequirementSystemConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DebugAcquireResourcesBasedOnRequirementSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<DebugAcquireResourcesBasedOnRequirementSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(
    address: string
  ): DebugAcquireResourcesBasedOnRequirementSystem {
    return super.attach(
      address
    ) as DebugAcquireResourcesBasedOnRequirementSystem;
  }
  override connect(
    signer: Signer
  ): DebugAcquireResourcesBasedOnRequirementSystem__factory {
    return super.connect(
      signer
    ) as DebugAcquireResourcesBasedOnRequirementSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebugAcquireResourcesBasedOnRequirementSystemInterface {
    return new utils.Interface(
      _abi
    ) as DebugAcquireResourcesBasedOnRequirementSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DebugAcquireResourcesBasedOnRequirementSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DebugAcquireResourcesBasedOnRequirementSystem;
  }
}
