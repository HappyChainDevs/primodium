/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DestroyPathSystem,
  DestroyPathSystemInterface,
} from "../DestroyPathSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "coordStart",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012503803806200125083398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200092b17901c565b5050505062000292565b600062000126620001ef60201b620009bc1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b610fae80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063cb6cbba7146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610c87565b6100cf565b6040516100719190610d3a565b60405180910390f35b610082610821565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004610db5565b610866565b6100cd6100c8366004610df6565b6108af565b005b60606000828060200190518101906100e79190610e33565b600080549192509061012f9073ffffffffffffffffffffffffffffffffffffffff167f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b18431066109e0565b60008054919250906101779073ffffffffffffffffffffffffffffffffffffffff167f30f1c358b0a577824afcc8e464bcbd763eba254820a547b425765e75cc511f1e6109e0565b60008054919250906101bf9073ffffffffffffffffffffffffffffffffffffffff167f0d469bcaf5f43a6290ca2906ecdeb5ef80d7723e8cad27045bddb6e1eb9da4356109e0565b60008054919250906102079073ffffffffffffffffffffffffffffffffffffffff167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c75406109e0565b6040517fbf3bf26a0000000000000000000000000000000000000000000000000000000081528651600390810b60048301526020880151900b602482015290915060009073ffffffffffffffffffffffffffffffffffffffff86169063bf3bf26a90604401600060405180830381865afa158015610289573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102cf9190810190610e68565b9050805160011461036957604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f5b44657374726f795061746853797374656d5d2043616e6e6f7420646573747260448201527f6f7920706174682066726f6d20616e20656d70747920636f6f7264696e61746560648201526084015b60405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16630ff4c9168360008151811061039a5761039a610f0e565b60200260200101516040518263ffffffff1660e01b81526004016103c091815260200190565b602060405180830381865afa1580156103dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104019190610f3d565b90507f170729974eb622f2526fa4f92490a96d2ea29dc85bb4ce1e3d7b0f0a238a4ee581148061045057507f5dc2e1711c35bb96dbc441e9a8d2ca6965863dde6c810317df7a657d469a7a5381145b6104de57604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f5b44657374726f795061746853797374656d5d2043616e6e6f7420646573747260448201527f6f7920706174682066726f6d20616e20656d70747920636f6f7264696e6174656064820152608401610360565b60008373ffffffffffffffffffffffffffffffffffffffff16630ff4c9168460008151811061050f5761050f610f0e565b60200260200101516040518263ffffffff1660e01b815260040161053591815260200190565b602060405180830381865afa158015610552573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105769190610f3d565b905033811461062d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5b44657374726f795061746853797374656d5d2043616e6e6f7420646573747260448201527f6f7920706174682066726f6d20612074696c6520796f7520646f206e6f74206f60648201527f776e000000000000000000000000000000000000000000000000000000000000608482015260a401610360565b8373ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e8460008151811061065c5761065c610f0e565b60200260200101516040518263ffffffff1660e01b815260040161068291815260200190565b602060405180830381865afa15801561069f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c39190610f56565b61074f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f5b44657374726f795061746853797374656d5d205061746820646f6573206e6f60448201527f74206578697374206174207468652073656c65637465642074696c65000000006064820152608401610360565b8473ffffffffffffffffffffffffffffffffffffffff16634cc822158460008151811061077e5761077e610f0e565b60200260200101516040518263ffffffff1660e01b81526004016107a491815260200190565b600060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b50505050826000815181106107e9576107e9610f0e565b602002602001015160405160200161080391815260200190565b60405160208183030381529060405298505050505050505050919050565b60006108617f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60606108a98260405160200161089591908151600390810b8252602092830151900b9181019190915260400190565b6040516020818303038152906040526100cf565b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461091f576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61092881610b2c565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610a50573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a969190810190610e68565b90508051600003610b03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610360565b610b2481600081518110610b1957610b19610f0e565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610928928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610c3257610c32610be0565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610c7f57610c7f610be0565b604052919050565b60006020808385031215610c9a57600080fd5b823567ffffffffffffffff80821115610cb257600080fd5b818501915085601f830112610cc657600080fd5b813581811115610cd857610cd8610be0565b610d08847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610c38565b91508082528684828501011115610d1e57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b81811015610d6757858101830151858201604001528201610d4b565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b8060030b811461092857600080fd5b600060408284031215610dc757600080fd5b610dcf610c0f565b8235610dda81610da6565b81526020830135610dea81610da6565b60208201529392505050565b600060208284031215610e0857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610e2c57600080fd5b9392505050565b600060408284031215610e4557600080fd5b610e4d610c0f565b8251610e5881610da6565b81526020830151610dea81610da6565b60006020808385031215610e7b57600080fd5b825167ffffffffffffffff80821115610e9357600080fd5b818501915085601f830112610ea757600080fd5b815181811115610eb957610eb9610be0565b8060051b9150610eca848301610c38565b8181529183018401918481019088841115610ee457600080fd5b938501935b83851015610f0257845182529385019390850190610ee9565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610f4f57600080fd5b5051919050565b600060208284031215610f6857600080fd5b81518015158114610e2c57600080fdfea2646970667358221220c341f1dcbcc05f02192109921d76a7ec090a8dee721c91356f11fbb6095b365264736f6c63430008110033";

type DestroyPathSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestroyPathSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestroyPathSystem__factory extends ContractFactory {
  constructor(...args: DestroyPathSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DestroyPathSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<DestroyPathSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): DestroyPathSystem {
    return super.attach(address) as DestroyPathSystem;
  }
  override connect(signer: Signer): DestroyPathSystem__factory {
    return super.connect(signer) as DestroyPathSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestroyPathSystemInterface {
    return new utils.Interface(_abi) as DestroyPathSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DestroyPathSystem {
    return new Contract(address, _abi, signerOrProvider) as DestroyPathSystem;
  }
}
