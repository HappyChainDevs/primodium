/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DestroyPathSystem,
  DestroyPathSystemInterface,
} from "../DestroyPathSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "parent",
            type: "uint256",
          },
        ],
        internalType: "struct Coord",
        name: "coordStart",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001925380380620019258339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b6116cf80620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780634f2870da1461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f36600461124c565b6100cf565b60405161007191906112f0565b60405180910390f35b610064610088366004611350565b610bf0565b610095610c47565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c83660046113bf565b610c8c565b005b60606000828060200190518101906100e791906113e3565b600080549192509061012f9073ffffffffffffffffffffffffffffffffffffffff167f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5610d08565b60008054919250906101779073ffffffffffffffffffffffffffffffffffffffff167f0d469bcaf5f43a6290ca2906ecdeb5ef80d7723e8cad27045bddb6e1eb9da435610d08565b60008054919250906101bf9073ffffffffffffffffffffffffffffffffffffffff167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c7540610d08565b905060006101cc85610e54565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905290915073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa15801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e9190611430565b6102f157604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f5b44657374726f795061746853797374656d5d2043616e6e6f7420646573747260448201527f6f7920706174682066726f6d20616e20656d70747920636f6f7264696e61746560648201526084015b60405180910390fd5b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa15801561035c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103809190611430565b61040c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f5b44657374726f795061746853797374656d5d205061746820646f6573206e6f60448201527f74206578697374206174207468652073656c65637465642074696c650000000060648201526084016102e8565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa15801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e9190611452565b9050338114610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5b44657374726f795061746853797374656d5d2043616e6e6f7420646573747260448201527f6f7920706174682066726f6d20612074696c6520796f7520646f206e6f74206f60648201527f776e000000000000000000000000000000000000000000000000000000000000608482015260a4016102e8565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa1580156105c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e79190611452565b90506106127fa9030fd5d2d8df4ef9e9a591c66869629e3031bc7112e7766b55d9f29321005d61100c565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e826040518263ffffffff1660e01b815260040161064c91815260200190565b602060405180830381865afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190611430565b156107f157600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161074d9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610703573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610727919061146b565b7fac9642b56338c209f76541aaaff3c4074452a3c14b101c14f80550868ccebebf610d08565b73ffffffffffffffffffffffffffffffffffffffff166327b45099338560026040518463ffffffff1660e01b815260040161078a93929190611488565b6000604051808303816000875af11580156107a9573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107ef91908101906114f1565b505b6000546108349073ffffffffffffffffffffffffffffffffffffffff167f2444db3b2cf5ba1059ebafe0212ddf405afa28d4ca9f16e72b56afe6e5f673c8610d08565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e61097d8873ffffffffffffffffffffffffffffffffffffffff16630ff4c916876040518263ffffffff1660e01b815260040161088d91815260200190565b602060405180830381865afa1580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce9190611452565b6108f77fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e61100c565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916886040518263ffffffff1660e01b815260040161093191815260200190565b602060405180830381865afa15801561094e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109729190611568565b63ffffffff16611030565b6040518263ffffffff1660e01b815260040161099b91815260200190565b602060405180830381865afa1580156109b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dc9190611430565b15610b4057600154604080517f0d59332e0000000000000000000000000000000000000000000000000000000081529051610a9c9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a76919061146b565b7ff2021642afaf65bb89c355c68b4a3fc6356dc9299686fc001113a2e2b7b600a3610d08565b73ffffffffffffffffffffffffffffffffffffffff166327b45099338560026040518463ffffffff1660e01b8152600401610ad993929190611488565b6000604051808303816000875af1158015610af8573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b3e91908101906114f1565b505b6040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff861690634cc8221590602401600060405180830381600087803b158015610ba857600080fd5b505af1158015610bbc573d6000803e3d6000fd5b5050505082604051602001610bd391815260200190565b604051602081830303815290604052975050505050505050919050565b6060610c4182604051602001610c2d91906000606082019050825160030b8252602083015160030b60208301526040830151604083015292915050565b6040516020818303038152906040526100cf565b92915050565b6000610c877f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610cfc576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d0581611085565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610d78573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610dbe919081019061158e565b90508051600003610e2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102e8565b610e4c81600081518110610e4157610e41611634565b602002602001015190565b949350505050565b600080548190610e9a9073ffffffffffffffffffffffffffffffffffffffff167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c7540610d08565b90506000610edd6040518060400160405280600d81526020017f6275696c64696e672e74696c65000000000000000000000000000000000000008152508561108e565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905290915073ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa158015610f4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6f9190611430565b610f7d575060009392505050565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa158015610fe8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4c9190611452565b60008054610c419073ffffffffffffffffffffffffffffffffffffffff1683610d08565b60408051602081018490529081018290526000906060015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b610d05816110b3565b6000828260000151836020015184604001516040516020016110489493929190611663565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156111b1576111b161115f565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156111fe576111fe61115f565b604052919050565b600067ffffffffffffffff8211156112205761122061115f565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561125e57600080fd5b813567ffffffffffffffff81111561127557600080fd5b8201601f8101841361128657600080fd5b803561129961129482611206565b6111b7565b8181528560208385010111156112ae57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156112e75781810151838201526020016112cf565b50506000910152565b602081526000825180602084015261130f8160408501602087016112cc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b8060030b8114610d0557600080fd5b60006060828403121561136257600080fd5b61136a61118e565b823561137581611341565b8152602083013561138581611341565b60208201526040928301359281019290925250919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610d0557600080fd5b6000602082840312156113d157600080fd5b81356113dc8161139d565b9392505050565b6000606082840312156113f557600080fd5b6113fd61118e565b825161140881611341565b8152602083015161141881611341565b60208201526040928301519281019290925250919050565b60006020828403121561144257600080fd5b815180151581146113dc57600080fd5b60006020828403121561146457600080fd5b5051919050565b60006020828403121561147d57600080fd5b81516113dc8161139d565b73ffffffffffffffffffffffffffffffffffffffff841681526020810183905260608101600383106114e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826040830152949350505050565b60006020828403121561150357600080fd5b815167ffffffffffffffff81111561151a57600080fd5b8201601f8101841361152b57600080fd5b805161153961129482611206565b81815285602083850101111561154e57600080fd5b61155f8260208301602086016112cc565b95945050505050565b60006020828403121561157a57600080fd5b815163ffffffff811681146113dc57600080fd5b600060208083850312156115a157600080fd5b825167ffffffffffffffff808211156115b957600080fd5b818501915085601f8301126115cd57600080fd5b8151818111156115df576115df61115f565b8060051b91506115f08483016111b7565b818152918301840191848101908884111561160a57600080fd5b938501935b838510156116285784518252938501939085019061160f565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008551611675818460208a016112cc565b60e095861b9201918252509190921b6004820152600881019190915260280191905056fea2646970667358221220a6b316a59b65abe59b82191a866cc4bd9e0cb6fa36d7d409ae826375bfab408b64736f6c63430008130033";

type DestroyPathSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestroyPathSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestroyPathSystem__factory extends ContractFactory {
  constructor(...args: DestroyPathSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DestroyPathSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<DestroyPathSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): DestroyPathSystem {
    return super.attach(address) as DestroyPathSystem;
  }
  override connect(signer: Signer): DestroyPathSystem__factory {
    return super.connect(signer) as DestroyPathSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestroyPathSystemInterface {
    return new utils.Interface(_abi) as DestroyPathSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DestroyPathSystem {
    return new Contract(address, _abi, signerOrProvider) as DestroyPathSystem;
  }
}
