/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DestroyPathSystem,
  DestroyPathSystemInterface,
} from "../DestroyPathSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "coordStart",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001442380380620014428339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b6111ec80620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063cb6cbba7146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610dc4565b6100cf565b6040516100719190610e68565b60405180910390f35b61008261077b565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004610ec8565b6107c0565b6100cd6100c8366004610f2b565b610809565b005b60606000828060200190518101906100e79190610f48565b600080549192509061012f9073ffffffffffffffffffffffffffffffffffffffff167f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5610885565b60008054919250906101779073ffffffffffffffffffffffffffffffffffffffff167f0d469bcaf5f43a6290ca2906ecdeb5ef80d7723e8cad27045bddb6e1eb9da435610885565b60008054919250906101bf9073ffffffffffffffffffffffffffffffffffffffff167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c7540610885565b905060006101cc856109d1565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905290915073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa15801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e9190610f7d565b6102f157604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f5b44657374726f795061746853797374656d5d2043616e6e6f7420646573747260448201527f6f7920706174682066726f6d20616e20656d70747920636f6f7264696e61746560648201526084015b60405180910390fd5b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa15801561035f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103839190610f9f565b905033811461043a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5b44657374726f795061746853797374656d5d2043616e6e6f7420646573747260448201527f6f7920706174682066726f6d20612074696c6520796f7520646f206e6f74206f60648201527f776e000000000000000000000000000000000000000000000000000000000000608482015260a4016102e8565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa1580156104a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c99190610f7d565b610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f5b44657374726f795061746853797374656d5d205061746820646f6573206e6f60448201527f74206578697374206174207468652073656c65637465642074696c650000000060648201526084016102e8565b600154604080517f0d59332e00000000000000000000000000000000000000000000000000000000815290516106109273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa1580156105c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ea9190610fb8565b7ff6dc4067cf5c610574708281fd648f50f087cc45920255b2437fb0ff72e6a38f610885565b6040517f6ad0ccab0000000000000000000000000000000000000000000000000000000081523360048201526024810184905273ffffffffffffffffffffffffffffffffffffffff9190911690636ad0ccab906044016000604051808303816000875af1158015610685573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106cb9190810190610fd5565b506040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff851690634cc8221590602401600060405180830381600087803b15801561073457600080fd5b505af1158015610748573d6000803e3d6000fd5b505050508160405160200161075f91815260200190565b6040516020818303038152906040529650505050505050919050565b60006107bb7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6060610803826040516020016107ef91908151600390810b8252602092830151900b9181019190915260400190565b6040516020818303038152906040526100cf565b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610879576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61088281610b89565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156108f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261093b919081019061104c565b905080516000036109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102e8565b6109c9816000815181106109be576109be6110f2565b602002602001015190565b949350505050565b600080548190610a179073ffffffffffffffffffffffffffffffffffffffff167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c7540610885565b90506000610a5a846040518060400160405280600d81526020017f6275696c64696e672e74696c6500000000000000000000000000000000000000815250610b92565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905290915073ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa158015610ac8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aec9190610f7d565b610afa575060009392505050565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa158015610b65573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c99190610f9f565b61088281610c2b565b6000826000015160e01b836020015160e01b83610bae90611121565b604080517fffffffff0000000000000000000000000000000000000000000000000000000094851660208201529390921660248401527fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016602883015201604051602081830303815290604052610c2490611171565b9392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610d2957610d29610cd7565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610d7657610d76610cd7565b604052919050565b600067ffffffffffffffff821115610d9857610d98610cd7565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215610dd657600080fd5b813567ffffffffffffffff811115610ded57600080fd5b8201601f81018413610dfe57600080fd5b8035610e11610e0c82610d7e565b610d2f565b818152856020838501011115610e2657600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015610e5f578181015183820152602001610e47565b50506000910152565b6020815260008251806020840152610e87816040850160208701610e44565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b8060030b811461088257600080fd5b600060408284031215610eda57600080fd5b610ee2610d06565b8235610eed81610eb9565b81526020830135610efd81610eb9565b60208201529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461088257600080fd5b600060208284031215610f3d57600080fd5b8135610c2481610f09565b600060408284031215610f5a57600080fd5b610f62610d06565b8251610f6d81610eb9565b81526020830151610efd81610eb9565b600060208284031215610f8f57600080fd5b81518015158114610c2457600080fd5b600060208284031215610fb157600080fd5b5051919050565b600060208284031215610fca57600080fd5b8151610c2481610f09565b600060208284031215610fe757600080fd5b815167ffffffffffffffff811115610ffe57600080fd5b8201601f8101841361100f57600080fd5b805161101d610e0c82610d7e565b81815285602083850101111561103257600080fd5b611043826020830160208601610e44565b95945050505050565b6000602080838503121561105f57600080fd5b825167ffffffffffffffff8082111561107757600080fd5b818501915085601f83011261108b57600080fd5b81518181111561109d5761109d610cd7565b8060051b91506110ae848301610d2f565b81815291830184019184810190888411156110c857600080fd5b938501935b838510156110e6578451825293850193908501906110cd565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815160208301517fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000808216935060188310156111695780818460180360031b1b83161693505b505050919050565b805160208083015191908110156111b0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160200360031b1b821691505b5091905056fea26469706673582212202ca29f31680d82507a0e775484d64d262207bb6bf001e596a8c300d6d17840d164736f6c63430008130033";

type DestroyPathSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestroyPathSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestroyPathSystem__factory extends ContractFactory {
  constructor(...args: DestroyPathSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DestroyPathSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<DestroyPathSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): DestroyPathSystem {
    return super.attach(address) as DestroyPathSystem;
  }
  override connect(signer: Signer): DestroyPathSystem__factory {
    return super.connect(signer) as DestroyPathSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestroyPathSystemInterface {
    return new utils.Interface(_abi) as DestroyPathSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DestroyPathSystem {
    return new Contract(address, _abi, signerOrProvider) as DestroyPathSystem;
  }
}
