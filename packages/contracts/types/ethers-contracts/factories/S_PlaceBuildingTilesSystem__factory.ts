/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_PlaceBuildingTilesSystem,
  S_PlaceBuildingTilesSystemInterface,
} from "../S_PlaceBuildingTilesSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "buildingEntity",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018d6380380620018d68339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b61168080620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780636ad0ccab1461007a5780638da5cb5b1461008d578063f2fde38b146100ad575b600080fd5b61006461005f366004611060565b6100c2565b6040516100719190611119565b60405180910390f35b610064610088366004611161565b6106de565b61009561071d565b6040516001600160a01b039091168152602001610071565b6100c06100bb36600461118d565b610755565b005b6060610164600160009054906101000a90046001600160a01b03166001600160a01b0316630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e91906111b1565b7f57247228bbd93ac6953378fea0f421ebc4978d448f7383f1a2816e6ca6e2894d6107ab565b6001600160a01b0316336001600160a01b031614806102285750600154604080516306ac999760e11b81529051610213926001600160a01b031691630d59332e9160048083019260209291908290030181865afa1580156101c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ed91906111b1565b7f70fd2d99c63cf9e9a219a7907c6a0bc55a0323de6daf9c9d0b03e2d7250d73d26107ab565b6001600160a01b0316336001600160a01b0316145b6102bb5760405162461bcd60e51b815260206004820152605360248201527f535f506c6163654275696c64696e6754696c657353797374656d3a204f6e6c7960448201527f204275696c6453797374656d20616e6420537061776e53797374656d2063616e6064820152721031b0b636103a3434b990333ab731ba34b7b760691b608482015260a4015b60405180910390fd5b600080838060200190518101906102d291906111ce565b909250905060006103027f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c561088d565b6001600160a01b0316630ff4c916836040518263ffffffff1660e01b815260040161032f91815260200190565b602060405180830381865afa15801561034c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037091906111fc565b9050600061039d7f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b184310661088d565b6001600160a01b0316630ff4c916846040518263ffffffff1660e01b81526004016103ca91815260200190565b606060405180830381865afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b919061122c565b905060006104387f29ea2e15d03ff393df6dfe165be7e61208c58ffcace6ef0eb6f37ef912f8f8b261088d565b6001600160a01b0316630ff4c916846040518263ffffffff1660e01b815260040161046591815260200190565b600060405180830381865afa158015610482573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104aa91908101906112b8565b6001549091506000906104d5906001600160a01b03166104d0886001600160a01b031690565b6108a4565b90506000600283516104e79190611381565b67ffffffffffffffff8111156104ff576104ff611019565b604051908082528060200260200182016040528015610528578160200160208202803683370190505b50905060005b83518163ffffffff1610156106495760006040518060600160405280868463ffffffff168151811061056257610562611395565b602002602001015160030b81526020018684600161058091906113ab565b63ffffffff168151811061059657610596611395565b602002602001015160030b81526020016000815250905060006040518060600160405280836000015189600001516105ce91906113cf565b60030b8152602001836020015189602001516105ea91906113cf565b60030b815260200188604001518152509050610607898683610c3b565b846106136002866113f6565b63ffffffff168151811061062957610629611395565b60209081029190910101525061064290506002826113ab565b905061052e565b506106737ff0cb43e036bae834910fad0a5f691ed43d8c3edb41f55275901bc5d576f8f49161088d565b6001600160a01b031663946aadc687836040518363ffffffff1660e01b81526004016106a0929190611419565b600060405180830381600087803b1580156106ba57600080fd5b505af11580156106ce573d6000803e3d6000fd5b5050505050505050505050919050565b604080516001600160a01b03841660208201529081018290526060906107149082016040516020818303038152906040526100c2565b90505b92915050565b60006107507f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b0316331461079f57604051632f7a8ee160e01b815260040160405180910390fd5b6107a881610f3d565b50565b604051637defd0f560e11b81526004810182905260009081906001600160a01b0385169063fbdfa1ea90602401600060405180830381865afa1580156107f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261081d9190810190611467565b905080516000036108645760405162461bcd60e51b81526020600482015260116024820152701a59081b9bdd081c9959da5cdd195c9959607a1b60448201526064016102b2565b6108858160008151811061087a5761087a611395565b602002602001015190565b949350505050565b60008054610717906001600160a01b0316836107ab565b6040805160808101825260008082526020820181905291810182905260608101919091526000610955846001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092f91906111b1565b7fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e6107ab565b6001600160a01b0316630ff4c916846040518263ffffffff1660e01b815260040161098291815260200190565b602060405180830381865afa15801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c391906114ed565b90506000610a01604051806040016040528060128152602001713932b9b2b0b931b41722bc3830b739b4b7b760711b8152508363ffffffff16610f46565b90506000610a90866001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6a91906111b1565b7f4d4b5854aad91ff8a49a13a08e0bd3844a69c01df18f29ff1176f4d7705e33526107ab565b6040516307fa648b60e11b815261060d60048201529091506000906001600160a01b03831690630ff4c916906024016040805180830381865afa158015610adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aff9190611513565b6040516307fa648b60e11b8152600481018590529091506000906001600160a01b03841690630ff4c916906024016040805180830381865afa158015610b49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6d9190611513565b90506040518060800160405280600283600001518560000151610b90919061156e565b610b9a9190611595565b60030b8152602001600283602001518560200151610bb8919061156e565b610bc29190611595565b60030b81526020016001600284600001518660000151610be291906113cf565b610bec9190611595565b610bf6919061156e565b60030b81526020016001600284602001518660200151610c1691906113cf565b610c209190611595565b610c2a919061156e565b60030b905298975050505050505050565b600080610c677faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c754061088d565b9050610c986040518060400160405280600d81526020016c6275696c64696e672e74696c6560981b81525084610f7a565b604051636667bd4760e11b8152600481018290529092506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa158015610ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0491906115d0565b15610d775760405162461bcd60e51b815260206004820152603960248201527f5b4275696c6453797374656d5d2043616e6e6f74206275696c642074696c652060448201527f6f6e2061206e6f6e2d656d70747920636f6f7264696e6174650000000000000060648201526084016102b2565b82518451600391820b910b13801590610d9e5750826020015160030b846020015160030b13155b8015610db85750826000015160030b846040015160030b12155b8015610dd25750826020015160030b846060015160030b12155b610e2a5760405162461bcd60e51b8152602060048201526024808201527f5b4275696c6453797374656d5d204275696c64696e67206f7574206f6620626f604482015263756e647360e01b60648201526084016102b2565b604051631ab06ee560e01b815260048101839052602481018690526001600160a01b03821690631ab06ee590604401600060405180830381600087803b158015610e7357600080fd5b505af1158015610e87573d6000803e3d6000fd5b50505050610eb77f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b184310660001c61088d565b604080516346886b6f60e11b8152600481018590528551600390810b60248301526020870151900b60448201529085015160648201526001600160a01b039190911690638d10d6de90608401600060405180830381600087803b158015610f1d57600080fd5b505af1158015610f31573d6000803e3d6000fd5b50505050509392505050565b6107a881610f9f565b60008282604051602001610f5b9291906115f2565b60408051601f1981840301815291905280516020909101209392505050565b600082826000015183602001518460400151604051602001610f5b9493929190611614565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561105857611058611019565b604052919050565b6000602080838503121561107357600080fd5b823567ffffffffffffffff8082111561108b57600080fd5b818501915085601f83011261109f57600080fd5b8135818111156110b1576110b1611019565b6110c3601f8201601f1916850161102f565b915080825286848285010111156110d957600080fd5b8084840185840137600090820190930192909252509392505050565b60005b838110156111105781810151838201526020016110f8565b50506000910152565b60208152600082518060208401526111388160408501602087016110f5565b601f01601f19169190910160400192915050565b6001600160a01b03811681146107a857600080fd5b6000806040838503121561117457600080fd5b823561117f8161114c565b946020939093013593505050565b60006020828403121561119f57600080fd5b81356111aa8161114c565b9392505050565b6000602082840312156111c357600080fd5b81516111aa8161114c565b600080604083850312156111e157600080fd5b82516111ec8161114c565b6020939093015192949293505050565b60006020828403121561120e57600080fd5b5051919050565b8051600381900b811461122757600080fd5b919050565b60006060828403121561123e57600080fd5b6040516060810181811067ffffffffffffffff8211171561126157611261611019565b60405261126d83611215565b815261127b60208401611215565b6020820152604083015160408201528091505092915050565b600067ffffffffffffffff8211156112ae576112ae611019565b5060051b60200190565b600060208083850312156112cb57600080fd5b825167ffffffffffffffff8111156112e257600080fd5b8301601f810185136112f357600080fd5b805161130661130182611294565b61102f565b81815260059190911b8201830190838101908783111561132557600080fd5b928401925b8284101561134a5761133b84611215565b8252928401929084019061132a565b979650505050505050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008261139057611390611355565b500490565b634e487b7160e01b600052603260045260246000fd5b63ffffffff8181168382160190808211156113c8576113c861136b565b5092915050565b600381810b9083900b01637fffffff8113637fffffff19821217156107175761071761136b565b600063ffffffff8084168061140d5761140d611355565b92169190910492915050565b6000604082018483526020604081850152818551808452606086019150828701935060005b8181101561145a5784518352938301939183019160010161143e565b5090979650505050505050565b6000602080838503121561147a57600080fd5b825167ffffffffffffffff81111561149157600080fd5b8301601f810185136114a257600080fd5b80516114b061130182611294565b81815260059190911b820183019083810190878311156114cf57600080fd5b928401925b8284101561134a578351825292840192908401906114d4565b6000602082840312156114ff57600080fd5b815163ffffffff811681146111aa57600080fd5b60006040828403121561152557600080fd5b6040516040810181811067ffffffffffffffff8211171561154857611548611019565b60405261155483611215565b815261156260208401611215565b60208201529392505050565b600382810b9082900b03637fffffff198112637fffffff821317156107175761071761136b565b60008160030b8360030b806115ac576115ac611355565b637fffffff198214600019821416156115c7576115c761136b565b90059392505050565b6000602082840312156115e257600080fd5b815180151581146111aa57600080fd5b600083516116048184602088016110f5565b9190910191825250602001919050565b60008551611626818460208a016110f5565b60e095861b9201918252509190921b6004820152600881019190915260280191905056fea264697066735822122030ac3c84065aedbbf81abc701b0058d26e331b7a7653a2b4ae0e3ff739ce784d64736f6c63430008130033";

type S_PlaceBuildingTilesSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_PlaceBuildingTilesSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_PlaceBuildingTilesSystem__factory extends ContractFactory {
  constructor(...args: S_PlaceBuildingTilesSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_PlaceBuildingTilesSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_PlaceBuildingTilesSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_PlaceBuildingTilesSystem {
    return super.attach(address) as S_PlaceBuildingTilesSystem;
  }
  override connect(signer: Signer): S_PlaceBuildingTilesSystem__factory {
    return super.connect(signer) as S_PlaceBuildingTilesSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_PlaceBuildingTilesSystemInterface {
    return new utils.Interface(_abi) as S_PlaceBuildingTilesSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_PlaceBuildingTilesSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_PlaceBuildingTilesSystem;
  }
}
