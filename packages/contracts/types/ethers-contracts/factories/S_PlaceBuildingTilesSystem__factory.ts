/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_PlaceBuildingTilesSystem,
  S_PlaceBuildingTilesSystemInterface,
} from "../S_PlaceBuildingTilesSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "buildingEntity",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015d5380380620015d58339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b61137f80620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780636ad0ccab1461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610db5565b6100cf565b6040516100719190610e8c565b60405180910390f35b610064610088366004610eff565b610668565b6100956106b4565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004610f2b565b6106f9565b005b606061018b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610141573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101659190610f4f565b7f57247228bbd93ac6953378fea0f421ebc4978d448f7383f1a2816e6ca6e2894d610775565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610270576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f535f506c6163654275696c64696e6754696c657353797374656d3a204f6e6c7960448201527f204275696c6453797374656d2063616e2063616c6c20746869732066756e637460648201527f696f6e0000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b600080838060200190518101906102879190610f6c565b909250905060006102b77f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c56108c1565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916836040518263ffffffff1660e01b81526004016102f191815260200190565b602060405180830381865afa15801561030e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103329190610f9a565b9050600061035f7f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b18431066108c1565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916846040518263ffffffff1660e01b815260040161039991815260200190565b606060405180830381865afa1580156103b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103da9190610fca565b905060006104077f29ea2e15d03ff393df6dfe165be7e61208c58ffcace6ef0eb6f37ef912f8f8b26108c1565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916846040518263ffffffff1660e01b815260040161044191815260200190565b600060405180830381865afa15801561045e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104a49190810190611056565b90506000600282516104b69190611151565b67ffffffffffffffff8111156104ce576104ce610d37565b6040519080825280602002602001820160405280156104f7578160200160208202803683370190505b50905060005b82518163ffffffff1610156105c75760006040518060600160405280858463ffffffff168151811061053157610531611165565b602002602001015160030b81526020018584600161054f9190611194565b63ffffffff168151811061056557610565611165565b602002602001015160030b8152602001600081525090506105878786836108e5565b836105936002856111b8565b63ffffffff16815181106105a9576105a9611165565b6020908102919091010152506105c0600282611194565b90506104fd565b506105f17ff0cb43e036bae834910fad0a5f691ed43d8c3edb41f55275901bc5d576f8f4916108c1565b73ffffffffffffffffffffffffffffffffffffffff1663946aadc686836040518363ffffffff1660e01b815260040161062b9291906111db565b600060405180830381600087803b15801561064557600080fd5b505af1158015610659573d6000803e3d6000fd5b50505050505050505050919050565b6040805173ffffffffffffffffffffffffffffffffffffffff841660208201529081018290526060906106ab9082016040516020818303038152906040526100cf565b90505b92915050565b60006106f47f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610769576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61077281610c20565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156107e5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261082b9190810190611229565b90508051600003610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610267565b6108b9816000815181106108ae576108ae611165565b602002602001015190565b949350505050565b600080546106ae9073ffffffffffffffffffffffffffffffffffffffff1683610775565b6000806109117faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c75406108c1565b9050600060405180606001604052808560000151876000015161093491906112af565b60030b81526020018560200151876020015161095091906112af565b60030b8152602001866040015181525090506109a16040518060400160405280600d81526020017f6275696c64696e672e74696c650000000000000000000000000000000000000081525082610c29565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905290935073ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa158015610a0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3391906112f1565b15610ac0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f5b4275696c6453797374656d5d2043616e6e6f74206275696c642074696c652060448201527f6f6e2061206e6f6e2d656d70747920636f6f7264696e617465000000000000006064820152608401610267565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018490526024810187905273ffffffffffffffffffffffffffffffffffffffff831690631ab06ee590604401600060405180830381600087803b158015610b2f57600080fd5b505af1158015610b43573d6000803e3d6000fd5b50505050610b737f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b184310660001c6108c1565b604080517f8d10d6de000000000000000000000000000000000000000000000000000000008152600481018690528351600390810b60248301526020850151900b604482015290830151606482015273ffffffffffffffffffffffffffffffffffffffff9190911690638d10d6de90608401600060405180830381600087803b158015610bff57600080fd5b505af1158015610c13573d6000803e3d6000fd5b5050505050509392505050565b61077281610c8b565b600082826000015183602001518460400151604051602001610c4e9493929190611313565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610dad57610dad610d37565b604052919050565b60006020808385031215610dc857600080fd5b823567ffffffffffffffff80821115610de057600080fd5b818501915085601f830112610df457600080fd5b813581811115610e0657610e06610d37565b610e36847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610d66565b91508082528684828501011115610e4c57600080fd5b8084840185840137600090820190930192909252509392505050565b60005b83811015610e83578181015183820152602001610e6b565b50506000910152565b6020815260008251806020840152610eab816040850160208701610e68565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461077257600080fd5b60008060408385031215610f1257600080fd5b8235610f1d81610edd565b946020939093013593505050565b600060208284031215610f3d57600080fd5b8135610f4881610edd565b9392505050565b600060208284031215610f6157600080fd5b8151610f4881610edd565b60008060408385031215610f7f57600080fd5b8251610f8a81610edd565b6020939093015192949293505050565b600060208284031215610fac57600080fd5b5051919050565b8051600381900b8114610fc557600080fd5b919050565b600060608284031215610fdc57600080fd5b6040516060810181811067ffffffffffffffff82111715610fff57610fff610d37565b60405261100b83610fb3565b815261101960208401610fb3565b6020820152604083015160408201528091505092915050565b600067ffffffffffffffff82111561104c5761104c610d37565b5060051b60200190565b6000602080838503121561106957600080fd5b825167ffffffffffffffff81111561108057600080fd5b8301601f8101851361109157600080fd5b80516110a461109f82611032565b610d66565b81815260059190911b820183019083810190878311156110c357600080fd5b928401925b828410156110e8576110d984610fb3565b825292840192908401906110c8565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082611160576111606110f3565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b63ffffffff8181168382160190808211156111b1576111b1611122565b5092915050565b600063ffffffff808416806111cf576111cf6110f3565b92169190910492915050565b6000604082018483526020604081850152818551808452606086019150828701935060005b8181101561121c57845183529383019391830191600101611200565b5090979650505050505050565b6000602080838503121561123c57600080fd5b825167ffffffffffffffff81111561125357600080fd5b8301601f8101851361126457600080fd5b805161127261109f82611032565b81815260059190911b8201830190838101908783111561129157600080fd5b928401925b828410156110e857835182529284019290840190611296565b600381810b9083900b01637fffffff81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000000821217156106ae576106ae611122565b60006020828403121561130357600080fd5b81518015158114610f4857600080fd5b60008551611325818460208a01610e68565b60e095861b9201918252509190921b6004820152600881019190915260280191905056fea2646970667358221220de93832f0468c92de867b013fda5b4433c5ce8629f33c6f81187473b1664b25264736f6c63430008130033";

type S_PlaceBuildingTilesSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_PlaceBuildingTilesSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_PlaceBuildingTilesSystem__factory extends ContractFactory {
  constructor(...args: S_PlaceBuildingTilesSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_PlaceBuildingTilesSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_PlaceBuildingTilesSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_PlaceBuildingTilesSystem {
    return super.attach(address) as S_PlaceBuildingTilesSystem;
  }
  override connect(signer: Signer): S_PlaceBuildingTilesSystem__factory {
    return super.connect(signer) as S_PlaceBuildingTilesSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_PlaceBuildingTilesSystemInterface {
    return new utils.Interface(_abi) as S_PlaceBuildingTilesSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_PlaceBuildingTilesSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_PlaceBuildingTilesSystem;
  }
}
