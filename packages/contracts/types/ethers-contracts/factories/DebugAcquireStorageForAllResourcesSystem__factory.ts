/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DebugAcquireStorageForAllResourcesSystem,
  DebugAcquireStorageForAllResourcesSystemInterface,
} from "../DebugAcquireStorageForAllResourcesSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610da0380380610da083398101604081905261002f916101ce565b818161003a3361013c565b6001600160a01b0381161561004f57806100b1565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b19190610208565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8680549092161790555050505061022c565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811681146101cb57600080fd5b50565b600080604083850312156101e157600080fd5b82516101ec816101b6565b60208401519092506101fd816101b6565b809150509250929050565b60006020828403121561021a57600080fd5b8151610225816101b6565b9392505050565b610b658061023b6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063e1df4ba6146100a7578063f2fde38b146100af575b600080fd5b61006461005f366004610851565b6100c4565b6040516100719190610904565b60405180910390f35b6100826104e7565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b61006461052c565b6100c26100bd366004610970565b610553565b005b60408051610160810182527f3d837ba14aa69d4ce9d10c4792c57f1e6daca62171e4c75025c4420d205804c481527f9182d0838cda5b8b8d04b7fdb048ae0d49c90dd4f4ef46ab0958cf6328dfb2ca60208201527fb533b87fd579e6a4bd7adf53c6573acece50e469a2a3480b5694a32c710af291918101919091527f88897217b7ca352fa62012bfb0aa451ebca6a6ff9208f9698f717331232152a76060828101919091527fae6e54a2162e6ef6bb60a2555b10f3160acb04e5d6181837025ff5cdd9df7ff160808301527f17025afdea42119548a0a5f9ec0cdbdcb19e7a9f4b475913071021a3cdbb5bfd60a08301527f6c4cf968092a55522769ad001f5a4d068bbdc6ea30a7d8f460833f83e9c9727c60c08301527f416cd867e38826680c4261f20f5285dd44a10270a8118bdeec1383c9a089cf0460e08301527ff22d62753c9bef149557affda667bdaa3aff1e69179b0c09e101bfc462bf4fae6101008301527f32c232ca8907667a2c1ce8c69c3cc8ff5db78af1eff931677d8c7e80099fd7ad6101208301527f7deaae6bb7615fd1b4e86953f0141ba774ea3adbdd6e2ee244147bfb86aaace5610140830152600080549192916102be9073ffffffffffffffffffffffffffffffffffffffff167f211ec405e276c4670499c53a5acad168c5576b06d549dd3a610b8d516174e2d96105cf565b60008054919250906103069073ffffffffffffffffffffffffffffffffffffffff167fb3c62762a3762f5f11947c1589f40ecb45ee2b286a2a0d62946782f12d42327a6105cf565b60408051600b808252610180820190925291925060009190602082016101608036833701905050905060005b600b811015610457578373ffffffffffffffffffffffffffffffffffffffff1663d923c3c461039e8784600b811061036c5761036c6109ad565b602002015133604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152634d2fa1ff6024820152604401600060405180830381600087803b1580156103f957600080fd5b505af115801561040d573d6000803e3d6000fd5b505050508481600b8110610423576104236109ad565b602002015182828151811061043a5761043a6109ad565b60209081029190910101528061044f816109dc565b915050610332565b506040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063946aadc6906104ac9033908590600401610a3b565b600060405180830381600087803b1580156104c657600080fd5b505af11580156104da573d6000803e3d6000fd5b5050505050505050919050565b60006105277f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b604080516000602082015260609161052791016040516020818303038152906040526100c4565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146105c3576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105cc8161071f565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa15801561063f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106859190810190610a89565b905080516000036106f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640160405180910390fd5b6107178160008151811061070c5761070c6109ad565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516105cc928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610849576108496107d3565b604052919050565b6000602080838503121561086457600080fd5b823567ffffffffffffffff8082111561087c57600080fd5b818501915085601f83011261089057600080fd5b8135818111156108a2576108a26107d3565b6108d2847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610802565b915080825286848285010111156108e857600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561093157858101830151858201604001528201610915565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561098257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146109a657600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a34577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000604082018483526020604081850152818551808452606086019150828701935060005b81811015610a7c57845183529383019391830191600101610a60565b5090979650505050505050565b60006020808385031215610a9c57600080fd5b825167ffffffffffffffff80821115610ab457600080fd5b818501915085601f830112610ac857600080fd5b815181811115610ada57610ada6107d3565b8060051b9150610aeb848301610802565b8181529183018401918481019088841115610b0557600080fd5b938501935b83851015610b2357845182529385019390850190610b0a565b9897505050505050505056fea2646970667358221220fca3471c64b7298d7e21cbd0f039d557a78cad27a9ebf649c078463cc1eb780d64736f6c63430008130033";

type DebugAcquireStorageForAllResourcesSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebugAcquireStorageForAllResourcesSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebugAcquireStorageForAllResourcesSystem__factory extends ContractFactory {
  constructor(
    ...args: DebugAcquireStorageForAllResourcesSystemConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DebugAcquireStorageForAllResourcesSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<DebugAcquireStorageForAllResourcesSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): DebugAcquireStorageForAllResourcesSystem {
    return super.attach(address) as DebugAcquireStorageForAllResourcesSystem;
  }
  override connect(
    signer: Signer
  ): DebugAcquireStorageForAllResourcesSystem__factory {
    return super.connect(
      signer
    ) as DebugAcquireStorageForAllResourcesSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebugAcquireStorageForAllResourcesSystemInterface {
    return new utils.Interface(
      _abi
    ) as DebugAcquireStorageForAllResourcesSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DebugAcquireStorageForAllResourcesSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DebugAcquireStorageForAllResourcesSystem;
  }
}
