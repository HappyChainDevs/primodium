/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ArrivalComponent,
  ArrivalComponentInterface,
} from "../ArrivalComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ESendType",
            name: "sendType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "unitType",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "count",
                type: "uint32",
              },
            ],
            internalType: "struct ArrivalUnit[]",
            name: "units",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "arrivalBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "to",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "origin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destination",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Arrival",
        name: "sendType",
        type: "tuple",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "enum ESendType",
            name: "sendType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "unitType",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "count",
                type: "uint32",
              },
            ],
            internalType: "struct ArrivalUnit[]",
            name: "units",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "arrivalBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "to",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "origin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destination",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Arrival",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "indexer",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum ESendType",
            name: "sendType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "unitType",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "count",
                type: "uint32",
              },
            ],
            internalType: "struct ArrivalUnit[]",
            name: "units",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "arrivalBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "to",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "origin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destination",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Arrival",
        name: "arrival",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200321038038062003210833981016040819052620000349162000262565b807f8e9099e75678919c8e1307fac4366e095ace966d09bb54991618c1fa0d72bf338181620000633362000127565b60028190556001600160a01b038216156200008357620000838262000190565b5050604051620000939062000246565b604051809103906000f080158015620000b0573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055604051620000df9062000254565b604051809103906000f080158015620000fc573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b03929092169190911790555062000294915050565b600080516020620031f083398151915280546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b600080516020620031f0833981519152546001600160a01b03163314620001ca57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200022a57600080fd5b505af11580156200023f573d6000803e3d6000fd5b5050505050565b6106c9806200241c83390190565b61070b8062002ae583390190565b6000602082840312156200027557600080fd5b81516001600160a01b03811681146200028d57600080fd5b9392505050565b61217880620002a46000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638b282947116100ad578063b8bc073d11610071578063b8bc073d1461026e578063bf4fe57e1461028e578063c3ad1912146102a1578063cccf7a8e146102b4578063f2fde38b146102c757600080fd5b80638b282947146102165780638da5cb5b146102295780639d2c76b414610231578063af640d0f14610244578063b361be461461025b57600080fd5b80634cc82215116100f45780634cc82215146101a25780634fef6a38146101b75780636b122fe0146101ca57806375c0669c146101e0578063861eb905146101f357600080fd5b80630ff4c9161461012657806330b67baa1461014f57806331b933b91461017a578063415fce251461018f575b600080fd5b6101396101343660046116d0565b6102da565b6040516101469190611713565b60405180910390f35b600054610162906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b6101826104a8565b6040516101469190611804565b61018261019d366004611837565b61051f565b6101b56101b03660046116d0565b61054f565b005b6101b56101c5366004611873565b610581565b6101d26105fd565b6040516101469291906118e2565b6101b56101ee366004611873565b610af8565b610206610201366004611873565b610b70565b6040519015158152602001610146565b6101b5610224366004611a42565b610bd3565b610162610c07565b6101b561023f366004611873565b610c11565b61024d60025481565b604051908152602001610146565b610182610269366004611a88565b610cc5565b61028161027c3660046116d0565b610d3e565b6040516101469190611abc565b6101b561029c366004611873565b610de0565b6101b56102af366004611acf565b610e59565b6102066102c23660046116d0565b611030565b6101b56102d5366004611873565b61109e565b6103236040805161010081019091528060008152602001606081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600080600080600080600080600061033a8b610d3e565b80602001905181019061034d9190611bb8565b985098509850985098509850985098509850600088516001600160401b0381111561037a5761037a61198d565b6040519080825280602002602001820160405280156103bf57816020015b60408051808201909152600080825260208201528152602001906001900390816103985790505b50905060005b895181101561044b5760405180604001604052808a83815181106103eb576103eb611ccf565b602002602001015181526020018b838151811061040a5761040a611ccf565b602002602001015163ffffffff1681525082828151811061042d5761042d611ccf565b6020026020010181905250808061044390611ce5565b9150506103c5565b506040518061010001604052808b600281111561046a5761046a6116e9565b8152602001828152602001888152602001878152602001868152602001858152602001848152602001838152509a5050505050505050505050919050565b60035460408051631043567360e21b815290516060926001600160a01b03169163410d59cc9160048083019260009291908290030181865afa1580156104f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261051a9190810190611d0c565b905090565b6060610549826040516020016105359190611d86565b604051602081830303815290604052610cc5565b92915050565b61055833610b70565b6105755760405163203769ed60e11b815260040160405180910390fd5b61057e816110e0565b50565b610589611309565b6001600160a01b0316336001600160a01b0316146105ba57604051632f7a8ee160e01b815260040160405180910390fd5b6001600160a01b031660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c90960205260409020805460ff19166001179055565b6040805160098082526101408201909252606091829190816020015b6060815260200190600190039081610619575050604080516009808252610140820190925291935060208201610120803683370190505090506040518060400160405280600881526020016773656e645479706560c01b8152508260008151811061068657610686611ccf565b60200260200101819052506008816000815181106106a6576106a6611ccf565b602002602001019060218111156106bf576106bf6116e9565b908160218111156106d2576106d26116e9565b815250506040518060400160405280600a815260200169756e6974436f756e747360b01b8152508260018151811061070c5761070c611ccf565b6020026020010181905250601c8160018151811061072c5761072c611ccf565b60200260200101906021811115610745576107456116e9565b90816021811115610758576107586116e9565b8152505060405180604001604052806009815260200168756e6974547970657360b81b8152508260028151811061079157610791611ccf565b6020026020010181905250601f816002815181106107b1576107b1611ccf565b602002602001019060218111156107ca576107ca6116e9565b908160218111156107dd576107dd6116e9565b815250506040518060400160405280600c81526020016b6172726976616c426c6f636b60a01b8152508260038151811061081957610819611ccf565b6020026020010181905250600d8160038151811061083957610839611ccf565b60200260200101906021811115610852576108526116e9565b90816021811115610865576108656116e9565b815250506040518060400160405280600481526020016366726f6d60e01b8152508260048151811061089957610899611ccf565b6020026020010181905250600d816004815181106108b9576108b9611ccf565b602002602001019060218111156108d2576108d26116e9565b908160218111156108e5576108e56116e9565b8152505060405180604001604052806002815260200161746f60f01b8152508260058151811061091757610917611ccf565b6020026020010181905250600d8160058151811061093757610937611ccf565b60200260200101906021811115610950576109506116e9565b90816021811115610963576109636116e9565b815250506040518060400160405280600681526020016537b934b3b4b760d11b8152508260068151811061099957610999611ccf565b6020026020010181905250600d816006815181106109b9576109b9611ccf565b602002602001019060218111156109d2576109d26116e9565b908160218111156109e5576109e56116e9565b815250506040518060400160405280600b81526020016a3232b9ba34b730ba34b7b760a91b81525082600781518110610a2057610a20611ccf565b6020026020010181905250600d81600781518110610a4057610a40611ccf565b60200260200101906021811115610a5957610a596116e9565b90816021811115610a6c57610a6c6116e9565b8152505060405180604001604052806009815260200168074696d657374616d760bc1b81525082600881518110610aa557610aa5611ccf565b6020026020010181905250600d81600881518110610ac557610ac5611ccf565b60200260200101906021811115610ade57610ade6116e9565b90816021811115610af157610af16116e9565b9052509091565b610b0133610b70565b610b1e5760405163203769ed60e11b815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806105495750610bb9610c07565b6001600160a01b0316826001600160a01b03161492915050565b610bdc33610b70565b610bf95760405163203769ed60e11b815260040160405180910390fd5b610c038282611337565b5050565b600061051a611309565b610c19611309565b6001600160a01b0316336001600160a01b031614610c4a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610caa57600080fd5b505af1158015610cbe573d6000803e3d6000fd5b5050505050565b6004805482516020840120604051631e5b17a560e21b8152928301526060916001600160a01b039091169063796c5e9490602401600060405180830381865afa158015610d16573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105499190810190611d0c565b6000818152600160205260409020805460609190610d5b90611e4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8790611e4b565b8015610dd45780601f10610da957610100808354040283529160200191610dd4565b820191906000526020600020905b815481529060010190602001808311610db757829003601f168201915b50505050509050919050565b610de8611309565b6001600160a01b0316336001600160a01b031614610e1957604051632f7a8ee160e01b815260040160405180910390fd5b6001600160a01b031660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c90960205260409020805460ff19169055565b6000610e686020830183611e7f565b90506001600160401b03811115610e8157610e8161198d565b604051908082528060200260200182016040528015610eaa578160200160208202803683370190505b5090506000610ebc6020840184611e7f565b90506001600160401b03811115610ed557610ed561198d565b604051908082528060200260200182016040528015610efe578160200160208202803683370190505b50905060005b610f116020850185611e7f565b9050811015610fcc57610f276020850185611e7f565b82818110610f3757610f37611ccf565b9050604002016020016020810190610f4f9190611ecf565b63ffffffff16838281518110610f6757610f67611ccf565b602002602001018181525050838060200190610f839190611e7f565b82818110610f9357610f93611ccf565b90506040020160000135828281518110610faf57610faf611ccf565b602090810291909101015280610fc481611ce5565b915050610f04565b5061102a84610fde6020860186611eec565b84848760400135886060013589608001358a60a001358b60c001358c60e0013560405160200161101699989796959493929190611f09565b604051602081830303815290604052610bd3565b50505050565b600354604051636667bd4760e11b8152600481018390526000916001600160a01b03169063cccf7a8e90602401602060405180830381865afa15801561107a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105499190611f73565b6110a6611309565b6001600160a01b0316336001600160a01b0316146110d757604051632f7a8ee160e01b815260040160405180910390fd5b61057e81611536565b6004546000828152600160205260409081902090516001600160a01b03909216916385edea139161111091611f95565b60405190819003812060e083901b6001600160e01b03191682526004820152602401602060405180830381865afa15801561114f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611173919061200b565b60000361117d5750565b6004546000828152600160205260409081902090516001600160a01b0390921691636526db7a916111ad91611f95565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101849052604401600060405180830381600087803b1580156111f057600080fd5b505af1158015611204573d6000803e3d6000fd5b5050600354604051634cc8221560e01b8152600481018590526001600160a01b039091169250634cc822159150602401600060405180830381600087803b15801561124e57600080fd5b505af1158015611262573d6000803e3d6000fd5b5050505061126f8161153f565b60005b600554811015610c03576005818154811061128f5761128f611ccf565b600091825260209091200154604051634cc8221560e01b8152600481018490526001600160a01b0390911690634cc8221590602401600060405180830381600087803b1580156112de57600080fd5b505af11580156112f2573d6000803e3d6000fd5b50505050808061130190611ce5565b915050611272565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b600354604051630801f16960e11b8152600481018490526001600160a01b0390911690631003e2d290602401600060405180830381600087803b15801561137d57600080fd5b505af1158015611391573d6000803e3d6000fd5b50506004546000858152600160205260409081902090516001600160a01b039092169350636526db7a92506113c591611f95565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101859052604401600060405180830381600087803b15801561140857600080fd5b505af115801561141c573d6000803e3d6000fd5b5050600480548451602086012060405163771602f760e01b815292830152602482018690526001600160a01b0316925063771602f79150604401600060405180830381600087803b15801561147057600080fd5b505af1158015611484573d6000803e3d6000fd5b505050506114928282611587565b60005b60055481101561153157600581815481106114b2576114b2611ccf565b6000918252602090912001546040516242d70760e31b81526001600160a01b0390911690630216b838906114ec9086908690600401612024565b600060405180830381600087803b15801561150657600080fd5b505af115801561151a573d6000803e3d6000fd5b50505050808061152990611ce5565b915050611495565b505050565b61057e81611608565b600081815260016020526040812061155691611682565b600054604051630de3b7b560e01b8152600481018390526001600160a01b0390911690630de3b7b590602401610c90565b600082815260016020526040902061159f8282612083565b5060005460405163cfd3c57f60e01b81526001600160a01b039091169063cfd3c57f906115d29085908590600401612024565b600060405180830381600087803b1580156115ec57600080fd5b505af1158015611600573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b50805461168e90611e4b565b6000825580601f1061169e575050565b601f01602090049060005260206000209081019061057e91905b808211156116cc57600081556001016116b8565b5090565b6000602082840312156116e257600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6003811061170f5761170f6116e9565b9052565b60006020808352610120830161172c82850186516116ff565b84820151610100604086810182905282519384905291840192600092906101408801905b8085101561177f5785518051835287015163ffffffff1687830152948601946001949094019390820190611750565b5081890151606089015260608901516080890152608089015160a089015260a089015160c089015260c089015160e089015260e08901518389015280965050505050505092915050565b600081518084526020808501945080840160005b838110156117f9578151875295820195908201906001016117dd565b509495945050505050565b60208152600061181760208301846117c9565b9392505050565b6000610100828403121561183157600080fd5b50919050565b60006020828403121561184957600080fd5b81356001600160401b0381111561185f57600080fd5b61186b8482850161181e565b949350505050565b60006020828403121561188557600080fd5b81356001600160a01b038116811461181757600080fd5b6000815180845260005b818110156118c2576020818501810151868301820152016118a6565b506000602082860101526020601f19601f83011685010191505092915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561193957605f1988870301855261192786835161189c565b9550938201939082019060010161190b565b50508584038187015286518085528782019482019350915060005b828110156119805784516022811061196e5761196e6116e9565b84529381019392810192600101611954565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156119cb576119cb61198d565b604052919050565b600082601f8301126119e457600080fd5b81356001600160401b038111156119fd576119fd61198d565b611a10601f8201601f19166020016119a3565b818152846020838601011115611a2557600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611a5557600080fd5b8235915060208301356001600160401b03811115611a7257600080fd5b611a7e858286016119d3565b9150509250929050565b600060208284031215611a9a57600080fd5b81356001600160401b03811115611ab057600080fd5b61186b848285016119d3565b602081526000611817602083018461189c565b60008060408385031215611ae257600080fd5b8235915060208301356001600160401b03811115611aff57600080fd5b611a7e8582860161181e565b6003811061057e57600080fd5b60006001600160401b03821115611b3157611b3161198d565b5060051b60200190565b63ffffffff8116811461057e57600080fd5b600082601f830112611b5e57600080fd5b81516020611b73611b6e83611b18565b6119a3565b82815260059290921b84018101918181019086841115611b9257600080fd5b8286015b84811015611bad5780518352918301918301611b96565b509695505050505050565b60008060008060008060008060006101208a8c031215611bd757600080fd5b8951611be281611b0b565b60208b01519099506001600160401b0380821115611bff57600080fd5b818c0191508c601f830112611c1357600080fd5b8151611c21611b6e82611b18565b8082825260208201915060208360051b86010192508f831115611c4357600080fd5b6020850194505b82851015611c6e578451611c5d81611b3b565b825260209485019490910190611c4a565b60408f0151909c509350505080821115611c8757600080fd5b50611c948c828d01611b4d565b97505060608a0151955060808a0151945060a08a0151935060c08a0151925060e08a015191506101008a015190509295985092959850929598565b634e487b7160e01b600052603260045260246000fd5b600060018201611d0557634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215611d1e57600080fd5b81516001600160401b03811115611d3457600080fd5b61186b84828501611b4d565b8183526000602080850194508260005b858110156117f9578135875282820135611d6981611b3b565b63ffffffff16878401526040968701969190910190600101611d50565b6020815260008235611d9781611b0b565b611da460208401826116ff565b506020830135601e19843603018112611dbc57600080fd5b83016020810190356001600160401b03811115611dd857600080fd5b8060061b3603821315611dea57600080fd5b610100806040860152611e0261012086018385611d40565b92506040860135606086015260608601356080860152608086013560a086015260a086013560c086015260c086013560e086015260e08601358186015250508091505092915050565b600181811c90821680611e5f57607f821691505b60208210810361183157634e487b7160e01b600052602260045260246000fd5b6000808335601e19843603018112611e9657600080fd5b8301803591506001600160401b03821115611eb057600080fd5b6020019150600681901b3603821315611ec857600080fd5b9250929050565b600060208284031215611ee157600080fd5b813561181781611b3b565b600060208284031215611efe57600080fd5b813561181781611b0b565b6000610120611f18838d6116ff565b806020840152611f2a8184018c6117c9565b90508281036040840152611f3e818b6117c9565b60608401999099525050608081019590955260a085019390935260c084019190915260e0830152610100909101529392505050565b600060208284031215611f8557600080fd5b8151801515811461181757600080fd5b6000808354611fa381611e4b565b60018281168015611fbb5760018114611fd057611fff565b60ff1984168752821515830287019450611fff565b8760005260208060002060005b85811015611ff65781548a820152908401908201611fdd565b50505082870194505b50929695505050505050565b60006020828403121561201d57600080fd5b5051919050565b82815260406020820152600061186b604083018461189c565b601f82111561153157600081815260208120601f850160051c810160208610156120645750805b601f850160051c820191505b8181101561160057828155600101612070565b81516001600160401b0381111561209c5761209c61198d565b6120b0816120aa8454611e4b565b8461203d565b602080601f8311600181146120e557600084156120cd5750858301515b600019600386901b1c1916600185901b178555611600565b600085815260208120601f198616915b82811015612114578886015182559484019460019091019084016120f5565b50858210156121325787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212203bb1fb684ad3b67639629cda0aed8a4e85785e78d1146bcf744e8c1737b3679364736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610621806100a86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e7cb6e11161005b5780638e7cb6e1146100f3578063949d225d1461011d578063cccf7a8e1461012e578063f2fde38b1461015157600080fd5b80631003e2d21461008d578063410d59cc146100a25780634cc82215146100c05780638da5cb5b146100d3575b600080fd5b6100a061009b36600461050b565b610164565b005b6100aa6101ef565b6040516100b79190610524565b60405180910390f35b6100a06100ce36600461050b565b610247565b6100db610374565b6040516001600160a01b0390911681526020016100b7565b61010661010136600461050b565b610383565b6040805192151583526020830191909152016100b7565b6000546040519081526020016100b7565b61014161013c36600461050b565b6103b6565b60405190151581526020016100b7565b6100a061015f366004610568565b610419565b61016c61045b565b6001600160a01b0316336001600160a01b03161461019d57604051632f7a8ee160e01b815260040160405180910390fd5b6101a6816103b6565b6101ec57600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190555b50565b6060600080548060200260200160405190810160405280929190818152602001828054801561023d57602002820191906000526020600020905b815481526020019060010190808311610229575b5050505050905090565b61024f61045b565b6001600160a01b0316336001600160a01b03161461028057604051632f7a8ee160e01b815260040160405180910390fd5b610289816103b6565b156101ec576000805461029e90600190610598565b815481106102ae576102ae6105bf565b906000526020600020015460006001600084815260200190815260200160002054815481106102df576102df6105bf565b60009182526020808320909101929092558281526001918290526040812054815490929190819084908110610316576103166105bf565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061035b5761035b6105d5565b6001900381819060005260206000200160009055905550565b600061037e61045b565b905090565b60008061038f836103b6565b61039e57506000928392509050565b50506000908152600160208190526040909120549091565b6000805481036103c857506000919050565b60008281526001602052604081205490036104045781600080815481106103f1576103f16105bf565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b61042161045b565b6001600160a01b0316336001600160a01b03161461045257604051632f7a8ee160e01b815260040160405180910390fd5b6101ec81610489565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516101ec92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561051d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561055c57835183529284019291840191600101610540565b50909695505050505050565b60006020828403121561057a57600080fd5b81356001600160a01b038116811461059157600080fd5b9392505050565b818103818111156105b957634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e26b625121584afbfcdd5a7c76a89bd07c2a082781c4635c0fc11c4dffdf9aed64736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610663806100a86000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806385edea131161005b57806385edea13146100d35780638da5cb5b14610101578063a0265ff814610121578063f2fde38b1461014457600080fd5b80636526db7a14610082578063771602f714610097578063796c5e94146100aa575b600080fd5b610095610090366004610531565b610157565b005b6100956100a5366004610531565b6102bd565b6100bd6100b8366004610553565b61033a565b6040516100ca919061056c565b60405180910390f35b6100f36100e1366004610553565b60009081526020819052604090205490565b6040519081526020016100ca565b61010961039a565b6040516001600160a01b0390911681526020016100ca565b61013461012f366004610531565b6103a9565b60405190151581526020016100ca565b6100956101523660046105b0565b61043c565b61015f610481565b6001600160a01b0316336001600160a01b03161461019057604051632f7a8ee160e01b815260040160405180910390fd5b61019a82826103a9565b156102b957600082815260208190526040902080546101bb906001906105e0565b815481106101cb576101cb610601565b6000918252602080832090910154848352828252604080842060018452818520868652909352909220548154811061020557610205610601565b60009182526020808320909101929092558381526001825260408082208483528084528183205486845283855291832085845293819052835491939092918490811061025357610253610601565b600091825260208083209091015483528281019390935260409182018120939093558483526001825280832084845282528083208390558483529082905290208054806102a2576102a2610617565b600190038181906000526020600020016000905590555b5050565b6102c5610481565b6001600160a01b0316336001600160a01b0316146102f657604051632f7a8ee160e01b815260040160405180910390fd5b61030082826103a9565b6102b95760009182526020828152604080842080546001808552838720868852855292862081905585845291820181558452922090910155565b6000818152602081815260409182902080548351818402810184019094528084526060939283018282801561038e57602002820191906000526020600020905b81548152602001906001019080831161037a575b50505050509050919050565b60006103a4610481565b905090565b60008281526020819052604081205481036103c657506000610436565b60008381526001602090815260408083208584529091528120549003610418576000838152602081905260408120805484929061040557610405610601565b9060005260206000200154149050610436565b50600082815260016020908152604080832084845290915290205415155b92915050565b610444610481565b6001600160a01b0316336001600160a01b03161461047557604051632f7a8ee160e01b815260040160405180910390fd5b61047e816104af565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161047e92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806040838503121561054457600080fd5b50508035926020909101359150565b60006020828403121561056557600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156105a457835183529284019291840191600101610588565b50909695505050505050565b6000602082840312156105c257600080fd5b81356001600160a01b03811681146105d957600080fd5b9392505050565b8181038181111561043657634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122074d2dbc3f020a29d6081fb9fcf69e8e3c85026be8658abafc11ba431c108e33464736f6c634300081300338a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460";

type ArrivalComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArrivalComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArrivalComponent__factory extends ContractFactory {
  constructor(...args: ArrivalComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArrivalComponent> {
    return super.deploy(world, overrides || {}) as Promise<ArrivalComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): ArrivalComponent {
    return super.attach(address) as ArrivalComponent;
  }
  override connect(signer: Signer): ArrivalComponent__factory {
    return super.connect(signer) as ArrivalComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArrivalComponentInterface {
    return new utils.Interface(_abi) as ArrivalComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArrivalComponent {
    return new Contract(address, _abi, signerOrProvider) as ArrivalComponent;
  }
}
