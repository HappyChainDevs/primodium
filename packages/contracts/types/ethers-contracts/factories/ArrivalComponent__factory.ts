/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ArrivalComponent,
  ArrivalComponentInterface,
} from "../ArrivalComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ESendType",
            name: "sendType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "unitType",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "count",
                type: "uint32",
              },
            ],
            internalType: "struct ArrivalUnit[]",
            name: "units",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "arrivalBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "to",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "origin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destination",
            type: "uint256",
          },
        ],
        internalType: "struct Arrival",
        name: "sendType",
        type: "tuple",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "enum ESendType",
            name: "sendType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "unitType",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "count",
                type: "uint32",
              },
            ],
            internalType: "struct ArrivalUnit[]",
            name: "units",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "arrivalBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "to",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "origin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destination",
            type: "uint256",
          },
        ],
        internalType: "struct Arrival",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "indexer",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum ESendType",
            name: "sendType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "unitType",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "count",
                type: "uint32",
              },
            ],
            internalType: "struct ArrivalUnit[]",
            name: "units",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "arrivalBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "to",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "origin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destination",
            type: "uint256",
          },
        ],
        internalType: "struct Arrival",
        name: "arrival",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200313c3803806200313c833981016040819052620000349162000262565b807f8e9099e75678919c8e1307fac4366e095ace966d09bb54991618c1fa0d72bf338181620000633362000127565b60028190556001600160a01b038216156200008357620000838262000190565b5050604051620000939062000246565b604051809103906000f080158015620000b0573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055604051620000df9062000254565b604051809103906000f080158015620000fc573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b03929092169190911790555062000294915050565b6000805160206200311c83398151915280546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6000805160206200311c833981519152546001600160a01b03163314620001ca57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200022a57600080fd5b505af11580156200023f573d6000803e3d6000fd5b5050505050565b6106c9806200234883390190565b61070b8062002a1183390190565b6000602082840312156200027557600080fd5b81516001600160a01b03811681146200028d57600080fd5b9392505050565b6120a480620002a46000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063bb3822c711610071578063bb3822c71461027b578063bf4fe57e1461028e578063cccf7a8e146102a1578063d63b687c146102b4578063f2fde38b146102c757600080fd5b80638da5cb5b146102165780639d2c76b41461021e578063af640d0f14610231578063b361be4614610248578063b8bc073d1461025b57600080fd5b80634fef6a38116100f45780634fef6a38146101a45780636b122fe0146101b757806375c0669c146101cd578063861eb905146101e05780638b2829471461020357600080fd5b80630ff4c9161461012657806330b67baa1461014f57806331b933b91461017a5780634cc822151461018f575b600080fd5b61013961013436600461162b565b6102da565b604051610146919061166e565b60405180910390f35b600054610162906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b610182610493565b6040516101469190611754565b6101a261019d36600461162b565b61050a565b005b6101a26101b236600461176e565b61053c565b6101bf6105b8565b6040516101469291906117dd565b6101a26101db36600461176e565b610a2e565b6101f36101ee36600461176e565b610aa6565b6040519015158152602001610146565b6101a261021136600461193d565b610b0a565b610162610b3e565b6101a261022c36600461176e565b610b48565b61023a60025481565b604051908152602001610146565b610182610256366004611983565b610bfc565b61026e61026936600461162b565b610c75565b60405161014691906119bf565b6101a26102893660046119ea565b610d17565b6101a261029c36600461176e565b610ee8565b6101f36102af36600461162b565b610f61565b6101826102c2366004611a26565b610fcf565b6101a26102d536600461176e565b610ff9565b61031b6040805160e0810190915280600081526020016060815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000806000806000806000806103308a610c75565b8060200190518101906103439190611b07565b97509750975097509750975097509750600087516001600160401b0381111561036e5761036e611888565b6040519080825280602002602001820160405280156103b357816020015b604080518082019091526000808252602082015281526020019060019003908161038c5790505b50905060005b885181101561043f5760405180604001604052808983815181106103df576103df611c10565b602002602001015181526020018a83815181106103fe576103fe611c10565b602002602001015163ffffffff1681525082828151811061042157610421611c10565b6020026020010181905250808061043790611c26565b9150506103b9565b506040518060e001604052808a600281111561045d5761045d611644565b8152602081019290925260408201969096526060810194909452608084019290925260a083015260c09091015295945050505050565b60035460408051631043567360e21b815290516060926001600160a01b03169163410d59cc9160048083019260009291908290030181865afa1580156104dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105059190810190611c4d565b905090565b61051333610aa6565b6105305760405163203769ed60e11b815260040160405180910390fd5b6105398161103b565b50565b610544611264565b6001600160a01b0316336001600160a01b03161461057557604051632f7a8ee160e01b815260040160405180910390fd5b6001600160a01b031660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c90960205260409020805460ff19166001179055565b6040805160088082526101208201909252606091829190816020015b60608152602001906001900390816105d4575050604080516008808252610120820190925291935060208201610100803683370190505090506040518060400160405280600881526020016773656e645479706560c01b8152508260008151811061064157610641611c10565b602002602001018190525060088160008151811061066157610661611c10565b6020026020010190602181111561067a5761067a611644565b9081602181111561068d5761068d611644565b815250506040518060400160405280600a815260200169756e6974436f756e747360b01b815250826001815181106106c7576106c7611c10565b6020026020010181905250601c816001815181106106e7576106e7611c10565b6020026020010190602181111561070057610700611644565b9081602181111561071357610713611644565b8152505060405180604001604052806009815260200168756e6974547970657360b81b8152508260028151811061074c5761074c611c10565b6020026020010181905250601f8160028151811061076c5761076c611c10565b6020026020010190602181111561078557610785611644565b9081602181111561079857610798611644565b815250506040518060400160405280600c81526020016b6172726976616c426c6f636b60a01b815250826003815181106107d4576107d4611c10565b6020026020010181905250600d816003815181106107f4576107f4611c10565b6020026020010190602181111561080d5761080d611644565b9081602181111561082057610820611644565b815250506040518060400160405280600481526020016366726f6d60e01b8152508260048151811061085457610854611c10565b6020026020010181905250600d8160048151811061087457610874611c10565b6020026020010190602181111561088d5761088d611644565b908160218111156108a0576108a0611644565b8152505060405180604001604052806002815260200161746f60f01b815250826005815181106108d2576108d2611c10565b6020026020010181905250600d816005815181106108f2576108f2611c10565b6020026020010190602181111561090b5761090b611644565b9081602181111561091e5761091e611644565b815250506040518060400160405280600681526020016537b934b3b4b760d11b8152508260068151811061095457610954611c10565b6020026020010181905250600d8160068151811061097457610974611c10565b6020026020010190602181111561098d5761098d611644565b908160218111156109a0576109a0611644565b815250506040518060400160405280600b81526020016a3232b9ba34b730ba34b7b760a91b815250826007815181106109db576109db611c10565b6020026020010181905250600d816007815181106109fb576109fb611c10565b60200260200101906021811115610a1457610a14611644565b90816021811115610a2757610a27611644565b9052509091565b610a3733610aa6565b610a545760405163203769ed60e11b815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610b045750610aef610b3e565b6001600160a01b0316826001600160a01b0316145b92915050565b610b1333610aa6565b610b305760405163203769ed60e11b815260040160405180910390fd5b610b3a8282611292565b5050565b6000610505611264565b610b50611264565b6001600160a01b0316336001600160a01b031614610b8157604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610be157600080fd5b505af1158015610bf5573d6000803e3d6000fd5b5050505050565b6004805482516020840120604051631e5b17a560e21b8152928301526060916001600160a01b039091169063796c5e9490602401600060405180830381865afa158015610c4d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b049190810190611c4d565b6000818152600160205260409020805460609190610c9290611c81565b80601f0160208091040260200160405190810160405280929190818152602001828054610cbe90611c81565b8015610d0b5780601f10610ce057610100808354040283529160200191610d0b565b820191906000526020600020905b815481529060010190602001808311610cee57829003601f168201915b50505050509050919050565b6000610d266020830183611cb5565b90506001600160401b03811115610d3f57610d3f611888565b604051908082528060200260200182016040528015610d68578160200160208202803683370190505b5090506000610d7a6020840184611cb5565b90506001600160401b03811115610d9357610d93611888565b604051908082528060200260200182016040528015610dbc578160200160208202803683370190505b50905060005b610dcf6020850185611cb5565b9050811015610e8a57610de56020850185611cb5565b82818110610df557610df5611c10565b9050604002016020016020810190610e0d9190611d05565b63ffffffff16838281518110610e2557610e25611c10565b602002602001018181525050838060200190610e419190611cb5565b82818110610e5157610e51611c10565b90506040020160000135828281518110610e6d57610e6d611c10565b602090810291909101015280610e8281611c26565b915050610dc2565b50610ee284610e9c6020860186611d22565b84848760400135886060013589608001358a60a001358b60c00135604051602001610ece989796959493929190611d3f565b604051602081830303815290604052610b0a565b50505050565b610ef0611264565b6001600160a01b0316336001600160a01b031614610f2157604051632f7a8ee160e01b815260040160405180910390fd5b6001600160a01b031660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c90960205260409020805460ff19169055565b600354604051636667bd4760e11b8152600481018390526000916001600160a01b03169063cccf7a8e90602401602060405180830381865afa158015610fab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b049190611da0565b6060610b0482604051602001610fe59190611e08565b604051602081830303815290604052610bfc565b611001611264565b6001600160a01b0316336001600160a01b03161461103257604051632f7a8ee160e01b815260040160405180910390fd5b61053981611491565b6004546000828152600160205260409081902090516001600160a01b03909216916385edea139161106b91611ec1565b60405190819003812060e083901b6001600160e01b03191682526004820152602401602060405180830381865afa1580156110aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ce9190611f37565b6000036110d85750565b6004546000828152600160205260409081902090516001600160a01b0390921691636526db7a9161110891611ec1565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101849052604401600060405180830381600087803b15801561114b57600080fd5b505af115801561115f573d6000803e3d6000fd5b5050600354604051634cc8221560e01b8152600481018590526001600160a01b039091169250634cc822159150602401600060405180830381600087803b1580156111a957600080fd5b505af11580156111bd573d6000803e3d6000fd5b505050506111ca8161149a565b60005b600554811015610b3a57600581815481106111ea576111ea611c10565b600091825260209091200154604051634cc8221560e01b8152600481018490526001600160a01b0390911690634cc8221590602401600060405180830381600087803b15801561123957600080fd5b505af115801561124d573d6000803e3d6000fd5b50505050808061125c90611c26565b9150506111cd565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b600354604051630801f16960e11b8152600481018490526001600160a01b0390911690631003e2d290602401600060405180830381600087803b1580156112d857600080fd5b505af11580156112ec573d6000803e3d6000fd5b50506004546000858152600160205260409081902090516001600160a01b039092169350636526db7a925061132091611ec1565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101859052604401600060405180830381600087803b15801561136357600080fd5b505af1158015611377573d6000803e3d6000fd5b5050600480548451602086012060405163771602f760e01b815292830152602482018690526001600160a01b0316925063771602f79150604401600060405180830381600087803b1580156113cb57600080fd5b505af11580156113df573d6000803e3d6000fd5b505050506113ed82826114e2565b60005b60055481101561148c576005818154811061140d5761140d611c10565b6000918252602090912001546040516242d70760e31b81526001600160a01b0390911690630216b838906114479086908690600401611f50565b600060405180830381600087803b15801561146157600080fd5b505af1158015611475573d6000803e3d6000fd5b50505050808061148490611c26565b9150506113f0565b505050565b61053981611563565b60008181526001602052604081206114b1916115dd565b600054604051630de3b7b560e01b8152600481018390526001600160a01b0390911690630de3b7b590602401610bc7565b60008281526001602052604090206114fa8282611faf565b5060005460405163cfd3c57f60e01b81526001600160a01b039091169063cfd3c57f9061152d9085908590600401611f50565b600060405180830381600087803b15801561154757600080fd5b505af115801561155b573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b5080546115e990611c81565b6000825580601f106115f9575050565b601f01602090049060005260206000209081019061053991905b808211156116275760008155600101611613565b5090565b60006020828403121561163d57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6003811061166a5761166a611644565b9052565b600060208083526101008301611687828501865161165a565b81850151604060e081870152828251808552610120880191508584019450600093505b808410156116d95784518051835286015163ffffffff16868301529385019360019390930192908201906116aa565b5081880151606088015260608801516080880152608088015160a088015260a088015160c088015260c088015160e0880152809550505050505092915050565b600081518084526020808501945080840160005b838110156117495781518752958201959082019060010161172d565b509495945050505050565b6020815260006117676020830184611719565b9392505050565b60006020828403121561178057600080fd5b81356001600160a01b038116811461176757600080fd5b6000815180845260005b818110156117bd576020818501810151868301820152016117a1565b506000602082860101526020601f19601f83011685010191505092915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561183457605f19888703018552611822868351611797565b95509382019390820190600101611806565b50508584038187015286518085528782019482019350915060005b8281101561187b5784516022811061186957611869611644565b8452938101939281019260010161184f565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156118c6576118c6611888565b604052919050565b600082601f8301126118df57600080fd5b81356001600160401b038111156118f8576118f8611888565b61190b601f8201601f191660200161189e565b81815284602083860101111561192057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561195057600080fd5b8235915060208301356001600160401b0381111561196d57600080fd5b611979858286016118ce565b9150509250929050565b60006020828403121561199557600080fd5b81356001600160401b038111156119ab57600080fd5b6119b7848285016118ce565b949350505050565b6020815260006117676020830184611797565b600060e082840312156119e457600080fd5b50919050565b600080604083850312156119fd57600080fd5b8235915060208301356001600160401b03811115611a1a57600080fd5b611979858286016119d2565b600060208284031215611a3857600080fd5b81356001600160401b03811115611a4e57600080fd5b6119b7848285016119d2565b6003811061053957600080fd5b60006001600160401b03821115611a8057611a80611888565b5060051b60200190565b63ffffffff8116811461053957600080fd5b600082601f830112611aad57600080fd5b81516020611ac2611abd83611a67565b61189e565b82815260059290921b84018101918181019086841115611ae157600080fd5b8286015b84811015611afc5780518352918301918301611ae5565b509695505050505050565b600080600080600080600080610100898b031215611b2457600080fd5b8851611b2f81611a5a565b809850506020808a01516001600160401b0380821115611b4e57600080fd5b818c0191508c601f830112611b6257600080fd5b8151611b70611abd82611a67565b81815260059190911b8301840190848101908f831115611b8f57600080fd5b938501935b82851015611bb6578451611ba781611a8a565b82529385019390850190611b94565b60408f0151909c509450505080831115611bcf57600080fd5b5050611bdd8b828c01611a9c565b965050606089015194506080890151935060a0890151925060c0890151915060e089015190509295985092959890939650565b634e487b7160e01b600052603260045260246000fd5b600060018201611c4657634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215611c5f57600080fd5b81516001600160401b03811115611c7557600080fd5b6119b784828501611a9c565b600181811c90821680611c9557607f821691505b6020821081036119e457634e487b7160e01b600052602260045260246000fd5b6000808335601e19843603018112611ccc57600080fd5b8301803591506001600160401b03821115611ce657600080fd5b6020019150600681901b3603821315611cfe57600080fd5b9250929050565b600060208284031215611d1757600080fd5b813561176781611a8a565b600060208284031215611d3457600080fd5b813561176781611a5a565b6000610100611d4e838c61165a565b806020840152611d608184018b611719565b90508281036040840152611d74818a611719565b60608401989098525050608081019490945260a084019290925260c083015260e0909101529392505050565b600060208284031215611db257600080fd5b8151801515811461176757600080fd5b8183526000602080850194508260005b85811015611749578135875282820135611deb81611a8a565b63ffffffff16878401526040968701969190910190600101611dd2565b6020815260008235611e1981611a5a565b611e26602084018261165a565b506020830135601e19843603018112611e3e57600080fd5b83016020810190356001600160401b03811115611e5a57600080fd5b8060061b3603821315611e6c57600080fd5b60e06040850152611e8261010085018284611dc2565b9150506040840135606084015260608401356080840152608084013560a084015260a084013560c084015260c084013560e08401528091505092915050565b6000808354611ecf81611c81565b60018281168015611ee75760018114611efc57611f2b565b60ff1984168752821515830287019450611f2b565b8760005260208060002060005b85811015611f225781548a820152908401908201611f09565b50505082870194505b50929695505050505050565b600060208284031215611f4957600080fd5b5051919050565b8281526040602082015260006119b76040830184611797565b601f82111561148c57600081815260208120601f850160051c81016020861015611f905750805b601f850160051c820191505b8181101561155b57828155600101611f9c565b81516001600160401b03811115611fc857611fc8611888565b611fdc81611fd68454611c81565b84611f69565b602080601f8311600181146120115760008415611ff95750858301515b600019600386901b1c1916600185901b17855561155b565b600085815260208120601f198616915b8281101561204057888601518255948401946001909101908401612021565b508582101561205e5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220e18ac7af0cb3b9b579b09b75dc48a499caa2540afaa74ccec4a4c00cda6ee41d64736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610621806100a86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e7cb6e11161005b5780638e7cb6e1146100f3578063949d225d1461011d578063cccf7a8e1461012e578063f2fde38b1461015157600080fd5b80631003e2d21461008d578063410d59cc146100a25780634cc82215146100c05780638da5cb5b146100d3575b600080fd5b6100a061009b36600461050b565b610164565b005b6100aa6101ef565b6040516100b79190610524565b60405180910390f35b6100a06100ce36600461050b565b610247565b6100db610374565b6040516001600160a01b0390911681526020016100b7565b61010661010136600461050b565b610383565b6040805192151583526020830191909152016100b7565b6000546040519081526020016100b7565b61014161013c36600461050b565b6103b6565b60405190151581526020016100b7565b6100a061015f366004610568565b610419565b61016c61045b565b6001600160a01b0316336001600160a01b03161461019d57604051632f7a8ee160e01b815260040160405180910390fd5b6101a6816103b6565b6101ec57600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190555b50565b6060600080548060200260200160405190810160405280929190818152602001828054801561023d57602002820191906000526020600020905b815481526020019060010190808311610229575b5050505050905090565b61024f61045b565b6001600160a01b0316336001600160a01b03161461028057604051632f7a8ee160e01b815260040160405180910390fd5b610289816103b6565b156101ec576000805461029e90600190610598565b815481106102ae576102ae6105bf565b906000526020600020015460006001600084815260200190815260200160002054815481106102df576102df6105bf565b60009182526020808320909101929092558281526001918290526040812054815490929190819084908110610316576103166105bf565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061035b5761035b6105d5565b6001900381819060005260206000200160009055905550565b600061037e61045b565b905090565b60008061038f836103b6565b61039e57506000928392509050565b50506000908152600160208190526040909120549091565b6000805481036103c857506000919050565b60008281526001602052604081205490036104045781600080815481106103f1576103f16105bf565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b61042161045b565b6001600160a01b0316336001600160a01b03161461045257604051632f7a8ee160e01b815260040160405180910390fd5b6101ec81610489565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516101ec92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561051d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561055c57835183529284019291840191600101610540565b50909695505050505050565b60006020828403121561057a57600080fd5b81356001600160a01b038116811461059157600080fd5b9392505050565b818103818111156105b957634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212209120bb0a2a9936c2c457117a2d6e08d1b5892ce4c2794940e794c00e17bf899964736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610663806100a86000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806385edea131161005b57806385edea13146100d35780638da5cb5b14610101578063a0265ff814610121578063f2fde38b1461014457600080fd5b80636526db7a14610082578063771602f714610097578063796c5e94146100aa575b600080fd5b610095610090366004610531565b610157565b005b6100956100a5366004610531565b6102bd565b6100bd6100b8366004610553565b61033a565b6040516100ca919061056c565b60405180910390f35b6100f36100e1366004610553565b60009081526020819052604090205490565b6040519081526020016100ca565b61010961039a565b6040516001600160a01b0390911681526020016100ca565b61013461012f366004610531565b6103a9565b60405190151581526020016100ca565b6100956101523660046105b0565b61043c565b61015f610481565b6001600160a01b0316336001600160a01b03161461019057604051632f7a8ee160e01b815260040160405180910390fd5b61019a82826103a9565b156102b957600082815260208190526040902080546101bb906001906105e0565b815481106101cb576101cb610601565b6000918252602080832090910154848352828252604080842060018452818520868652909352909220548154811061020557610205610601565b60009182526020808320909101929092558381526001825260408082208483528084528183205486845283855291832085845293819052835491939092918490811061025357610253610601565b600091825260208083209091015483528281019390935260409182018120939093558483526001825280832084845282528083208390558483529082905290208054806102a2576102a2610617565b600190038181906000526020600020016000905590555b5050565b6102c5610481565b6001600160a01b0316336001600160a01b0316146102f657604051632f7a8ee160e01b815260040160405180910390fd5b61030082826103a9565b6102b95760009182526020828152604080842080546001808552838720868852855292862081905585845291820181558452922090910155565b6000818152602081815260409182902080548351818402810184019094528084526060939283018282801561038e57602002820191906000526020600020905b81548152602001906001019080831161037a575b50505050509050919050565b60006103a4610481565b905090565b60008281526020819052604081205481036103c657506000610436565b60008381526001602090815260408083208584529091528120549003610418576000838152602081905260408120805484929061040557610405610601565b9060005260206000200154149050610436565b50600082815260016020908152604080832084845290915290205415155b92915050565b610444610481565b6001600160a01b0316336001600160a01b03161461047557604051632f7a8ee160e01b815260040160405180910390fd5b61047e816104af565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161047e92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806040838503121561054457600080fd5b50508035926020909101359150565b60006020828403121561056557600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156105a457835183529284019291840191600101610588565b50909695505050505050565b6000602082840312156105c257600080fd5b81356001600160a01b03811681146105d957600080fd5b9392505050565b8181038181111561043657634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212204fe0e51f850fe860844b3ef4690dbe2f4106d195a4c983b0ea09e2b1f7ab027564736f6c634300081300338a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460";

type ArrivalComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArrivalComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArrivalComponent__factory extends ContractFactory {
  constructor(...args: ArrivalComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArrivalComponent> {
    return super.deploy(world, overrides || {}) as Promise<ArrivalComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): ArrivalComponent {
    return super.attach(address) as ArrivalComponent;
  }
  override connect(signer: Signer): ArrivalComponent__factory {
    return super.connect(signer) as ArrivalComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArrivalComponentInterface {
    return new utils.Interface(_abi) as ArrivalComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArrivalComponent {
    return new Contract(address, _abi, signerOrProvider) as ArrivalComponent;
  }
}
