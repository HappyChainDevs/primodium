/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_UpdateConnectedRequiredProductionSystem,
  S_UpdateConnectedRequiredProductionSystemInterface,
} from "../S_UpdateConnectedRequiredProductionSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "buildingEntity",
        type: "uint256",
      },
      {
        internalType: "enum EActionType",
        name: "actionType",
        type: "uint8",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001460380380620014608339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b61120a80620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806327b450991461007a5780638da5cb5b1461008d578063f2fde38b146100ad575b600080fd5b61006461005f366004610c56565b6100c2565b6040516100719190610ceb565b60405180910390f35b610064610088366004610d5b565b6109a9565b6100956109df565b6040516001600160a01b039091168152602001610071565b6100c06100bb366004610d9d565b610a17565b005b6060610164600160009054906101000a90046001600160a01b03166001600160a01b0316630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e9190610dc1565b7fd573ac88b34a4d827762c3f1e7dc53ea2b602480271c42f976cd9097a3985a01610a6d565b6001600160a01b0316336001600160a01b031614806102285750600154604080516306ac999760e11b81529051610213926001600160a01b031691630d59332e9160048083019260209291908290030181865afa1580156101c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ed9190610dc1565b7f9d56d809d9533f83d16954f67b7304a365b59083abb67bc9d95ee7ab809e9554610a6d565b6001600160a01b0316336001600160a01b0316145b806102d85750600154604080516306ac999760e11b815290516102c3926001600160a01b031691630d59332e9160048083019260209291908290030181865afa158015610279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029d9190610dc1565b7f1025ff30bfb6e410680d7d93480140d7b1ee1777bb9786914eb4bd24d582f6f4610a6d565b6001600160a01b0316336001600160a01b0316145b61039b5760405162461bcd60e51b815260206004820152607860248201527f535f557064617465436f6e6e6563746564526571756972656450726f6475637460448201527f696f6e53797374656d3a204f6e6c792044657374726f7950617468537973746560648201527f6d2c204275696c645061746853797374656d2c2044657374726f79537973746560848201527f6d2063616e2063616c6c20746869732066756e6374696f6e000000000000000060a482015260c4015b60405180910390fd5b6000806000848060200190518101906103b49190610dde565b925092509250600061045c600160009054906101000a90046001600160a01b03166001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104369190610dc1565b7f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5610a6d565b6001600160a01b0316630ff4c916846040518263ffffffff1660e01b815260040161048991815260200190565b602060405180830381865afa1580156104a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ca9190610e16565b9050600061056e600160009054906101000a90046001600160a01b03166001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610524573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105489190610dc1565b7fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e610a6d565b6001600160a01b0316630ff4c916856040518263ffffffff1660e01b815260040161059b91815260200190565b602060405180830381865afa1580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dc9190610e48565b60408051602080820186905263ffffffff8416828401528251808303840181526060909201909252805191012090915060006106ae600160009054906101000a90046001600160a01b03166001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106889190610dc1565b7f0d469bcaf5f43a6290ca2906ecdeb5ef80d7723e8cad27045bddb6e1eb9da435610a6d565b6001600160a01b0316630ff4c916876040518263ffffffff1660e01b81526004016106db91815260200190565b602060405180830381865afa1580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c9190610e16565b905060006107497fa9030fd5d2d8df4ef9e9a591c66869629e3031bc7112e7766b55d9f29321005d610b47565b905060006107767f2444db3b2cf5ba1059ebafe0212ddf405afa28d4ca9f16e72b56afe6e5f673c8610b47565b6040516307fa648b60e11b8152600481018590529091506000906001600160a01b03841690630ff4c91690602401600060405180830381865afa1580156107c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107e99190810190610ef2565b6040516307fa648b60e11b8152600481018790529091506000906001600160a01b03841690630ff4c916906024016040805180830381865afa158015610833573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108579190610fe2565b51905060005b82515181101561093857818360000151828151811061087e5761087e611018565b6020026020010151036109265760008a600281111561089f5761089f61102e565b036108dd57826020015181815181106108ba576108ba611018565b6020026020010180518091906108cf9061105a565b63ffffffff16905250610938565b60028a60028111156108f1576108f161102e565b03610921578260200151818151811061090c5761090c611018565b6020026020010180518091906108cf9061107a565b610938565b806109308161109d565b91505061085d565b506040516304521f0160e11b81526001600160a01b038516906308a43e029061096790889086906004016110b6565b600060405180830381600087803b15801561098157600080fd5b505af1158015610995573d6000803e3d6000fd5b505050505050505050505050505050919050565b60606109d78484846040516020016109c39392919061115c565b6040516020818303038152906040526100c2565b949350505050565b6000610a127f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b03163314610a6157604051632f7a8ee160e01b815260040160405180910390fd5b610a6a81610b64565b50565b604051637defd0f560e11b81526004810182905260009081906001600160a01b0385169063fbdfa1ea90602401600060405180830381865afa158015610ab7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610adf919081019061119f565b90508051600003610b265760405162461bcd60e51b81526020600482015260116024820152701a59081b9bdd081c9959da5cdd195c9959607a1b6044820152606401610392565b6109d781600081518110610b3c57610b3c611018565b602002602001015190565b60008054610b5e906001600160a01b031683610a6d565b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610a6a92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610c1f57610c1f610be6565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c4e57610c4e610be6565b604052919050565b60006020808385031215610c6957600080fd5b823567ffffffffffffffff80821115610c8157600080fd5b818501915085601f830112610c9557600080fd5b813581811115610ca757610ca7610be6565b610cb9601f8201601f19168501610c25565b91508082528684828501011115610ccf57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b81811015610d1857858101830151858201604001528201610cfc565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0381168114610a6a57600080fd5b60038110610a6a57600080fd5b600080600060608486031215610d7057600080fd5b8335610d7b81610d39565b9250602084013591506040840135610d9281610d4e565b809150509250925092565b600060208284031215610daf57600080fd5b8135610dba81610d39565b9392505050565b600060208284031215610dd357600080fd5b8151610dba81610d39565b600080600060608486031215610df357600080fd5b8351610dfe81610d39565b602085015160408601519194509250610d9281610d4e565b600060208284031215610e2857600080fd5b5051919050565b805163ffffffff81168114610e4357600080fd5b919050565b600060208284031215610e5a57600080fd5b610dba82610e2f565b600067ffffffffffffffff821115610e7d57610e7d610be6565b5060051b60200190565b600082601f830112610e9857600080fd5b81516020610ead610ea883610e63565b610c25565b82815260059290921b84018101918181019086841115610ecc57600080fd5b8286015b84811015610ee75780518352918301918301610ed0565b509695505050505050565b60006020808385031215610f0557600080fd5b825167ffffffffffffffff80821115610f1d57600080fd5b9084019060408287031215610f3157600080fd5b610f39610bfc565b825182811115610f4857600080fd5b610f5488828601610e87565b8252508383015182811115610f6857600080fd5b80840193505086601f840112610f7d57600080fd5b82519150610f8d610ea883610e63565b82815260059290921b83018401918481019088841115610fac57600080fd5b938501935b83851015610fd157610fc285610e2f565b82529385019390850190610fb1565b948201949094529695505050505050565b600060408284031215610ff457600080fd5b610ffc610bfc565b8251815261100c60208401610e2f565b60208201529392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600063ffffffff82168061107057611070611044565b6000190192915050565b600063ffffffff80831681810361109357611093611044565b6001019392505050565b6000600182016110af576110af611044565b5060010190565b8281526000602060408184015260808301845160408086015281815180845260a0870191508483019350600092505b8083101561110557835182529284019260019290920191908401906110e5565b5086840151868203603f190160608801528051808352908501935090840191506000905b8082101561114f57835163ffffffff168352928401929184019160019190910190611129565b5090979650505050505050565b6001600160a01b038416815260208101839052606081016003831061119157634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b6000602082840312156111b157600080fd5b815167ffffffffffffffff8111156111c857600080fd5b6109d784828501610e8756fea26469706673582212201220613a2240de49d8984e50815727874b26f44fec60bb3e9669047bc8aa043664736f6c63430008130033";

type S_UpdateConnectedRequiredProductionSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_UpdateConnectedRequiredProductionSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_UpdateConnectedRequiredProductionSystem__factory extends ContractFactory {
  constructor(
    ...args: S_UpdateConnectedRequiredProductionSystemConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_UpdateConnectedRequiredProductionSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_UpdateConnectedRequiredProductionSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_UpdateConnectedRequiredProductionSystem {
    return super.attach(address) as S_UpdateConnectedRequiredProductionSystem;
  }
  override connect(
    signer: Signer
  ): S_UpdateConnectedRequiredProductionSystem__factory {
    return super.connect(
      signer
    ) as S_UpdateConnectedRequiredProductionSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_UpdateConnectedRequiredProductionSystemInterface {
    return new utils.Interface(
      _abi
    ) as S_UpdateConnectedRequiredProductionSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_UpdateConnectedRequiredProductionSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_UpdateConnectedRequiredProductionSystem;
  }
}
