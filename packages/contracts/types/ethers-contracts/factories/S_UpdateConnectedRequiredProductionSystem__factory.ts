/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_UpdateConnectedRequiredProductionSystem,
  S_UpdateConnectedRequiredProductionSystemInterface,
} from "../S_UpdateConnectedRequiredProductionSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "buildingEntity",
        type: "uint256",
      },
      {
        internalType: "enum EActionType",
        name: "actionType",
        type: "uint8",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001868380380620018688339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b61161280620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806327b450991461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610f49565b6100cf565b6040516100719190610ffc565b60405180910390f35b610064610088366004611097565b610b89565b610095610bbf565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c83660046110d9565b610c04565b005b606061018b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610141573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016591906110fd565b7fd573ac88b34a4d827762c3f1e7dc53ea2b602480271c42f976cd9097a3985a01610c80565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102a95750600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161027a9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610230573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025491906110fd565b7f9d56d809d9533f83d16954f67b7304a365b59083abb67bc9d95ee7ab809e9554610c80565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806103995750600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161036a9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610320573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034491906110fd565b7f1025ff30bfb6e410680d7d93480140d7b1ee1777bb9786914eb4bd24d582f6f4610c80565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152607860248201527f535f557064617465436f6e6e6563746564526571756972656450726f6475637460448201527f696f6e53797374656d3a204f6e6c792044657374726f7950617468537973746560648201527f6d2c204275696c645061746853797374656d2c2044657374726f79537973746560848201527f6d2063616e2063616c6c20746869732066756e6374696f6e000000000000000060a482015260c4015b60405180910390fd5b60008060008480602001905181019061048f919061111a565b9250925092506000610551600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052b91906110fd565b7f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5610c80565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916846040518263ffffffff1660e01b815260040161058b91815260200190565b602060405180830381865afa1580156105a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cc9190611152565b9050600061068a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066491906110fd565b7fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e610c80565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916856040518263ffffffff1660e01b81526004016106c491815260200190565b602060405180830381865afa1580156106e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107059190611184565b60408051602080820186905263ffffffff8416828401528251808303840181526060909201909252805191012090915060006107f1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cb91906110fd565b7f0d469bcaf5f43a6290ca2906ecdeb5ef80d7723e8cad27045bddb6e1eb9da435610c80565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916876040518263ffffffff1660e01b815260040161082b91815260200190565b602060405180830381865afa158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086c9190611152565b905060006108997fa9030fd5d2d8df4ef9e9a591c66869629e3031bc7112e7766b55d9f29321005d610dc4565b905060006108c67f2444db3b2cf5ba1059ebafe0212ddf405afa28d4ca9f16e72b56afe6e5f673c8610dc4565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401600060405180830381865afa158015610937573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261097d919081019061122e565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810187905290915060009073ffffffffffffffffffffffffffffffffffffffff841690630ff4c916906024016040805180830381865afa1580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a11919061131e565b51905060005b825151811015610af2578183600001518281518110610a3857610a38611354565b602002602001015103610ae05760008a6002811115610a5957610a59611383565b03610a975782602001518181518110610a7457610a74611354565b602002602001018051809190610a89906113e1565b63ffffffff16905250610af2565b60028a6002811115610aab57610aab611383565b03610adb5782602001518181518110610ac657610ac6611354565b602002602001018051809190610a899061141f565b610af2565b80610aea81611442565b915050610a17565b506040517f08a43e0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516906308a43e0290610b47908890869060040161147a565b600060405180830381600087803b158015610b6157600080fd5b505af1158015610b75573d6000803e3d6000fd5b505050505050505050505050505050919050565b6060610bb7848484604051602001610ba39392919061153e565b6040516020818303038152906040526100cf565b949350505050565b6000610bff7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c74576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c7d81610dee565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610cf0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d3691908101906115a7565b90508051600003610da3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161046d565b610bb781600081518110610db957610db9611354565b602002602001015190565b60008054610de89073ffffffffffffffffffffffffffffffffffffffff1683610c80565b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610c7d928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610ef457610ef4610ea2565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610f4157610f41610ea2565b604052919050565b60006020808385031215610f5c57600080fd5b823567ffffffffffffffff80821115610f7457600080fd5b818501915085601f830112610f8857600080fd5b813581811115610f9a57610f9a610ea2565b610fca847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610efa565b91508082528684828501011115610fe057600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156110295785810183015185820160400152820161100d565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114610c7d57600080fd5b60038110610c7d57600080fd5b6000806000606084860312156110ac57600080fd5b83356110b781611068565b92506020840135915060408401356110ce8161108a565b809150509250925092565b6000602082840312156110eb57600080fd5b81356110f681611068565b9392505050565b60006020828403121561110f57600080fd5b81516110f681611068565b60008060006060848603121561112f57600080fd5b835161113a81611068565b6020850151604086015191945092506110ce8161108a565b60006020828403121561116457600080fd5b5051919050565b805163ffffffff8116811461117f57600080fd5b919050565b60006020828403121561119657600080fd5b6110f68261116b565b600067ffffffffffffffff8211156111b9576111b9610ea2565b5060051b60200190565b600082601f8301126111d457600080fd5b815160206111e96111e48361119f565b610efa565b82815260059290921b8401810191818101908684111561120857600080fd5b8286015b84811015611223578051835291830191830161120c565b509695505050505050565b6000602080838503121561124157600080fd5b825167ffffffffffffffff8082111561125957600080fd5b908401906040828703121561126d57600080fd5b611275610ed1565b82518281111561128457600080fd5b611290888286016111c3565b82525083830151828111156112a457600080fd5b80840193505086601f8401126112b957600080fd5b825191506112c96111e48361119f565b82815260059290921b830184019184810190888411156112e857600080fd5b938501935b8385101561130d576112fe8561116b565b825293850193908501906112ed565b948201949094529695505050505050565b60006040828403121561133057600080fd5b611338610ed1565b825181526113486020840161116b565b60208201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff8216806113f7576113f76113b2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0192915050565b600063ffffffff808316818103611438576114386113b2565b6001019392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611473576114736113b2565b5060010190565b8281526000602060408184015260808301845160408086015281815180845260a0870191508483019350600092505b808310156114c957835182529284019260019290920191908401906114a9565b50868401518682037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00160608801528051808352908501935090840191506000905b8082101561153157835163ffffffff16835292840192918401916001919091019061150b565b5090979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff84168152602081018390526060810160038310611599577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826040830152949350505050565b6000602082840312156115b957600080fd5b815167ffffffffffffffff8111156115d057600080fd5b610bb7848285016111c356fea2646970667358221220072971c54b1ff31bf112956fe1dcc39df3c04aad2ce583398024a95e8f11703364736f6c63430008130033";

type S_UpdateConnectedRequiredProductionSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_UpdateConnectedRequiredProductionSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_UpdateConnectedRequiredProductionSystem__factory extends ContractFactory {
  constructor(
    ...args: S_UpdateConnectedRequiredProductionSystemConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_UpdateConnectedRequiredProductionSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_UpdateConnectedRequiredProductionSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_UpdateConnectedRequiredProductionSystem {
    return super.attach(address) as S_UpdateConnectedRequiredProductionSystem;
  }
  override connect(
    signer: Signer
  ): S_UpdateConnectedRequiredProductionSystem__factory {
    return super.connect(
      signer
    ) as S_UpdateConnectedRequiredProductionSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_UpdateConnectedRequiredProductionSystemInterface {
    return new utils.Interface(
      _abi
    ) as S_UpdateConnectedRequiredProductionSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_UpdateConnectedRequiredProductionSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_UpdateConnectedRequiredProductionSystem;
  }
}
