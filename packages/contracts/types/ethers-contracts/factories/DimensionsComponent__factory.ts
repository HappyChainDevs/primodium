/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DimensionsComponent,
  DimensionsComponentInterface,
} from "../DimensionsComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Dimensions",
        name: "size",
        type: "tuple",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Dimensions",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "indexer",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Dimensions",
        name: "value",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "int32",
        name: "width",
        type: "int32",
      },
      {
        internalType: "int32",
        name: "height",
        type: "int32",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200282c3803806200282c833981016040819052620000349162000262565b807f4d4b5854aad91ff8a49a13a08e0bd3844a69c01df18f29ff1176f4d7705e33528181620000633362000127565b60028190556001600160a01b038216156200008357620000838262000190565b5050604051620000939062000246565b604051809103906000f080158015620000b0573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055604051620000df9062000254565b604051809103906000f080158015620000fc573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b03929092169190911790555062000294915050565b6000805160206200280c83398151915280546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6000805160206200280c833981519152546001600160a01b03163314620001ca57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200022a57600080fd5b505af11580156200023f573d6000803e3d6000fd5b5050505050565b6106c98062001a3883390190565b61070b806200210183390190565b6000602082840312156200027557600080fd5b81516001600160a01b03811681146200028d57600080fd5b9392505050565b61179480620002a46000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80639d2c76b4116100ad578063bf4fe57e11610071578063bf4fe57e146102aa578063cccf7a8e146102bd578063dcb14c2f146102d0578063e4fbf065146102e3578063f2fde38b146102f657600080fd5b80639d2c76b41461023a578063af640d0f1461024d578063b361be4614610264578063b8bc073d14610277578063bf3bf26a1461029757600080fd5b80636b122fe0116100f45780636b122fe0146101d357806375c0669c146101e9578063861eb905146101fc5780638b2829471461021f5780638da5cb5b1461023257600080fd5b80630ff4c9161461013157806330b67baa1461016b57806331b933b9146101965780634cc82215146101ab5780634fef6a38146101c0575b600080fd5b61014461013f366004611069565b610309565b604080518251600390810b8252602093840151900b92810192909252015b60405180910390f35b60005461017e906001600160a01b031681565b6040516001600160a01b039091168152602001610162565b61019e61035c565b6040516101629190611082565b6101be6101b9366004611069565b6103d3565b005b6101be6101ce3660046110c6565b610405565b6101db610481565b604051610162929190611152565b6101be6101f73660046110c6565b6105d7565b61020f61020a3660046110c6565b61064f565b6040519015158152602001610162565b6101be61022d3660046112c2565b6106b3565b61017e6106e7565b6101be6102483660046110c6565b6106f1565b61025660025481565b604051908152602001610162565b61019e610272366004611309565b6107a5565b61028a610285366004611069565b61081e565b6040516101629190611346565b61019e6102a5366004611371565b6108c0565b6101be6102b83660046110c6565b6108ea565b61020f6102cb366004611069565b610963565b6101be6102de36600461138d565b6109d1565b6101be6102f13660046113c9565b6109fa565b6101be6103043660046110c6565b610a3c565b60408051808201909152600080825260208201526000806103298461081e565b80602001905181019061033c919061140b565b60408051808201909152600392830b8152910b6020820152949350505050565b60035460408051631043567360e21b815290516060926001600160a01b03169163410d59cc9160048083019260009291908290030181865afa1580156103a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ce9190810190611445565b905090565b6103dc3361064f565b6103f95760405163203769ed60e11b815260040160405180910390fd5b61040281610a7e565b50565b61040d610ca7565b6001600160a01b0316336001600160a01b03161461043e57604051632f7a8ee160e01b815260040160405180910390fd5b6001600160a01b031660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c90960205260409020805460ff19166001179055565b6040805160028082526060828101909352829190816020015b606081526020019060019003908161049a5750506040805160028082526060820183529294509190602083019080368337019050509050604051806040016040528060058152602001640eed2c8e8d60db1b81525082600081518110610502576105026114eb565b6020026020010181905250600381600081518110610522576105226114eb565b6020026020010190602181111561053b5761053b61113c565b9081602181111561054e5761054e61113c565b81525050604051806040016040528060068152602001651a195a59da1d60d21b81525082600181518110610584576105846114eb565b60200260200101819052506003816001815181106105a4576105a46114eb565b602002602001019060218111156105bd576105bd61113c565b908160218111156105d0576105d061113c565b9052509091565b6105e03361064f565b6105fd5760405163203769ed60e11b815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806106ad57506106986106e7565b6001600160a01b0316826001600160a01b0316145b92915050565b6106bc3361064f565b6106d95760405163203769ed60e11b815260040160405180910390fd5b6106e38282610cd5565b5050565b60006103ce610ca7565b6106f9610ca7565b6001600160a01b0316336001600160a01b03161461072a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f3034770906044015b600060405180830381600087803b15801561078a57600080fd5b505af115801561079e573d6000803e3d6000fd5b5050505050565b6004805482516020840120604051631e5b17a560e21b8152928301526060916001600160a01b039091169063796c5e9490602401600060405180830381865afa1580156107f6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ad9190810190611445565b600081815260016020526040902080546060919061083b90611501565b80601f016020809104026020016040519081016040528092919081815260200182805461086790611501565b80156108b45780601f10610889576101008083540402835291602001916108b4565b820191906000526020600020905b81548152906001019060200180831161089757829003601f168201915b50505050509050919050565b60606106ad826040516020016108d69190611535565b6040516020818303038152906040526107a5565b6108f2610ca7565b6001600160a01b0316336001600160a01b03161461092357604051632f7a8ee160e01b815260040160405180910390fd5b6001600160a01b031660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c90960205260409020805460ff19169055565b600354604051636667bd4760e11b8152600481018390526000916001600160a01b03169063cccf7a8e90602401602060405180830381865afa1580156109ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad9190611567565b6106e382826040516020016109e69190611535565b6040516020818303038152906040526106b3565b604080518082018252600384810b80835284820b602093840190815284519384019190915251900b91810191909152610a379084906060016109e6565b505050565b610a44610ca7565b6001600160a01b0316336001600160a01b031614610a7557604051632f7a8ee160e01b815260040160405180910390fd5b61040281610ecf565b6004546000828152600160205260409081902090516001600160a01b03909216916385edea1391610aae91611589565b60405190819003812060e083901b6001600160e01b03191682526004820152602401602060405180830381865afa158015610aed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1191906115ff565b600003610b1b5750565b6004546000828152600160205260409081902090516001600160a01b0390921691636526db7a91610b4b91611589565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101849052604401600060405180830381600087803b158015610b8e57600080fd5b505af1158015610ba2573d6000803e3d6000fd5b5050600354604051634cc8221560e01b8152600481018590526001600160a01b039091169250634cc822159150602401600060405180830381600087803b158015610bec57600080fd5b505af1158015610c00573d6000803e3d6000fd5b50505050610c0d81610ed8565b60005b6005548110156106e35760058181548110610c2d57610c2d6114eb565b600091825260209091200154604051634cc8221560e01b8152600481018490526001600160a01b0390911690634cc8221590602401600060405180830381600087803b158015610c7c57600080fd5b505af1158015610c90573d6000803e3d6000fd5b505050508080610c9f90611618565b915050610c10565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b600354604051630801f16960e11b8152600481018490526001600160a01b0390911690631003e2d290602401600060405180830381600087803b158015610d1b57600080fd5b505af1158015610d2f573d6000803e3d6000fd5b50506004546000858152600160205260409081902090516001600160a01b039092169350636526db7a9250610d6391611589565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101859052604401600060405180830381600087803b158015610da657600080fd5b505af1158015610dba573d6000803e3d6000fd5b5050600480548451602086012060405163771602f760e01b815292830152602482018690526001600160a01b0316925063771602f79150604401600060405180830381600087803b158015610e0e57600080fd5b505af1158015610e22573d6000803e3d6000fd5b50505050610e308282610f20565b60005b600554811015610a375760058181548110610e5057610e506114eb565b6000918252602090912001546040516242d70760e31b81526001600160a01b0390911690630216b83890610e8a908690869060040161163f565b600060405180830381600087803b158015610ea457600080fd5b505af1158015610eb8573d6000803e3d6000fd5b505050508080610ec790611618565b915050610e33565b61040281610fa1565b6000818152600160205260408120610eef9161101b565b600054604051630de3b7b560e01b8152600481018390526001600160a01b0390911690630de3b7b590602401610770565b6000828152600160205260409020610f38828261169e565b5060005460405163cfd3c57f60e01b81526001600160a01b039091169063cfd3c57f90610f6b908590859060040161163f565b600060405180830381600087803b158015610f8557600080fd5b505af1158015610f99573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b50805461102790611501565b6000825580601f10611037575050565b601f01602090049060005260206000209081019061040291905b808211156110655760008155600101611051565b5090565b60006020828403121561107b57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156110ba5783518352928401929184019160010161109e565b50909695505050505050565b6000602082840312156110d857600080fd5b81356001600160a01b03811681146110ef57600080fd5b9392505050565b6000815180845260005b8181101561111c57602081850181015186830182015201611100565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156111a957605f198887030185526111978683516110f6565b9550938201939082019060010161117b565b50508584038187015286518085528782019482019350915060005b828110156111fe578451602281106111ec57634e487b7160e01b600052602160045260246000fd5b845293810193928101926001016111c4565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561124a5761124a61120b565b604052919050565b600082601f83011261126357600080fd5b813567ffffffffffffffff81111561127d5761127d61120b565b611290601f8201601f1916602001611221565b8181528460208386010111156112a557600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156112d557600080fd5b82359150602083013567ffffffffffffffff8111156112f357600080fd5b6112ff85828601611252565b9150509250929050565b60006020828403121561131b57600080fd5b813567ffffffffffffffff81111561133257600080fd5b61133e84828501611252565b949350505050565b6020815260006110ef60208301846110f6565b60006040828403121561136b57600080fd5b50919050565b60006040828403121561138357600080fd5b6110ef8383611359565b600080606083850312156113a057600080fd5b823591506113b18460208501611359565b90509250929050565b8060030b811461040257600080fd5b6000806000606084860312156113de57600080fd5b8335925060208401356113f0816113ba565b91506040840135611400816113ba565b809150509250925092565b6000806040838503121561141e57600080fd5b8251611429816113ba565b602084015190925061143a816113ba565b809150509250929050565b6000602080838503121561145857600080fd5b825167ffffffffffffffff8082111561147057600080fd5b818501915085601f83011261148457600080fd5b8151818111156114965761149661120b565b8060051b91506114a7848301611221565b81815291830184019184810190888411156114c157600080fd5b938501935b838510156114df578451825293850193908501906114c6565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061151557607f821691505b60208210810361136b57634e487b7160e01b600052602260045260246000fd5b604081018235611544816113ba565b60030b82526020830135611557816113ba565b8060030b60208401525092915050565b60006020828403121561157957600080fd5b815180151581146110ef57600080fd5b600080835461159781611501565b600182811680156115af57600181146115c4576115f3565b60ff19841687528215158302870194506115f3565b8760005260208060002060005b858110156115ea5781548a8201529084019082016115d1565b50505082870194505b50929695505050505050565b60006020828403121561161157600080fd5b5051919050565b60006001820161163857634e487b7160e01b600052601160045260246000fd5b5060010190565b82815260406020820152600061133e60408301846110f6565b601f821115610a3757600081815260208120601f850160051c8101602086101561167f5750805b601f850160051c820191505b81811015610f995782815560010161168b565b815167ffffffffffffffff8111156116b8576116b861120b565b6116cc816116c68454611501565b84611658565b602080601f83116001811461170157600084156116e95750858301515b600019600386901b1c1916600185901b178555610f99565b600085815260208120601f198616915b8281101561173057888601518255948401946001909101908401611711565b508582101561174e5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122032f87722ad8d029c0073d9c90d3ae9eb6c71c5eb7a6907451383ecfe1836998d64736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610621806100a86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e7cb6e11161005b5780638e7cb6e1146100f3578063949d225d1461011d578063cccf7a8e1461012e578063f2fde38b1461015157600080fd5b80631003e2d21461008d578063410d59cc146100a25780634cc82215146100c05780638da5cb5b146100d3575b600080fd5b6100a061009b36600461050b565b610164565b005b6100aa6101ef565b6040516100b79190610524565b60405180910390f35b6100a06100ce36600461050b565b610247565b6100db610374565b6040516001600160a01b0390911681526020016100b7565b61010661010136600461050b565b610383565b6040805192151583526020830191909152016100b7565b6000546040519081526020016100b7565b61014161013c36600461050b565b6103b6565b60405190151581526020016100b7565b6100a061015f366004610568565b610419565b61016c61045b565b6001600160a01b0316336001600160a01b03161461019d57604051632f7a8ee160e01b815260040160405180910390fd5b6101a6816103b6565b6101ec57600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190555b50565b6060600080548060200260200160405190810160405280929190818152602001828054801561023d57602002820191906000526020600020905b815481526020019060010190808311610229575b5050505050905090565b61024f61045b565b6001600160a01b0316336001600160a01b03161461028057604051632f7a8ee160e01b815260040160405180910390fd5b610289816103b6565b156101ec576000805461029e90600190610598565b815481106102ae576102ae6105bf565b906000526020600020015460006001600084815260200190815260200160002054815481106102df576102df6105bf565b60009182526020808320909101929092558281526001918290526040812054815490929190819084908110610316576103166105bf565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061035b5761035b6105d5565b6001900381819060005260206000200160009055905550565b600061037e61045b565b905090565b60008061038f836103b6565b61039e57506000928392509050565b50506000908152600160208190526040909120549091565b6000805481036103c857506000919050565b60008281526001602052604081205490036104045781600080815481106103f1576103f16105bf565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b61042161045b565b6001600160a01b0316336001600160a01b03161461045257604051632f7a8ee160e01b815260040160405180910390fd5b6101ec81610489565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516101ec92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561051d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561055c57835183529284019291840191600101610540565b50909695505050505050565b60006020828403121561057a57600080fd5b81356001600160a01b038116811461059157600080fd5b9392505050565b818103818111156105b957634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212209120bb0a2a9936c2c457117a2d6e08d1b5892ce4c2794940e794c00e17bf899964736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610663806100a86000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806385edea131161005b57806385edea13146100d35780638da5cb5b14610101578063a0265ff814610121578063f2fde38b1461014457600080fd5b80636526db7a14610082578063771602f714610097578063796c5e94146100aa575b600080fd5b610095610090366004610531565b610157565b005b6100956100a5366004610531565b6102bd565b6100bd6100b8366004610553565b61033a565b6040516100ca919061056c565b60405180910390f35b6100f36100e1366004610553565b60009081526020819052604090205490565b6040519081526020016100ca565b61010961039a565b6040516001600160a01b0390911681526020016100ca565b61013461012f366004610531565b6103a9565b60405190151581526020016100ca565b6100956101523660046105b0565b61043c565b61015f610481565b6001600160a01b0316336001600160a01b03161461019057604051632f7a8ee160e01b815260040160405180910390fd5b61019a82826103a9565b156102b957600082815260208190526040902080546101bb906001906105e0565b815481106101cb576101cb610601565b6000918252602080832090910154848352828252604080842060018452818520868652909352909220548154811061020557610205610601565b60009182526020808320909101929092558381526001825260408082208483528084528183205486845283855291832085845293819052835491939092918490811061025357610253610601565b600091825260208083209091015483528281019390935260409182018120939093558483526001825280832084845282528083208390558483529082905290208054806102a2576102a2610617565b600190038181906000526020600020016000905590555b5050565b6102c5610481565b6001600160a01b0316336001600160a01b0316146102f657604051632f7a8ee160e01b815260040160405180910390fd5b61030082826103a9565b6102b95760009182526020828152604080842080546001808552838720868852855292862081905585845291820181558452922090910155565b6000818152602081815260409182902080548351818402810184019094528084526060939283018282801561038e57602002820191906000526020600020905b81548152602001906001019080831161037a575b50505050509050919050565b60006103a4610481565b905090565b60008281526020819052604081205481036103c657506000610436565b60008381526001602090815260408083208584529091528120549003610418576000838152602081905260408120805484929061040557610405610601565b9060005260206000200154149050610436565b50600082815260016020908152604080832084845290915290205415155b92915050565b610444610481565b6001600160a01b0316336001600160a01b03161461047557604051632f7a8ee160e01b815260040160405180910390fd5b61047e816104af565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161047e92849290916001600160a01b038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806040838503121561054457600080fd5b50508035926020909101359150565b60006020828403121561056557600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156105a457835183529284019291840191600101610588565b50909695505050505050565b6000602082840312156105c257600080fd5b81356001600160a01b03811681146105d957600080fd5b9392505050565b8181038181111561043657634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212204fe0e51f850fe860844b3ef4690dbe2f4106d195a4c983b0ea09e2b1f7ab027564736f6c634300081300338a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460";

type DimensionsComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DimensionsComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DimensionsComponent__factory extends ContractFactory {
  constructor(...args: DimensionsComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DimensionsComponent> {
    return super.deploy(world, overrides || {}) as Promise<DimensionsComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): DimensionsComponent {
    return super.attach(address) as DimensionsComponent;
  }
  override connect(signer: Signer): DimensionsComponent__factory {
    return super.connect(signer) as DimensionsComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DimensionsComponentInterface {
    return new utils.Interface(_abi) as DimensionsComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DimensionsComponent {
    return new Contract(address, _abi, signerOrProvider) as DimensionsComponent;
  }
}
