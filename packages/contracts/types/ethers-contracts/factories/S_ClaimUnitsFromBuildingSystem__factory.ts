/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_ClaimUnitsFromBuildingSystem,
  S_ClaimUnitsFromBuildingSystemInterface,
} from "../S_ClaimUnitsFromBuildingSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "buildingEntity",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002048380380620020488339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b611df280620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780636ad0ccab1461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004611940565b6100cf565b60405161007191906119f3565b60405180910390f35b610064610088366004611a81565b610302565b61009561034e565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611aad565b610393565b005b6060600080838060200190518101906100e89190611ad1565b915091506101a6600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561015c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101809190611aff565b7f4a74b7250a871619ca8aed2448378dc66f44f082f024aff856f74c9a5b25587061040f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806101f457503373ffffffffffffffffffffffffffffffffffffffff8316145b6102d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526064602482018190527f535f436c61696d556e69747346726f6d4275696c64696e6753797374656d3a2060448301527f4f6e6c7920547261696e556e69747353797374656d2c206f722074686520706c908201527f61796572207468656d73656c662063616e2063616c6c20746869732066756e6360848201527f74696f6e0000000000000000000000000000000000000000000000000000000060a482015260c4015b60405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff838116916102fa9116838361055b565b505050919050565b6040805173ffffffffffffffffffffffffffffffffffffffff841660208201529081018290526060906103459082016040516020818303038152906040526100cf565b90505b92915050565b600061038e7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610403576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040c81610d7f565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa15801561047f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104c59190810190611b1c565b90508051600003610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102c9565b6105538160008151811061054857610548611bc2565b602002602001015190565b949350505050565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527f5b9d688a4f4d7f660846f39f20b66c2b0fe7a6e38d8e4ad354c58102d0fb9345600482015260009073ffffffffffffffffffffffffffffffffffffffff851690634f27da1890602401602060405180830381865afa1580156105e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060c9190611aff565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527fe95fc307e3922a4ed7e1a9d135b2e79aad91e806428d8c7ec9a376dfc8aede5e600482015290915060009073ffffffffffffffffffffffffffffffffffffffff861690634f27da1890602401602060405180830381865afa15801561069c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c09190611aff565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527f8bd637b568ed540cabc10b49a9f3688fe5b7e4b706298b6cd07c2e1ed5600e93600482015290915060009073ffffffffffffffffffffffffffffffffffffffff871690634f27da1890602401602060405180830381865afa158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107749190611aff565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527fbc8e22f24f6044e355309bd5acf8876066c99bf3cf9d498a4dfea5ebf331f17b600482015290915060009073ffffffffffffffffffffffffffffffffffffffff881690634f27da1890602401602060405180830381865afa158015610804573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108289190611aff565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810188905290915060009073ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa158015610899573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bd9190611bf1565b905060006108cb8389610d88565b90505b8115610d74576040805160208082018b905263ffffffff841682840152825180830384018152606090920190925280519101206000906040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810182905290915060009073ffffffffffffffffffffffffffffffffffffffff891690630ff4c916906024016040805180830381865afa158015610974573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109989190611c2c565b905060006109ac8c8b8d8560000151610eb4565b6040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018d905290915060009073ffffffffffffffffffffffffffffffffffffffff8a1690630ff4c91690602401602060405180830381865afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190611c80565b9050600082610a508343611cc8565b610a5a9190611cdb565b90506000610a9385600001518e604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b905063ffffffff821615610d6457846020015163ffffffff168263ffffffff1610610b5d5784602001519150610ac98f8f6112c1565b6040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810188905290975073ffffffffffffffffffffffffffffffffffffffff8d1690634cc8221590602401600060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b5050505060008763ffffffff16119750610c14565b600097508185602001818151610b739190611d25565b63ffffffff9081169091526040517f95699b3700000000000000000000000000000000000000000000000000000000815260048101899052875160248201526020880151909116604482015273ffffffffffffffffffffffffffffffffffffffff8e1691506395699b3790606401600060405180830381600087803b158015610bfb57600080fd5b505af1158015610c0f573d6000803e3d6000fd5b505050505b73ffffffffffffffffffffffffffffffffffffffff8b16631ab06ee58f610c3b8786611d49565b610c4b9063ffffffff1687611d71565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b158015610ca157600080fd5b505af1158015610cb5573d6000803e3d6000fd5b505050508973ffffffffffffffffffffffffffffffffffffffff1663d923c3c48284610ce18e86610d88565b610ceb9190611d84565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b158015610d4757600080fd5b505af1158015610d5b573d6000803e3d6000fd5b50505050610d69565b600097505b5050505050506108ce565b505050505050505050565b61040c8161159b565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015610df6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1a9190611bf1565b610e25576000610345565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa158015610e90573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103459190611da1565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527fe29f17e890aad3f733af05f51d95e896e530ba6a6878bde036ee1a12583ebd396004820152600090819073ffffffffffffffffffffffffffffffffffffffff871690634f27da1890602401602060405180830381865afa158015610f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f679190611aff565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5600482015290915060009073ffffffffffffffffffffffffffffffffffffffff881690634f27da1890602401602060405180830381865afa158015610ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101b9190611aff565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916866040518263ffffffff1660e01b815260040161105591815260200190565b602060405180830381865afa158015611072573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110969190611c80565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e600482015290915060009073ffffffffffffffffffffffffffffffffffffffff891690634f27da1890602401602060405180830381865afa158015611126573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114a9190611aff565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916876040518263ffffffff1660e01b815260040161118491815260200190565b602060405180830381865afa1580156111a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c59190611da1565b60408051602080820186905263ffffffff841682840152825180830384018152606090920190925280519101209091506000906040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810182905290915060009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa158015611269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128d9190611da1565b905060008161129d8c8c8b611647565b6112a8906064611d49565b6112b29190611cdb565b9b9a5050505050505050505050565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527fbc8e22f24f6044e355309bd5acf8876066c99bf3cf9d498a4dfea5ebf331f17b6004820152600090819073ffffffffffffffffffffffffffffffffffffffff851690634f27da1890602401602060405180830381865afa158015611350573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113749190611aff565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527ff29be3703a45a0eb1de636e3441bf1955765a4209e0846e136e7b5a0940aa959600482015290915060009073ffffffffffffffffffffffffffffffffffffffff861690634f27da1890602401602060405180830381865afa158015611404573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114289190611aff565b905060006114368386610d88565b905060006114448387610d88565b90508063ffffffff168263ffffffff16101561150e5773ffffffffffffffffffffffffffffffffffffffff841663d923c3c487611482856001611d84565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b1580156114de57600080fd5b505af11580156114f2573d6000803e3d6000fd5b505050508160016115039190611d84565b945050505050610348565b6040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff851690634cc8221590602401600060405180830381600087803b15801561157657600080fd5b505af115801561158a573d6000803e3d6000fd5b505050506000945050505050610348565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040517f4f27da180000000000000000000000000000000000000000000000000000000081527f45f3ce6f3efbfa0ea8a5ab8a9d4ba4ecf0a265d8e7752539e5203719012da5f66004820152600090819073ffffffffffffffffffffffffffffffffffffffff861690634f27da1890602401602060405180830381865afa1580156116d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fa9190611aff565b905060006117098686866117d1565b60408051602080820188905263ffffffff841682840152825180830384018152606083019384905280519101207f0ff4c91600000000000000000000000000000000000000000000000000000000909252606481019190915290915073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690608401602060405180830381865afa1580156117a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c79190611da1565b9695505050505050565b6040805160208082018490528183018590528251808303840181526060909201909252805191012060009081906040517f4f27da180000000000000000000000000000000000000000000000000000000081527fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e60048201529091506118b99073ffffffffffffffffffffffffffffffffffffffff871690634f27da1890602401602060405180830381865afa15801561188f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b39190611aff565b82610d88565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611938576119386118c2565b604052919050565b6000602080838503121561195357600080fd5b823567ffffffffffffffff8082111561196b57600080fd5b818501915085601f83011261197f57600080fd5b813581811115611991576119916118c2565b6119c1847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016118f1565b915080825286848285010111156119d757600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b81811015611a2057858101830151858201604001528201611a04565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461040c57600080fd5b60008060408385031215611a9457600080fd5b8235611a9f81611a5f565b946020939093013593505050565b600060208284031215611abf57600080fd5b8135611aca81611a5f565b9392505050565b60008060408385031215611ae457600080fd5b8251611aef81611a5f565b6020939093015192949293505050565b600060208284031215611b1157600080fd5b8151611aca81611a5f565b60006020808385031215611b2f57600080fd5b825167ffffffffffffffff80821115611b4757600080fd5b818501915085601f830112611b5b57600080fd5b815181811115611b6d57611b6d6118c2565b8060051b9150611b7e8483016118f1565b8181529183018401918481019088841115611b9857600080fd5b938501935b83851015611bb657845182529385019390850190611b9d565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611c0357600080fd5b81518015158114611aca57600080fd5b805163ffffffff81168114611c2757600080fd5b919050565b600060408284031215611c3e57600080fd5b6040516040810181811067ffffffffffffffff82111715611c6157611c616118c2565b60405282518152611c7460208401611c13565b60208201529392505050565b600060208284031215611c9257600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561034857610348611c99565b600063ffffffff80841680611d19577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92169190910492915050565b63ffffffff828116828216039080821115611d4257611d42611c99565b5092915050565b63ffffffff818116838216028082169190828114611d6957611d69611c99565b505092915050565b8082018082111561034857610348611c99565b63ffffffff818116838216019080821115611d4257611d42611c99565b600060208284031215611db357600080fd5b61034582611c1356fea26469706673582212209a39e679c89af53c53e43a42f18f7c5b601fbf4dcec8c70f3efb0c1dd4ab2e1c64736f6c63430008130033";

type S_ClaimUnitsFromBuildingSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_ClaimUnitsFromBuildingSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_ClaimUnitsFromBuildingSystem__factory extends ContractFactory {
  constructor(...args: S_ClaimUnitsFromBuildingSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_ClaimUnitsFromBuildingSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_ClaimUnitsFromBuildingSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_ClaimUnitsFromBuildingSystem {
    return super.attach(address) as S_ClaimUnitsFromBuildingSystem;
  }
  override connect(signer: Signer): S_ClaimUnitsFromBuildingSystem__factory {
    return super.connect(signer) as S_ClaimUnitsFromBuildingSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_ClaimUnitsFromBuildingSystemInterface {
    return new utils.Interface(_abi) as S_ClaimUnitsFromBuildingSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_ClaimUnitsFromBuildingSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_ClaimUnitsFromBuildingSystem;
  }
}
