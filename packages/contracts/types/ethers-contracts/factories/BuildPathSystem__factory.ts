/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BuildPathSystem,
  BuildPathSystemInterface,
} from "../BuildPathSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "coordStart",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "coordEnd",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001721380380620017218339810160408190526200003491620001dc565b8181620000413362000149565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200021b565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8680549092161790555050505062000242565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001d957600080fd5b50565b60008060408385031215620001f057600080fd5b8251620001fd81620001c3565b60208401519092506200021081620001c3565b809150509250929050565b6000602082840312156200022e57600080fd5b81516200023b81620001c3565b9392505050565b6114cf80620002526000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063aac25b73146100a7578063f2fde38b146100ba575b600080fd5b61006461005f3660046110e5565b6100cf565b6040516100719190611198565b60405180910390f35b610082610d48565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004611255565b610d8d565b6100cd6100c836600461128a565b610dc2565b005b6060600080838060200190518101906100e891906112fe565b60008054929450909250906101339073ffffffffffffffffffffffffffffffffffffffff167f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b1843106610e3e565b600080549192509061017b9073ffffffffffffffffffffffffffffffffffffffff167f30f1c358b0a577824afcc8e464bcbd763eba254820a547b425765e75cc511f1e610e3e565b60008054919250906101c39073ffffffffffffffffffffffffffffffffffffffff167f0d469bcaf5f43a6290ca2906ecdeb5ef80d7723e8cad27045bddb6e1eb9da435610e3e565b600080549192509061020b9073ffffffffffffffffffffffffffffffffffffffff167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c7540610e3e565b85518751919250600391820b910b1480156102335750846020015160030b866020015160030b145b156102eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5b4275696c645061746853797374656d5d2043616e6e6f74207374617274206160448201527f6e6420656e642070617468206174207468652073616d6520636f6f7264696e6160648201527f7465000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6040517fbf3bf26a00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff86169063bf3bf26a90610340908a9060040161132a565b600060405180830381865afa15801561035d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103a3919081019061134b565b90508051600114610436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f5b4275696c645061746853797374656d5d2043616e6e6f74207374617274207060448201527f61746820617420616e20656d70747920636f6f7264696e61746500000000000060648201526084016102e2565b6040517fbf3bf26a00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff87169063bf3bf26a9061048b908a9060040161132a565b600060405180830381865afa1580156104a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104ee919081019061134b565b90508051600114610581576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f5b4275696c645061746853797374656d5d2043616e6e6f7420656e642070617460448201527f6820617420616e20656d70747920636f6f7264696e617465000000000000000060648201526084016102e2565b60008573ffffffffffffffffffffffffffffffffffffffff16630ff4c916846000815181106105b2576105b26113f1565b60200260200101516040518263ffffffff1660e01b81526004016105d891815260200190565b602060405180830381865afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106199190611420565b90507fa46f07eacbf4d6e00c069dad9b4c9bc8743bfbbc08b881083f59c909623871dd81148061066857507f5dc2e1711c35bb96dbc441e9a8d2ca6965863dde6c810317df7a657d469a7a5381145b61071a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f5b4275696c645061746853797374656d5d2043616e6e6f74207374617274207060448201527f6174682061742061206e6f6e2d737570706f727465642074696c652028436f6e60648201527f7665796f722c204e6f6465290000000000000000000000000000000000000000608482015260a4016102e2565b60008673ffffffffffffffffffffffffffffffffffffffff16630ff4c9168460008151811061074b5761074b6113f1565b60200260200101516040518263ffffffff1660e01b815260040161077191815260200190565b602060405180830381865afa15801561078e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b29190611420565b90507fa46f07eacbf4d6e00c069dad9b4c9bc8743bfbbc08b881083f59c909623871dd81148061080157507f5dc2e1711c35bb96dbc441e9a8d2ca6965863dde6c810317df7a657d469a7a5381145b6108b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f5b4275696c645061746853797374656d5d2043616e6e6f7420656e642070617460448201527f682061742061206e6f6e2d737570706f727465642074696c652028436f6e766560648201527f796f722c204e6f64652900000000000000000000000000000000000000000000608482015260a4016102e2565b60008573ffffffffffffffffffffffffffffffffffffffff16630ff4c916866000815181106108e4576108e46113f1565b60200260200101516040518263ffffffff1660e01b815260040161090a91815260200190565b602060405180830381865afa158015610927573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094b9190611420565b90503381146109dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f5b4275696c645061746853797374656d5d2043616e6e6f74207374617274207060448201527f61746820617420612074696c6520796f7520646f206e6f74206f776e0000000060648201526084016102e2565b60008673ffffffffffffffffffffffffffffffffffffffff16630ff4c91686600081518110610a0d57610a0d6113f1565b60200260200101516040518263ffffffff1660e01b8152600401610a3391815260200190565b602060405180830381865afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a749190611420565b9050338114610b05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f5b4275696c645061746853797374656d5d2043616e6e6f7420656e642070617460448201527f6820617420612074696c6520796f7520646f206e6f74206f776e00000000000060648201526084016102e2565b8773ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e87600081518110610b3457610b346113f1565b60200260200101516040518263ffffffff1660e01b8152600401610b5a91815260200190565b602060405180830381865afa158015610b77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9b9190611439565b15610c4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526044602482018190527f5b4275696c645061746853797374656d5d2043616e6e6f74207374617274206d908201527f6f7265207468616e206f6e6520706174682066726f6d207468652073616d652060648201527f74696c6500000000000000000000000000000000000000000000000000000000608482015260a4016102e2565b8773ffffffffffffffffffffffffffffffffffffffff16631ab06ee587600081518110610c7e57610c7e6113f1565b602002602001015187600081518110610c9957610c996113f1565b60200260200101516040518363ffffffff1660e01b8152600401610cc7929190918252602082015260400190565b600060405180830381600087803b158015610ce157600080fd5b505af1158015610cf5573d6000803e3d6000fd5b5050505085600081518110610d0c57610d0c6113f1565b6020026020010151604051602001610d2691815260200190565b6040516020818303038152906040529c50505050505050505050505050919050565b6000610d887f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6060610db98383604051602001610da592919061145b565b6040516020818303038152906040526100cf565b90505b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610e32576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e3b81610f8a565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610eae573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ef4919081019061134b565b90508051600003610f61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102e2565b610f8281600081518110610f7757610f776113f1565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610e3b928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156110905761109061103e565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156110dd576110dd61103e565b604052919050565b600060208083850312156110f857600080fd5b823567ffffffffffffffff8082111561111057600080fd5b818501915085601f83011261112457600080fd5b8135818111156111365761113661103e565b611166847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611096565b9150808252868482850101111561117c57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156111c5578581018301518582016040015282016111a9565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b8060030b8114610e3b57600080fd5b60006040828403121561122557600080fd5b61122d61106d565b9050813561123a81611204565b8152602082013561124a81611204565b602082015292915050565b6000806080838503121561126857600080fd5b6112728484611213565b91506112818460408501611213565b90509250929050565b60006020828403121561129c57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146112c057600080fd5b9392505050565b6000604082840312156112d957600080fd5b6112e161106d565b905081516112ee81611204565b8152602082015161124a81611204565b6000806080838503121561131157600080fd5b61131b84846112c7565b915061128184604085016112c7565b60408101610dbc8284805160030b8252602081015160030b60208301525050565b6000602080838503121561135e57600080fd5b825167ffffffffffffffff8082111561137657600080fd5b818501915085601f83011261138a57600080fd5b81518181111561139c5761139c61103e565b8060051b91506113ad848301611096565b81815291830184019184810190888411156113c757600080fd5b938501935b838510156113e5578451825293850193908501906113cc565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561143257600080fd5b5051919050565b60006020828403121561144b57600080fd5b815180151581146112c057600080fd5b6080810161147c8285805160030b8252602081015160030b60208301525050565b8251600390810b60408401526020840151900b60608301526112c056fea2646970667358221220e3b58bf370bb96a2e976946b418e561e8b560956dda36edcc6d6ac3be04ca8b964736f6c63430008130033";

type BuildPathSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuildPathSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuildPathSystem__factory extends ContractFactory {
  constructor(...args: BuildPathSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BuildPathSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<BuildPathSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): BuildPathSystem {
    return super.attach(address) as BuildPathSystem;
  }
  override connect(signer: Signer): BuildPathSystem__factory {
    return super.connect(signer) as BuildPathSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuildPathSystemInterface {
    return new utils.Interface(_abi) as BuildPathSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BuildPathSystem {
    return new Contract(address, _abi, signerOrProvider) as BuildPathSystem;
  }
}
