/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BuildPathSystem,
  BuildPathSystemInterface,
} from "../BuildPathSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "coordStart",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "coordEnd",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bbf38038062001bbf8339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b61196980620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063aac25b73146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004611479565b6100cf565b604051610071919061151d565b60405180910390f35b610082610caa565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b53660046115bf565b610cef565b6100cd6100c8366004611616565b610d22565b005b6060600080838060200190518101906100e8919061166a565b91509150806000015160030b826000015160030b1480156101165750806020015160030b826020015160030b145b156101ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5b4275696c645061746853797374656d5d2043616e6e6f74207374617274206160448201527f6e6420656e642070617468206174207468652073616d6520636f6f7264696e6160648201527f7465000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b60006101d983610d9e565b905060006101e683610d9e565b90506101f28282610f5e565b61027e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f5b4275696c645061746853797374656d5d2043616e6e6f74206275696c64207060448201527f617468206f6e20756e6f776e65642074696c657300000000000000000000000060648201526084016101c5565b6102a77f0d469bcaf5f43a6290ca2906ecdeb5ef80d7723e8cad27045bddb6e1eb9da4356110d7565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e836040518263ffffffff1660e01b81526004016102e191815260200190565b602060405180830381865afa1580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103229190611696565b156103d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f5b4275696c645061746853797374656d5d2043616e6e6f74207374617274206d60448201527f6f7265207468616e206f6e6520706174682066726f6d207468652073616d652060648201527f6275696c64696e67000000000000000000000000000000000000000000000000608482015260a4016101c5565b600080546104199073ffffffffffffffffffffffffffffffffffffffff167f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5611101565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa15801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae91906116b8565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa15801561051f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054391906116b8565b600080549192509061063e9084906105919073ffffffffffffffffffffffffffffffffffffffff167fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e611101565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916896040518263ffffffff1660e01b81526004016105cb91815260200190565b602060405180830381865afa1580156105e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060c91906116d1565b63ffffffff16604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6000549091506106849073ffffffffffffffffffffffffffffffffffffffff167f3dfdde75f9971afc18a000a5725bade43b0032029a6a77c9c8039c28ed5ff0d0611101565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e826040518263ffffffff1660e01b81526004016106be91815260200190565b602060405180830381865afa1580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff9190611696565b15610969577f2e6aeb9730616b6b2a8fcc7abab3fc9310bd984b40af25951e4bdc63a056b92d82016108ae57600154604080517f0d59332e00000000000000000000000000000000000000000000000000000000815290516107e69273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa15801561079c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c091906116f7565b7f4e09ef1c8459dfdb5bb8d7053cf6c18f5312f6a577e8f2afb36eb92db848dd5d611101565b6040517fed08141e000000000000000000000000000000000000000000000000000000008152336004820152602481018890526044810187905273ffffffffffffffffffffffffffffffffffffffff919091169063ed08141e906064016000604051808303816000875af1158015610862573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108a89190810190611714565b50610c80565b600154604080517f0d59332e00000000000000000000000000000000000000000000000000000000815290516107e69273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa15801561091f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094391906116f7565b7f585dc0687dfe17a75a34465523f2663303dafb61501c4a1aba14b65da49f3323611101565b6000546109ac9073ffffffffffffffffffffffffffffffffffffffff167fb17845266e19660bccbe7b1d92254a9fba6cae97921ff171fa1859c50a7f07b1611101565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e826040518263ffffffff1660e01b81526004016109e691815260200190565b602060405180830381865afa158015610a03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a279190611696565b15610c80577fd1951468cf9e9494d5703385454c036cef4267b4bf50da6ae1b4239c5fa946d38214610b01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152605660248201527f5b4275696c645061746853797374656d5d2043616e6e6f74206275696c64207060448201527f6174682066726f6d206120666163746f727920746f20616e79206275696c646960648201527f6e67206f74686572207468656e204d61696e4261736500000000000000000000608482015260a4016101c5565b600154604080517f0d59332e0000000000000000000000000000000000000000000000000000000081529051610bbc9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9691906116f7565b7f1884b69d0fe22df19a29cf51f7c22952ebb61f30fcaa5cb7a127f266d61d4cef611101565b6040517fed08141e000000000000000000000000000000000000000000000000000000008152336004820152602481018890526044810187905273ffffffffffffffffffffffffffffffffffffffff919091169063ed08141e906064016000604051808303816000875af1158015610c38573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c7e9190810190611714565b505b60408051602081018890520160405160208183030381529060405298505050505050505050919050565b6000610cea7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6060610d1b8383604051602001610d0792919061178b565b6040516020818303038152906040526100cf565b9392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d92576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d9b81611245565b50565b600080548190610de49073ffffffffffffffffffffffffffffffffffffffff167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c7540611101565b90506000610e27846040518060400160405280600d81526020017f6275696c64696e672e74696c650000000000000000000000000000000000000081525061124e565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905290915073ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa158015610e95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb99190611696565b610ec7575060009392505050565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa158015610f32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5691906116b8565b949350505050565b600080548190610fa49073ffffffffffffffffffffffffffffffffffffffff167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c7540611101565b9050336040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa158015611012573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103691906116b8565b148015610f565750336040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa1580156110aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ce91906116b8565b14949350505050565b600080546110fb9073ffffffffffffffffffffffffffffffffffffffff1683611101565b92915050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015611171573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526111b791908101906117c9565b90508051600003611224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016101c5565b610f568160008151811061123a5761123a61186f565b602002602001015190565b610d9b816112e0565b6000826000015160e01b836020015160e01b8361126a9061189e565b604080517fffffffff0000000000000000000000000000000000000000000000000000000094851660208201529390921660248401527fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016602883015201604051602081830303815290604052610d1b906118ee565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156113de576113de61138c565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561142b5761142b61138c565b604052919050565b600067ffffffffffffffff82111561144d5761144d61138c565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561148b57600080fd5b813567ffffffffffffffff8111156114a257600080fd5b8201601f810184136114b357600080fd5b80356114c66114c182611433565b6113e4565b8181528560208385010111156114db57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156115145781810151838201526020016114fc565b50506000910152565b602081526000825180602084015261153c8160408501602087016114f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b8060030b8114610d9b57600080fd5b60006040828403121561158f57600080fd5b6115976113bb565b905081356115a48161156e565b815260208201356115b48161156e565b602082015292915050565b600080608083850312156115d257600080fd5b6115dc848461157d565b91506115eb846040850161157d565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff81168114610d9b57600080fd5b60006020828403121561162857600080fd5b8135610d1b816115f4565b60006040828403121561164557600080fd5b61164d6113bb565b9050815161165a8161156e565b815260208201516115b48161156e565b6000806080838503121561167d57600080fd5b6116878484611633565b91506115eb8460408501611633565b6000602082840312156116a857600080fd5b81518015158114610d1b57600080fd5b6000602082840312156116ca57600080fd5b5051919050565b6000602082840312156116e357600080fd5b815163ffffffff81168114610d1b57600080fd5b60006020828403121561170957600080fd5b8151610d1b816115f4565b60006020828403121561172657600080fd5b815167ffffffffffffffff81111561173d57600080fd5b8201601f8101841361174e57600080fd5b805161175c6114c182611433565b81815285602083850101111561177157600080fd5b6117828260208301602086016114f9565b95945050505050565b608081016117ac8285805160030b8252602081015160030b60208301525050565b8251600390810b60408401526020840151900b6060830152610d1b565b600060208083850312156117dc57600080fd5b825167ffffffffffffffff808211156117f457600080fd5b818501915085601f83011261180857600080fd5b81518181111561181a5761181a61138c565b8060051b915061182b8483016113e4565b818152918301840191848101908884111561184557600080fd5b938501935b838510156118635784518252938501939085019061184a565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815160208301517fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000808216935060188310156118e65780818460180360031b1b83161693505b505050919050565b8051602080830151919081101561192d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160200360031b1b821691505b5091905056fea2646970667358221220551b64df59a772f565f7b1157bf94b41da40567879b66d682123c7bcabe7aa6764736f6c63430008130033";

type BuildPathSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuildPathSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuildPathSystem__factory extends ContractFactory {
  constructor(...args: BuildPathSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BuildPathSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<BuildPathSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): BuildPathSystem {
    return super.attach(address) as BuildPathSystem;
  }
  override connect(signer: Signer): BuildPathSystem__factory {
    return super.connect(signer) as BuildPathSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuildPathSystemInterface {
    return new utils.Interface(_abi) as BuildPathSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BuildPathSystem {
    return new Contract(address, _abi, signerOrProvider) as BuildPathSystem;
  }
}
