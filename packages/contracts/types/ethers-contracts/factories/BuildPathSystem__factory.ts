/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BuildPathSystem,
  BuildPathSystemInterface,
} from "../BuildPathSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "parent",
            type: "uint256",
          },
        ],
        internalType: "struct Coord",
        name: "coordStart",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
          {
            internalType: "uint256",
            name: "parent",
            type: "uint256",
          },
        ],
        internalType: "struct Coord",
        name: "coordEnd",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001dee38038062001dee8339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b611b9880620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806331b20e7a1461007a5780638da5cb5b1461008d578063f2fde38b146100ad575b600080fd5b61006461005f366004611556565b6100c2565b60405161007191906115fa565b60405180910390f35b61006461008836600461168a565b610910565b610095610945565b6040516001600160a01b039091168152602001610071565b6100c06100bb3660046116d4565b61097d565b005b6060600080838060200190518101906100db9190611746565b91509150806000015160030b826000015160030b1480156101095750806020015160030b826020015160030b145b1561018c5760405162461bcd60e51b815260206004820152604260248201527f5b4275696c645061746853797374656d5d2043616e6e6f74207374617274206160448201527f6e6420656e642070617468206174207468652073616d6520636f6f7264696e61606482015261746560f01b608482015260a4015b60405180910390fd5b6000610197836109d3565b905060006101a4836109d3565b90506101b08282610b2a565b6102195760405162461bcd60e51b815260206004820152603460248201527f5b4275696c645061746853797374656d5d2043616e6e6f74206275696c642070604482015273617468206f6e20756e6f776e65642074696c657360601b6064820152608401610183565b6102427f0d469bcaf5f43a6290ca2906ecdeb5ef80d7723e8cad27045bddb6e1eb9da435610d2c565b6001600160a01b031663cccf7a8e836040518263ffffffff1660e01b815260040161026f91815260200190565b602060405180830381865afa15801561028c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b09190611772565b156103345760405162461bcd60e51b815260206004820152604860248201527f5b4275696c645061746853797374656d5d2043616e6e6f74207374617274206d60448201527f6f7265207468616e206f6e6520706174682066726f6d207468652073616d65206064820152676275696c64696e6760c01b608482015260a401610183565b61033e8282610d43565b6103965760405162461bcd60e51b815260206004820152602360248201527f5b4275696c645061746853797374656d5d2043616e6e6f74206275696c6420706044820152620c2e8d60eb1b6064820152608401610183565b600080546103cd906001600160a01b03167f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c56112e2565b6001600160a01b0316630ff4c916846040518263ffffffff1660e01b81526004016103fa91815260200190565b602060405180830381865afa158015610417573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b9190611794565b60008054919250906104f590839061047c906001600160a01b03167fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e6112e2565b6001600160a01b0316630ff4c916876040518263ffffffff1660e01b81526004016104a991815260200190565b602060405180830381865afa1580156104c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ea91906117c6565b63ffffffff166113bc565b90506105207f0d469bcaf5f43a6290ca2906ecdeb5ef80d7723e8cad27045bddb6e1eb9da435610d2c565b604051631ab06ee560e01b815260048101869052602481018590526001600160a01b039190911690631ab06ee590604401600060405180830381600087803b15801561056b57600080fd5b505af115801561057f573d6000803e3d6000fd5b5050505060006105b17fa9030fd5d2d8df4ef9e9a591c66869629e3031bc7112e7766b55d9f29321005d60001c610d2c565b604051636667bd4760e11b8152600481018690529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa1580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d9190611772565b1561073057600154604080516306ac999760e11b815290516106b7926001600160a01b031691630d59332e9160048083019260209291908290030181865afa15801561066d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069191906117e1565b7fac9642b56338c209f76541aaaff3c4074452a3c14b101c14f80550868ccebebf6112e2565b6001600160a01b03166327b45099338760006040518463ffffffff1660e01b81526004016106e7939291906117fe565b6000604051808303816000875af1158015610706573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072e9190810190611841565b505b600054610766906001600160a01b03167f2444db3b2cf5ba1059ebafe0212ddf405afa28d4ca9f16e72b56afe6e5f673c86112e2565b6001600160a01b031663cccf7a8e836040518263ffffffff1660e01b815260040161079391815260200190565b602060405180830381865afa1580156107b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d49190611772565b156108e757600154604080516306ac999760e11b8152905161086e926001600160a01b031691630d59332e9160048083019260209291908290030181865afa158015610824573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084891906117e1565b7ff2021642afaf65bb89c355c68b4a3fc6356dc9299686fc001113a2e2b7b600a36112e2565b6001600160a01b03166327b45099338760006040518463ffffffff1660e01b815260040161089e939291906117fe565b6000604051808303816000875af11580156108bd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108e59190810190611841565b505b604080516020810187905201604051602081830303815290604052975050505050505050919050565b606061093c83836040516020016109289291906118b8565b6040516020818303038152906040526100c2565b90505b92915050565b60006109787f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031633146109c757604051632f7a8ee160e01b815260040160405180910390fd5b6109d0816113f3565b50565b600080548190610a0c906001600160a01b03167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c75406112e2565b90506000610a3f6040518060400160405280600d81526020016c6275696c64696e672e74696c6560981b815250856113fc565b604051636667bd4760e11b8152600481018290529091506001600160a01b0383169063cccf7a8e90602401602060405180830381865afa158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab9190611772565b610ab9575060009392505050565b6040516307fa648b60e11b8152600481018290526001600160a01b03831690630ff4c91690602401602060405180830381865afa158015610afe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b229190611794565b949350505050565b600080548190610b63906001600160a01b03167faf90be6cd7aa92d6569a9ae629178b74e1b0fbdd1097c27ec1dfffd2dc4c75406112e2565b604051636667bd4760e11b8152600481018690529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa158015610bab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcf9190611772565b8015610c3f5750604051636667bd4760e11b8152600481018490526001600160a01b0382169063cccf7a8e90602401602060405180830381865afa158015610c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3f9190611772565b8015610cb25750336040516307fa648b60e11b8152600481018690526001600160a01b03831690630ff4c91690602401602060405180830381865afa158015610c8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb09190611794565b145b8015610b225750336040516307fa648b60e11b8152600481018590526001600160a01b03831690630ff4c91690602401602060405180830381865afa158015610cff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d239190611794565b14949350505050565b6000805461093f906001600160a01b0316836112e2565b600080610d6f7fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e610d2c565b90506000610d9c7f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5610d2c565b90506000610e3f826001600160a01b0316630ff4c916886040518263ffffffff1660e01b8152600401610dd191815260200190565b602060405180830381865afa158015610dee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e129190611794565b6040516307fa648b60e11b8152600481018990526001600160a01b03861690630ff4c916906024016104a9565b90506000610e6c7f2444db3b2cf5ba1059ebafe0212ddf405afa28d4ca9f16e72b56afe6e5f673c8610d2c565b604051636667bd4760e11b8152600481018490529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa158015610eb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed89190611772565b610ee957600094505050505061093f565b6040516307fa648b60e11b8152600481018790527fd1951468cf9e9494d5703385454c036cef4267b4bf50da6ae1b4239c5fa946d3906001600160a01b03851690630ff4c91690602401602060405180830381865afa158015610f50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f749190611794565b03610f8657600194505050505061093f565b6040516307fa648b60e11b815260048101879052600090611023906001600160a01b03861690630ff4c91690602401602060405180830381865afa158015610fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff69190611794565b6040516307fa648b60e11b8152600481018a90526001600160a01b03881690630ff4c916906024016104a9565b905060006110507fa9030fd5d2d8df4ef9e9a591c66869629e3031bc7112e7766b55d9f29321005d610d2c565b604051636667bd4760e11b8152600481018490529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa158015611098573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bc9190611772565b6110cf576000965050505050505061093f565b60006110fa7fcd21223913df34354e53714bb49095fd4d6a8c8d2ac1fe38f8a14e9fd673e77c610d2c565b604051636667bd4760e11b8152600481018b90529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa158015611142573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111669190611772565b1561117b57600097505050505050505061093f565b6040516307fa648b60e11b8152600481018a90526000906001600160a01b03841690630ff4c91690602401600060405180830381865afa1580156111c3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111eb9190810190611994565b905060005b8160200151518110156112d0576040516307fa648b60e11b8152600481018890526001600160a01b03871690630ff4c916906024016040805180830381865afa158015611241573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112659190611a84565b51825180518390811061127a5761127a611aba565b6020026020010151036112be5760008260200151828151811061129f5761129f611aba565b602002602001015163ffffffff1611995050505050505050505061093f565b806112c881611ad0565b9150506111f0565b5060009b9a5050505050505050505050565b604051637defd0f560e11b81526004810182905260009081906001600160a01b0385169063fbdfa1ea90602401600060405180830381865afa15801561132c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113549190810190611af7565b9050805160000361139b5760405162461bcd60e51b81526020600482015260116024820152701a59081b9bdd081c9959da5cdd195c9959607a1b6044820152606401610183565b610b22816000815181106113b1576113b1611aba565b602002602001015190565b60408051602081018490529081018290526000906060015b60408051601f1981840301815291905280516020909101209392505050565b6109d081611421565b6000828260000151836020015184604001516040516020016113d49493929190611b2c565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156114d4576114d461149b565b60405290565b6040805190810167ffffffffffffffff811182821017156114d4576114d461149b565b604051601f8201601f1916810167ffffffffffffffff811182821017156115265761152661149b565b604052919050565b600067ffffffffffffffff8211156115485761154861149b565b50601f01601f191660200190565b60006020828403121561156857600080fd5b813567ffffffffffffffff81111561157f57600080fd5b8201601f8101841361159057600080fd5b80356115a361159e8261152e565b6114fd565b8181528560208385010111156115b857600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156115f15781810151838201526020016115d9565b50506000910152565b60208152600082518060208401526116198160408501602087016115d6565b601f01601f19169190910160400192915050565b8060030b81146109d057600080fd5b60006060828403121561164e57600080fd5b6116566114b1565b905081356116638161162d565b815260208201356116738161162d565b806020830152506040820135604082015292915050565b60008060c0838503121561169d57600080fd5b6116a7848461163c565b91506116b6846060850161163c565b90509250929050565b6001600160a01b03811681146109d057600080fd5b6000602082840312156116e657600080fd5b81356116f1816116bf565b9392505050565b60006060828403121561170a57600080fd5b6117126114b1565b9050815161171f8161162d565b8152602082015161172f8161162d565b806020830152506040820151604082015292915050565b60008060c0838503121561175957600080fd5b61176384846116f8565b91506116b684606085016116f8565b60006020828403121561178457600080fd5b815180151581146116f157600080fd5b6000602082840312156117a657600080fd5b5051919050565b805163ffffffff811681146117c157600080fd5b919050565b6000602082840312156117d857600080fd5b61093c826117ad565b6000602082840312156117f357600080fd5b81516116f1816116bf565b6001600160a01b038416815260208101839052606081016003831061183357634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b60006020828403121561185357600080fd5b815167ffffffffffffffff81111561186a57600080fd5b8201601f8101841361187b57600080fd5b805161188961159e8261152e565b81815285602083850101111561189e57600080fd5b6118af8260208301602086016115d6565b95945050505050565b60c081016118e38285805160030b8252602081015160030b6020830152604081015160408301525050565b8251600390810b60608401526020840151900b6080830152604083015160a08301526116f1565b600067ffffffffffffffff8211156119245761192461149b565b5060051b60200190565b600082601f83011261193f57600080fd5b8151602061194f61159e8361190a565b82815260059290921b8401810191818101908684111561196e57600080fd5b8286015b848110156119895780518352918301918301611972565b509695505050505050565b600060208083850312156119a757600080fd5b825167ffffffffffffffff808211156119bf57600080fd5b90840190604082870312156119d357600080fd5b6119db6114da565b8251828111156119ea57600080fd5b6119f68882860161192e565b8252508383015182811115611a0a57600080fd5b80840193505086601f840112611a1f57600080fd5b82519150611a2f61159e8361190a565b82815260059290921b83018401918481019088841115611a4e57600080fd5b938501935b83851015611a7357611a64856117ad565b82529385019390850190611a53565b948201949094529695505050505050565b600060408284031215611a9657600080fd5b611a9e6114da565b82518152611aae602084016117ad565b60208201529392505050565b634e487b7160e01b600052603260045260246000fd5b600060018201611af057634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215611b0957600080fd5b815167ffffffffffffffff811115611b2057600080fd5b610b228482850161192e565b60008551611b3e818460208a016115d6565b60e095861b9201918252509190921b6004820152600881019190915260280191905056fea2646970667358221220d41d92ddf063f1dfec0018bd027c67e3acf4ae2d9d9af32ebe29e6f08593abfa64736f6c63430008130033";

type BuildPathSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuildPathSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuildPathSystem__factory extends ContractFactory {
  constructor(...args: BuildPathSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BuildPathSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<BuildPathSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): BuildPathSystem {
    return super.attach(address) as BuildPathSystem;
  }
  override connect(signer: Signer): BuildPathSystem__factory {
    return super.connect(signer) as BuildPathSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuildPathSystemInterface {
    return new utils.Interface(_abi) as BuildPathSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BuildPathSystem {
    return new Contract(address, _abi, signerOrProvider) as BuildPathSystem;
  }
}
