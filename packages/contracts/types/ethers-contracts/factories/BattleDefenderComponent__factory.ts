/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BattleDefenderComponent,
  BattleDefenderComponentInterface,
} from "../BattleDefenderComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "participantEntity",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "unitTypes",
            type: "uint256[]",
          },
          {
            internalType: "uint32[]",
            name: "unitLevels",
            type: "uint32[]",
          },
          {
            internalType: "uint32[]",
            name: "unitCounts",
            type: "uint32[]",
          },
        ],
        internalType: "struct BattleParticipant",
        name: "result",
        type: "tuple",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "participantEntity",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "unitTypes",
            type: "uint256[]",
          },
          {
            internalType: "uint32[]",
            name: "unitLevels",
            type: "uint32[]",
          },
          {
            internalType: "uint32[]",
            name: "unitCounts",
            type: "uint32[]",
          },
        ],
        internalType: "struct BattleParticipant",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "indexer",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "participantEntity",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "unitTypes",
            type: "uint256[]",
          },
          {
            internalType: "uint32[]",
            name: "unitLevels",
            type: "uint32[]",
          },
          {
            internalType: "uint32[]",
            name: "unitCounts",
            type: "uint32[]",
          },
        ],
        internalType: "struct BattleParticipant",
        name: "value",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "participantEntity",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "unitTypes",
        type: "uint256[]",
      },
      {
        internalType: "uint32[]",
        name: "unitLevels",
        type: "uint32[]",
      },
      {
        internalType: "uint32[]",
        name: "unitCounts",
        type: "uint32[]",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200381938038062003819833981016040819052620000349162000266565b807ff9768ca34b9927c41f0ddbd0cce635ef12f645937c14ca934428e6a9c05e48da8181818162000065336200012b565b60028190556001600160a01b038216156200008557620000858262000194565b505060405162000095906200024a565b604051809103906000f080158015620000b2573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055604051620000e19062000258565b604051809103906000f080158015620000fe573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b039290921691909117905550620002989350505050565b600080516020620037f983398151915280546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b600080516020620037f9833981519152546001600160a01b03163314620001ce57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200022e57600080fd5b505af115801562000243573d6000803e3d6000fd5b5050505050565b61080880620027a283390190565b61084f8062002faa83390190565b6000602082840312156200027957600080fd5b81516001600160a01b03811681146200029157600080fd5b9392505050565b6124fa80620002a86000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80638b282947116100cd578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e14610319578063cccf7a8e1461032c578063f2fde38b1461033f57600080fd5b8063b361be46146102e6578063b8bc073d146102f957600080fd5b80639161c267116100b25780639161c267146102a95780639d2c76b4146102bc578063af640d0f146102cf57600080fd5b80638b2829471461028e5780638da5cb5b146102a157600080fd5b80635af59b851161012457806375c0669c1161010957806375c0669c14610245578063861eb905146102585780638afaffec1461027b57600080fd5b80635af59b851461021c5780636b122fe01461022f57600080fd5b806331b933b91161015557806331b933b9146101df5780634cc82215146101f45780634fef6a381461020957600080fd5b80630ff4c9161461017157806330b67baa1461019a575b600080fd5b61018461017f3660046116ac565b610352565b6040516101919190611706565b60405180910390f35b6000546101ba9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610191565b6101e76103c7565b60405161019191906117ea565b6102076102023660046116ac565b610482565b005b610207610217366004611804565b6104cd565b61020761022a366004611852565b6105ab565b610237610606565b60405161019192919061192c565b610207610253366004611804565b6108bf565b61026b610266366004611804565b610975565b6040519015158152602001610191565b6101e7610289366004611a1c565b610a00565b61020761029c366004611b65565b610a2a565b6101ba610a73565b6102076102b7366004611c4c565b610ab3565b6102076102ca366004611804565b610ad5565b6102d860025481565b604051908152602001610191565b6101e76102f4366004611d3f565b610bf7565b61030c6103073660046116ac565b610cb4565b6040516101919190611d74565b610207610327366004611804565b610d56565b61026b61033a3660046116ac565b610e31565b61020761034d366004611804565b610ec5565b61037d6040518060800160405280600081526020016060815260200160608152602001606081525090565b60008060008061038c86610cb4565b80602001905181019061039f9190611e46565b6040805160808101825294855260208501939093529183015260608201529695505050505050565b600354604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609273ffffffffffffffffffffffffffffffffffffffff169163410d59cc9160048083019260009291908290030181865afa158015610437573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261047d9190810190611ed8565b905090565b61048b33610975565b6104c1576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104ca81610f3e565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461053d576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6106028282356105be6020850185611f0d565b6105cb6040870187611f0d565b6105d86060890189611f0d565b6040516020016105ee9796959493929190612002565b604051602081830303815290604052610a2a565b5050565b60408051600480825260a08201909252606091829190816020015b606081526020019060019003908161062157505060408051600480825260a08201909252919350602082016080803683370190505090506040518060400160405280601181526020017f7061727469636970616e74456e74697479000000000000000000000000000000815250826000815181106106a1576106a1612052565b6020026020010181905250600d816000815181106106c1576106c1612052565b602002602001019060218111156106da576106da6118fd565b908160218111156106ed576106ed6118fd565b815250506040518060400160405280600981526020017f756e6974547970657300000000000000000000000000000000000000000000008152508260018151811061073a5761073a612052565b6020026020010181905250601f8160018151811061075a5761075a612052565b60200260200101906021811115610773576107736118fd565b90816021811115610786576107866118fd565b815250506040518060400160405280600a81526020017f756e69744c6576656c7300000000000000000000000000000000000000000000815250826002815181106107d3576107d3612052565b6020026020010181905250601c816002815181106107f3576107f3612052565b6020026020010190602181111561080c5761080c6118fd565b9081602181111561081f5761081f6118fd565b815250506040518060400160405280600a81526020017f756e6974436f756e7473000000000000000000000000000000000000000000008152508260038151811061086c5761086c612052565b6020026020010181905250601c8160038151811061088c5761088c612052565b602002602001019060218111156108a5576108a56118fd565b908160218111156108b8576108b86118fd565b9052509091565b6108c833610975565b6108fe576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806109fa57506109cb610a73565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b60606109fa82604051602001610a1691906120e8565b604051602081830303815290604052610bf7565b610a3333610975565b610a69576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61060282826111fd565b600061047d7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b610ace85858585856040516020016105ee9493929190612186565b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b45576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610be357600080fd5b505af1158015610ace573d6000803e3d6000fd5b60048054825160208401206040517f796c5e940000000000000000000000000000000000000000000000000000000081529283015260609173ffffffffffffffffffffffffffffffffffffffff9091169063796c5e9490602401600060405180830381865afa158015610c6e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109fa9190810190611ed8565b6000818152600160205260409020805460609190610cd1906121d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610cfd906121d0565b8015610d4a5780601f10610d1f57610100808354040283529160200191610d4a565b820191906000526020600020905b815481529060010190602001808311610d2d57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610dc6576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6003546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610ea1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa919061221d565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610f35576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104ca81611494565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff909216916385edea1391610f7b9161223f565b60405190819003812060e083901b7fffffffff000000000000000000000000000000000000000000000000000000001682526004820152602401602060405180830381865afa158015610fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff691906122d3565b6000036110005750565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff90921691636526db7a9161103d9161223f565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101849052604401600060405180830381600087803b15801561109857600080fd5b505af11580156110ac573d6000803e3d6000fd5b50506003546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169250634cc822159150602401600060405180830381600087803b15801561111c57600080fd5b505af1158015611130573d6000803e3d6000fd5b5050505061113d8161149d565b60005b600554811015610602576005818154811061115d5761115d612052565b6000918252602090912001546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b1580156111d257600080fd5b505af11580156111e6573d6000803e3d6000fd5b5050505080806111f5906122ec565b915050611140565b6003546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b15801561126957600080fd5b505af115801561127d573d6000803e3d6000fd5b505060045460008581526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff9092169350636526db7a92506112be9161223f565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101859052604401600060405180830381600087803b15801561131957600080fd5b505af115801561132d573d6000803e3d6000fd5b505060048054845160208601206040517f771602f7000000000000000000000000000000000000000000000000000000008152928301526024820186905273ffffffffffffffffffffffffffffffffffffffff16925063771602f79150604401600060405180830381600087803b1580156113a757600080fd5b505af11580156113bb573d6000803e3d6000fd5b505050506113c9828261150b565b60005b60055481101561148f57600581815481106113e9576113e9612052565b6000918252602090912001546040517f0216b83800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630216b8389061144a908690869060040161234b565b600060405180830381600087803b15801561146457600080fd5b505af1158015611478573d6000803e3d6000fd5b505050508080611487906122ec565b9150506113cc565b505050565b6104ca816115b2565b60008181526001602052604081206114b49161165e565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610bc9565b600082815260016020526040902061152382826123aa565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f9061157c908590859060040161234b565b600060405180830381600087803b15801561159657600080fd5b505af11580156115aa573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461166a906121d0565b6000825580601f1061167a575050565b601f0160209004906000526020600020908101906104ca91905b808211156116a85760008155600101611694565b5090565b6000602082840312156116be57600080fd5b5035919050565b600081518084526020808501945080840160005b838110156116fb57815163ffffffff16875295820195908201906001016116d9565b509495945050505050565b60208082528251828201528281015160806040840152805160a0840181905260009291820190839060c08601905b808310156117545783518252928401926001929092019190840190611734565b50604087015193507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092508286820301606087015261179381856116c5565b935050506060850151818584030160808601526117b083826116c5565b9695505050505050565b600081518084526020808501945080840160005b838110156116fb578151875295820195908201906001016117ce565b6020815260006117fd60208301846117ba565b9392505050565b60006020828403121561181657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146117fd57600080fd5b60006080828403121561184c57600080fd5b50919050565b6000806040838503121561186557600080fd5b82359150602083013567ffffffffffffffff81111561188357600080fd5b61188f8582860161183a565b9150509250929050565b6000815180845260005b818110156118bf576020818501810151868301820152016118a3565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156119a1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261198f868351611899565b95509382019390820190600101611955565b50508584038187015286518085528782019482019350915060005b82811015611a0f578451602281106119fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016119bc565b5091979650505050505050565b600060208284031215611a2e57600080fd5b813567ffffffffffffffff811115611a4557600080fd5b611a518482850161183a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611acf57611acf611a59565b604052919050565b600082601f830112611ae857600080fd5b813567ffffffffffffffff811115611b0257611b02611a59565b611b3360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611a88565b818152846020838601011115611b4857600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611b7857600080fd5b82359150602083013567ffffffffffffffff811115611b9657600080fd5b61188f85828601611ad7565b600067ffffffffffffffff821115611bbc57611bbc611a59565b5060051b60200190565b63ffffffff811681146104ca57600080fd5b600082601f830112611be957600080fd5b81356020611bfe611bf983611ba2565b611a88565b82815260059290921b84018101918181019086841115611c1d57600080fd5b8286015b84811015611c41578035611c3481611bc6565b8352918301918301611c21565b509695505050505050565b600080600080600060a08688031215611c6457600080fd5b853594506020808701359450604087013567ffffffffffffffff80821115611c8b57600080fd5b818901915089601f830112611c9f57600080fd5b8135611cad611bf982611ba2565b81815260059190911b8301840190848101908c831115611ccc57600080fd5b938501935b82851015611cea57843582529385019390850190611cd1565b975050506060890135925080831115611d0257600080fd5b611d0e8a848b01611bd8565b94506080890135925080831115611d2457600080fd5b5050611d3288828901611bd8565b9150509295509295909350565b600060208284031215611d5157600080fd5b813567ffffffffffffffff811115611d6857600080fd5b611a5184828501611ad7565b6020815260006117fd6020830184611899565b600082601f830112611d9857600080fd5b81516020611da8611bf983611ba2565b82815260059290921b84018101918181019086841115611dc757600080fd5b8286015b84811015611c415780518352918301918301611dcb565b600082601f830112611df357600080fd5b81516020611e03611bf983611ba2565b82815260059290921b84018101918181019086841115611e2257600080fd5b8286015b84811015611c41578051611e3981611bc6565b8352918301918301611e26565b60008060008060808587031215611e5c57600080fd5b84519350602085015167ffffffffffffffff80821115611e7b57600080fd5b611e8788838901611d87565b94506040870151915080821115611e9d57600080fd5b611ea988838901611de2565b93506060870151915080821115611ebf57600080fd5b50611ecc87828801611de2565b91505092959194509250565b600060208284031215611eea57600080fd5b815167ffffffffffffffff811115611f0157600080fd5b611a5184828501611d87565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611f4257600080fd5b83018035915067ffffffffffffffff821115611f5d57600080fd5b6020019150600581901b3603821315611f7557600080fd5b9250929050565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611fae57600080fd5b8260051b80836020870137939093016020019392505050565b8183526000602080850194508260005b858110156116fb578135611fea81611bc6565b63ffffffff1687529582019590820190600101611fd7565b87815260806020820152600061201c60808301888a611f7c565b828103604084015261202f818789611fc7565b90508281036060840152612044818587611fc7565b9a9950505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126120b657600080fd5b830160208101925035905067ffffffffffffffff8111156120d657600080fd5b8060051b3603821315611f7557600080fd5b602081528135602082015260006121026020840184612081565b6080604085015261211760a085018284611f7c565b9150506121276040850185612081565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08086850301606087015261215d848385611fc7565b935061216c6060880188612081565b9350915080868503016080870152506117b0838383611fc7565b84815260806020820152600061219f60808301866117ba565b82810360408401526121b181866116c5565b905082810360608401526121c581856116c5565b979650505050505050565b600181811c908216806121e457607f821691505b60208210810361184c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006020828403121561222f57600080fd5b815180151581146117fd57600080fd5b600080835461224d816121d0565b600182811680156122655760018114612298576122c7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00841687528215158302870194506122c7565b8760005260208060002060005b858110156122be5781548a8201529084019082016122a5565b50505082870194505b50929695505050505050565b6000602082840312156122e557600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612344577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b828152604060208201526000611a516040830184611899565b601f82111561148f57600081815260208120601f850160051c8101602086101561238b5750805b601f850160051c820191505b818110156115aa57828155600101612397565b815167ffffffffffffffff8111156123c4576123c4611a59565b6123d8816123d284546121d0565b84612364565b602080601f83116001811461242b57600084156123f55750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556115aa565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561247857888601518255948401946001909101908401612459565b50858210156124b457878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220dde27cee0489e38a67bfc38bd50838a93ee48e8a01f1cf58577b1d67da1604bd64736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b610760806100a86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e7cb6e11161005b5780638e7cb6e114610100578063949d225d1461012a578063cccf7a8e1461013b578063f2fde38b1461015e57600080fd5b80631003e2d21461008d578063410d59cc146100a25780634cc82215146100c05780638da5cb5b146100d3575b600080fd5b6100a061009b3660046105f2565b610171565b005b6100aa610233565b6040516100b7919061060b565b60405180910390f35b6100a06100ce3660046105f2565b61028b565b6100db6103ef565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b7565b61011361010e3660046105f2565b610434565b6040805192151583526020830191909152016100b7565b6000546040519081526020016100b7565b61014e6101493660046105f2565b610467565b60405190151581526020016100b7565b6100a061016c36600461064f565b6104ca565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101e1576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101ea81610467565b61023057600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190555b50565b6060600080548060200260200160405190810160405280929190818152602001828054801561028157602002820191906000526020600020905b81548152602001906001019080831161026d575b5050505050905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146102fb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61030481610467565b1561023057600080546103199060019061068c565b81548110610329576103296106cc565b9060005260206000200154600060016000848152602001908152602001600020548154811061035a5761035a6106cc565b60009182526020808320909101929092558281526001918290526040812054815490929190819084908110610391576103916106cc565b9060005260206000200154815260200190815260200160002081905550600160008281526020019081526020016000206000905560008054806103d6576103d66106fb565b6001900381819060005260206000200160009055905550565b600061042f7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60008061044083610467565b61044f57506000928392509050565b50506000908152600160208190526040909120549091565b60008054810361047957506000919050565b60008281526001602052604081205490036104b55781600080815481106104a2576104a26106cc565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461053a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610230817f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610230928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006020828403121561060457600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561064357835183529284019291840191600101610627565b50909695505050505050565b60006020828403121561066157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461068557600080fd5b9392505050565b818103818111156106c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220bfd042d84a524c42a64cd44b304d07bf4ce6b7ea41aaf01f67737f7991b4afae64736f6c63430008130033608060405234801561001057600080fd5b5061001a3361001f565b610099565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6107a7806100a86000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806385edea131161005b57806385edea13146100d35780638da5cb5b14610101578063a0265ff81461012e578063f2fde38b1461015157600080fd5b80636526db7a14610082578063771602f714610097578063796c5e94146100aa575b600080fd5b61009561009036600461061d565b610164565b005b6100956100a536600461061d565b610301565b6100bd6100b836600461063f565b6103b5565b6040516100ca9190610658565b60405180910390f35b6100f36100e136600461063f565b60009081526020819052604090205490565b6040519081526020016100ca565b610109610415565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ca565b61014161013c36600461061d565b61045a565b60405190151581526020016100ca565b61009561015f36600461069c565b6104ed565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101d4576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101de828261045a565b156102fd57600082815260208190526040902080546101ff906001906106d9565b8154811061020f5761020f610713565b6000918252602080832090910154848352828252604080842060018452818520868652909352909220548154811061024957610249610713565b60009182526020808320909101929092558381526001825260408082208483528084528183205486845283855291832085845293819052835491939092918490811061029757610297610713565b600091825260208083209091015483528281019390935260409182018120939093558483526001825280832084845282528083208390558483529082905290208054806102e6576102e6610742565b600190038181906000526020600020016000905590555b5050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610371576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61037b828261045a565b6102fd5760009182526020828152604080842080546001808552838720868852855292862081905585845291820181558452922090910155565b6000818152602081815260409182902080548351818402810184019094528084526060939283018282801561040957602002820191906000526020600020905b8154815260200190600101908083116103f5575b50505050509050919050565b60006104557f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6000828152602081905260408120548103610477575060006104e7565b600083815260016020908152604080832085845290915281205490036104c957600083815260208190526040812080548492906104b6576104b6610713565b90600052602060002001541490506104e7565b50600082815260016020908152604080832084845290915290205415155b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461055d576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61056681610569565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610566928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000806040838503121561063057600080fd5b50508035926020909101359150565b60006020828403121561065157600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561069057835183529284019291840191600101610674565b50909695505050505050565b6000602082840312156106ae57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106d257600080fd5b9392505050565b818103818111156104e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122031783f3bae06bb93034603764bae05586b28475349f9ab0c55255b41d8bcc3b464736f6c634300081300338a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460";

type BattleDefenderComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BattleDefenderComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BattleDefenderComponent__factory extends ContractFactory {
  constructor(...args: BattleDefenderComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BattleDefenderComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<BattleDefenderComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): BattleDefenderComponent {
    return super.attach(address) as BattleDefenderComponent;
  }
  override connect(signer: Signer): BattleDefenderComponent__factory {
    return super.connect(signer) as BattleDefenderComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BattleDefenderComponentInterface {
    return new utils.Interface(_abi) as BattleDefenderComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BattleDefenderComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BattleDefenderComponent;
  }
}
