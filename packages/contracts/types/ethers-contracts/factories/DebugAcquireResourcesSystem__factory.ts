/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DebugAcquireResourcesSystem,
  DebugAcquireResourcesSystemInterface,
} from "../DebugAcquireResourcesSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "resourceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ec038038062000ec08339810160408190526200003491620001dc565b8181620000413362000149565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200021b565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8680549092161790555050505062000242565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001d957600080fd5b50565b60008060408385031215620001f057600080fd5b8251620001fd81620001c3565b60208401519092506200021081620001c3565b809150509250929050565b6000602082840312156200022e57600080fd5b81516200023b81620001c3565b9392505050565b610c6e80620002526000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063915657fb146100a7578063f2fde38b146100ba575b600080fd5b61006461005f3660046108f9565b6100cf565b60405161007191906109ac565b60405180910390f35b610082610320565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004610a18565b610365565b6100cd6100c8366004610a5c565b6103a1565b005b6060600080838060200190518101906100e89190610a92565b600154919350915061010f9073ffffffffffffffffffffffffffffffffffffffff1661041d565b61017a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f7420696e206465627567206d6f646500000000000000000000000000000060448201526064015b60405180910390fd5b600080546101be9073ffffffffffffffffffffffffffffffffffffffff167ffba48a04766694c16713a414735f83be9cb20bbb29b5e18846cc8f151064084561054f565b90503373ffffffffffffffffffffffffffffffffffffffff821663d923c3c461020e8684604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040805160208082018a905281830187905282518083038401815260609092019092528051910120869061024390879061069b565b61024d9190610abe565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b1580156102a957600080fd5b505af11580156102bd573d6000803e3d6000fd5b5050604080516020808201899052818301869052825180830384018152606090920190925280519101206102f4925084915061069b565b6040805163ffffffff909216602083015201604051602081830303815290604052945050505050919050565b60006103607f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b606061039a8383604051602001610386929190918252602082015260400190565b6040516020818303038152906040526100cf565b9392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610411576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61041a816107c7565b50565b60006104b78273ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104919190610b09565b7fc3e18fdee44dca3d8fa1615250f268046d17fbc35f417d176d5c09d7ca8d320261054f565b6040517fcccf7a8e00000000000000000000000000000000000000000000000000000000815261060d600482015273ffffffffffffffffffffffffffffffffffffffff919091169063cccf7a8e90602401602060405180830381865afa158015610525573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105499190610b26565b92915050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156105bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106059190810190610b48565b90508051600003610672576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610171565b6106938160008151811061068857610688610bee565b602002602001015190565b949350505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190610b26565b61073857600061039a565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa1580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039a9190610c1d565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161041a928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156108f1576108f161087b565b604052919050565b6000602080838503121561090c57600080fd5b823567ffffffffffffffff8082111561092457600080fd5b818501915085601f83011261093857600080fd5b81358181111561094a5761094a61087b565b61097a847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016108aa565b9150808252868482850101111561099057600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156109d9578581018301518582016040015282016109bd565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60008060408385031215610a2b57600080fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff8116811461041a57600080fd5b600060208284031215610a6e57600080fd5b813561039a81610a3a565b805163ffffffff81168114610a8d57600080fd5b919050565b60008060408385031215610aa557600080fd5b82519150610ab560208401610a79565b90509250929050565b63ffffffff818116838216019080821115610b02577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5092915050565b600060208284031215610b1b57600080fd5b815161039a81610a3a565b600060208284031215610b3857600080fd5b8151801515811461039a57600080fd5b60006020808385031215610b5b57600080fd5b825167ffffffffffffffff80821115610b7357600080fd5b818501915085601f830112610b8757600080fd5b815181811115610b9957610b9961087b565b8060051b9150610baa8483016108aa565b8181529183018401918481019088841115610bc457600080fd5b938501935b83851015610be257845182529385019390850190610bc9565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610c2f57600080fd5b61039a82610a7956fea264697066735822122040c7d00837ed1017d2e739a470901dee12c4b7ebd012d7c1bc3ce07fc33a8d1564736f6c63430008130033";

type DebugAcquireResourcesSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebugAcquireResourcesSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebugAcquireResourcesSystem__factory extends ContractFactory {
  constructor(...args: DebugAcquireResourcesSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DebugAcquireResourcesSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<DebugAcquireResourcesSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): DebugAcquireResourcesSystem {
    return super.attach(address) as DebugAcquireResourcesSystem;
  }
  override connect(signer: Signer): DebugAcquireResourcesSystem__factory {
    return super.connect(signer) as DebugAcquireResourcesSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebugAcquireResourcesSystemInterface {
    return new utils.Interface(_abi) as DebugAcquireResourcesSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DebugAcquireResourcesSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DebugAcquireResourcesSystem;
  }
}
