/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_UpdateUtilityProductionSystem,
  S_UpdateUtilityProductionSystemInterface,
} from "../S_UpdateUtilityProductionSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "buildingEntity",
        type: "uint256",
      },
      {
        internalType: "enum EActionType",
        name: "actionType",
        type: "uint8",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018be380380620018be8339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b61166880620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806327b450991461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004611190565b6100cf565b6040516100719190611243565b60405180910390f35b6100646100883660046112de565b610cf0565b610095610d26565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611320565b610d6b565b005b606061018b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610141573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610165919061133d565b7f57247228bbd93ac6953378fea0f421ebc4978d448f7383f1a2816e6ca6e2894d610de7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102a95750600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161027a9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610230573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610254919061133d565b7f70fd2d99c63cf9e9a219a7907c6a0bc55a0323de6daf9c9d0b03e2d7250d73d2610de7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806103995750600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161036a9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610320573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610344919061133d565b7ff39d315320cdfe464ad36c5d26133acfadb3c7e2d9a6ac9e6bb331cb612f42a8610de7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806104895750600154604080517f0d59332e000000000000000000000000000000000000000000000000000000008152905161045a9273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa158015610410573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610434919061133d565b7fd573ac88b34a4d827762c3f1e7dc53ea2b602480271c42f976cd9097a3985a01610de7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152607b60248201527f535f5570646174655574696c69747950726f64756374696f6e53797374656d3a60448201527f204f6e6c79204275696c6453797374656d2c20537061776e53797374656d2c2060648201527f557067726164654275696c64696e6753797374656d2c2044657374726f79537960848201527f7374656d2063616e2063616c6c20746869732066756e6374696f6e000000000060a482015260c4015b60405180910390fd5b60008060008480602001905181019061057f919061135a565b9250925092506000610641600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b919061133d565b7f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5610de7565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916846040518263ffffffff1660e01b815260040161067b91815260200190565b602060405180830381865afa158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc9190611392565b9050600061077a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610730573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610754919061133d565b7fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e610de7565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916856040518263ffffffff1660e01b81526004016107b491815260200190565b602060405180830381865afa1580156107d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f591906113c4565b600154604080517fba62fbe4000000000000000000000000000000000000000000000000000000008152905192935073ffffffffffffffffffffffffffffffffffffffff888116936000936108bb9392169163ba62fbe49160048083019260209291908290030181865afa158015610871573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610895919061133d565b7fd984664f54fc6fda5470509ef9c0e55b1727f163cfff0999a19085f3302d89f3610de7565b60408051602080820188905263ffffffff871682840152825180830384018152606090920190925280519101209091506000906001546040517f4f27da180000000000000000000000000000000000000000000000000000000081527fe3a8010d924b064ccb2378dcbee6dbdeb5bbd9716eb2cffb16c3df92a53e8495600482015291925060009173ffffffffffffffffffffffffffffffffffffffff90911690634f27da1890602401602060405180830381865afa158015610982573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a6919061133d565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905290915060009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c916906024016040805180830381865afa158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a91906113df565b516040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c916906024016040805180830381865afa158015610aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acf91906113df565b6020015190506001896002811115610ae957610ae9611433565b03610bba5773ffffffffffffffffffffffffffffffffffffffff8516630ff4c916610b4b8a610b1960018c611491565b63ffffffff16604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040518263ffffffff1660e01b8152600401610b6991815260200190565b6040805180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906113df565b60200151610bb79082611491565b90505b60408051602080820185905281830189905282518083038401815260609092019092528051910120600090610bf0908590610f2b565b905060028a6002811115610c0657610c06611433565b03610c1c57610c158282611491565b9050610c29565b610c2682826114b5565b90505b6040805160208082018690528183018a905282518083038401815260608301808552815191909201207fd923c3c400000000000000000000000000000000000000000000000000000000909152606482015263ffffffff83166084820152905173ffffffffffffffffffffffffffffffffffffffff86169163d923c3c49160a480830192600092919082900301818387803b158015610cc757600080fd5b505af1158015610cdb573d6000803e3d6000fd5b50505050505050505050505050505050919050565b6060610d1e848484604051602001610d0a939291906114d2565b6040516020818303038152906040526100cf565b949350505050565b6000610d667f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ddb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610de48161105e565b50565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610e57573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e9d919081019061153b565b90508051600003610f0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161055d565b610d1e81600081518110610f2057610f206115e1565b602002602001015190565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015610f99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbd9190611610565b610fc8576000611057565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa158015611033573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105791906113c4565b9392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610de4928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561118857611188611112565b604052919050565b600060208083850312156111a357600080fd5b823567ffffffffffffffff808211156111bb57600080fd5b818501915085601f8301126111cf57600080fd5b8135818111156111e1576111e1611112565b611211847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611141565b9150808252868482850101111561122757600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561127057858101830151858201604001528201611254565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114610de457600080fd5b60038110610de457600080fd5b6000806000606084860312156112f357600080fd5b83356112fe816112af565b9250602084013591506040840135611315816112d1565b809150509250925092565b60006020828403121561133257600080fd5b8135611057816112af565b60006020828403121561134f57600080fd5b8151611057816112af565b60008060006060848603121561136f57600080fd5b835161137a816112af565b602085015160408601519194509250611315816112d1565b6000602082840312156113a457600080fd5b5051919050565b805163ffffffff811681146113bf57600080fd5b919050565b6000602082840312156113d657600080fd5b611057826113ab565b6000604082840312156113f157600080fd5b6040516040810181811067ffffffffffffffff8211171561141457611414611112565b60405282518152611427602084016113ab565b60208201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff8281168282160390808211156114ae576114ae611462565b5092915050565b63ffffffff8181168382160190808211156114ae576114ae611462565b73ffffffffffffffffffffffffffffffffffffffff8416815260208101839052606081016003831061152d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826040830152949350505050565b6000602080838503121561154e57600080fd5b825167ffffffffffffffff8082111561156657600080fd5b818501915085601f83011261157a57600080fd5b81518181111561158c5761158c611112565b8060051b915061159d848301611141565b81815291830184019184810190888411156115b757600080fd5b938501935b838510156115d5578451825293850193908501906115bc565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561162257600080fd5b8151801515811461105757600080fdfea2646970667358221220bf418c6dffedd42a5c8736fa88bac1e29f33605d39aeb5eae16dbfe47ffb8ad864736f6c63430008130033";

type S_UpdateUtilityProductionSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_UpdateUtilityProductionSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_UpdateUtilityProductionSystem__factory extends ContractFactory {
  constructor(...args: S_UpdateUtilityProductionSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_UpdateUtilityProductionSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_UpdateUtilityProductionSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_UpdateUtilityProductionSystem {
    return super.attach(address) as S_UpdateUtilityProductionSystem;
  }
  override connect(signer: Signer): S_UpdateUtilityProductionSystem__factory {
    return super.connect(signer) as S_UpdateUtilityProductionSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_UpdateUtilityProductionSystemInterface {
    return new utils.Interface(
      _abi
    ) as S_UpdateUtilityProductionSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_UpdateUtilityProductionSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_UpdateUtilityProductionSystem;
  }
}
