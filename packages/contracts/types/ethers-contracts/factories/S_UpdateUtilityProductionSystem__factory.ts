/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  S_UpdateUtilityProductionSystem,
  S_UpdateUtilityProductionSystemInterface,
} from "../S_UpdateUtilityProductionSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "buildingEntity",
        type: "uint256",
      },
      {
        internalType: "enum EActionType",
        name: "actionType",
        type: "uint8",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001563380380620015638339810160408190526200003491620001e0565b8181818162000043336200014d565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200021f565b600080546001600160a01b039283166001600160a01b0319918216811790925560018054938616938216841790557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805482169093179092557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a86805490921617905550505050505062000246565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114620001dd57600080fd5b50565b60008060408385031215620001f457600080fd5b82516200020181620001c7565b60208401519092506200021481620001c7565b809150509250929050565b6000602082840312156200023257600080fd5b81516200023f81620001c7565b9392505050565b61130d80620002566000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806327b450991461007a5780638da5cb5b1461008d578063f2fde38b146100ad575b600080fd5b61006461005f366004610eef565b6100c2565b6040516100719190610f84565b60405180910390f35b610064610088366004610ff4565b610957565b61009561098d565b6040516001600160a01b039091168152602001610071565b6100c06100bb366004611036565b6109c5565b005b6060610164600160009054906101000a90046001600160a01b03166001600160a01b0316630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e9190611053565b7f57247228bbd93ac6953378fea0f421ebc4978d448f7383f1a2816e6ca6e2894d610a1b565b6001600160a01b0316336001600160a01b031614806102285750600154604080516306ac999760e11b81529051610213926001600160a01b031691630d59332e9160048083019260209291908290030181865afa1580156101c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ed9190611053565b7f70fd2d99c63cf9e9a219a7907c6a0bc55a0323de6daf9c9d0b03e2d7250d73d2610a1b565b6001600160a01b0316336001600160a01b0316145b806102d85750600154604080516306ac999760e11b815290516102c3926001600160a01b031691630d59332e9160048083019260209291908290030181865afa158015610279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029d9190611053565b7ff39d315320cdfe464ad36c5d26133acfadb3c7e2d9a6ac9e6bb331cb612f42a8610a1b565b6001600160a01b0316336001600160a01b0316145b806103885750600154604080516306ac999760e11b81529051610373926001600160a01b031691630d59332e9160048083019260209291908290030181865afa158015610329573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034d9190611053565b7fd573ac88b34a4d827762c3f1e7dc53ea2b602480271c42f976cd9097a3985a01610a1b565b6001600160a01b0316336001600160a01b0316145b61044b5760405162461bcd60e51b815260206004820152607b60248201527f535f5570646174655574696c69747950726f64756374696f6e53797374656d3a60448201527f204f6e6c79204275696c6453797374656d2c20537061776e53797374656d2c2060648201527f557067726164654275696c64696e6753797374656d2c2044657374726f79537960848201527f7374656d2063616e2063616c6c20746869732066756e6374696f6e000000000060a482015260c4015b60405180910390fd5b6000806000848060200190518101906104649190611070565b925092509250600061050c600160009054906101000a90046001600160a01b03166001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e69190611053565b7f7562ebb298d855e68fb2922ace89e271e36c031fb473ee4be72f900215d523c5610a1b565b6001600160a01b0316630ff4c916846040518263ffffffff1660e01b815260040161053991815260200190565b602060405180830381865afa158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a91906110a8565b9050600061061e600160009054906101000a90046001600160a01b03166001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f89190611053565b7fbd262b900b9f3e3d6078d7a8e45d1bee5f4fd9547063f524ac4cbf611d37b44e610a1b565b6001600160a01b0316630ff4c916856040518263ffffffff1660e01b815260040161064b91815260200190565b602060405180830381865afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c91906110da565b60015460408051632e98bef960e21b815290519293506001600160a01b038881169360009361072c9392169163ba62fbe49160048083019260209291908290030181865afa1580156106e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107069190611053565b7fd984664f54fc6fda5470509ef9c0e55b1727f163cfff0999a19085f3302d89f3610a1b565b60408051602080820188905263ffffffff871682840152825180830384018152606090920190925280519101209091506000906040516307fa648b60e11b8152600481018290529091506000906001600160a01b03841690630ff4c916906024016040805180830381865afa1580156107a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cd91906110f5565b516040516307fa648b60e11b8152600481018490529091506000906001600160a01b03851690630ff4c916906024016040805180830381865afa158015610818573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083c91906110f5565b602001519050600188600281111561085657610856611149565b0361091a576001600160a01b038416630ff4c9166108ab8961087960018b611175565b63ffffffff16604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040518263ffffffff1660e01b81526004016108c991815260200190565b6040805180830381865afa1580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090991906110f5565b602001516109179082611175565b90505b600154610948906001600160a01b031686848460028d600281111561094157610941611149565b1415610af5565b50505050505050505050919050565b606061098584848460405160200161097193929190611199565b6040516020818303038152906040526100c2565b949350505050565b60006109c07f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b03163314610a0f57604051632f7a8ee160e01b815260040160405180910390fd5b610a1881610d3e565b50565b604051637defd0f560e11b81526004810182905260009081906001600160a01b0385169063fbdfa1ea90602401600060405180830381865afa158015610a65573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a8d91908101906111dc565b90508051600003610ad45760405162461bcd60e51b81526020600482015260116024820152701a59081b9bdd081c9959da5cdd195c9959607a1b6044820152606401610442565b61098581600081518110610aea57610aea611282565b602002602001015190565b604080516020808201869052818301879052825180830384018152606090920190925280519101206000906040516309e4fb4360e31b81527fe3a8010d924b064ccb2378dcbee6dbdeb5bbd9716eb2cffb16c3df92a53e849560048201529091506000906001600160a01b03881690634f27da1890602401602060405180830381865afa158015610b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bae9190611053565b90506000610bbc8284610d47565b90508315610c42576001600160a01b03821663d923c3c484610bde8885611298565b6040516001600160e01b031960e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b158015610c2257600080fd5b505af1158015610c36573d6000803e3d6000fd5b50505050505050610d37565b8463ffffffff168163ffffffff161015610cbc57604051633648f0f160e21b815260048101849052600060248201526001600160a01b0383169063d923c3c490604401600060405180830381600087803b158015610c9f57600080fd5b505af1158015610cb3573d6000803e3d6000fd5b50505050610d33565b6001600160a01b03821663d923c3c484610cd68885611175565b6040516001600160e01b031960e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b158015610d1a57600080fd5b505af1158015610d2e573d6000803e3d6000fd5b505050505b5050505b5050505050565b610a1881610e2e565b604051636667bd4760e11b8152600481018290526000906001600160a01b0384169063cccf7a8e90602401602060405180830381865afa158015610d8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db391906112b5565b610dbe576000610e27565b6040516307fa648b60e11b8152600481018390526001600160a01b03841690630ff4c91690602401602060405180830381865afa158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906110da565b9392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ee757610ee7610ea8565b604052919050565b60006020808385031215610f0257600080fd5b823567ffffffffffffffff80821115610f1a57600080fd5b818501915085601f830112610f2e57600080fd5b813581811115610f4057610f40610ea8565b610f52601f8201601f19168501610ebe565b91508082528684828501011115610f6857600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b81811015610fb157858101830151858201604001528201610f95565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0381168114610a1857600080fd5b60038110610a1857600080fd5b60008060006060848603121561100957600080fd5b833561101481610fd2565b925060208401359150604084013561102b81610fe7565b809150509250925092565b60006020828403121561104857600080fd5b8135610e2781610fd2565b60006020828403121561106557600080fd5b8151610e2781610fd2565b60008060006060848603121561108557600080fd5b835161109081610fd2565b60208501516040860151919450925061102b81610fe7565b6000602082840312156110ba57600080fd5b5051919050565b805163ffffffff811681146110d557600080fd5b919050565b6000602082840312156110ec57600080fd5b610e27826110c1565b60006040828403121561110757600080fd5b6040516040810181811067ffffffffffffffff8211171561112a5761112a610ea8565b6040528251815261113d602084016110c1565b60208201529392505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b63ffffffff8281168282160390808211156111925761119261115f565b5092915050565b6001600160a01b03841681526020810183905260608101600383106111ce57634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b600060208083850312156111ef57600080fd5b825167ffffffffffffffff8082111561120757600080fd5b818501915085601f83011261121b57600080fd5b81518181111561122d5761122d610ea8565b8060051b915061123e848301610ebe565b818152918301840191848101908884111561125857600080fd5b938501935b838510156112765784518252938501939085019061125d565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b63ffffffff8181168382160190808211156111925761119261115f565b6000602082840312156112c757600080fd5b81518015158114610e2757600080fdfea2646970667358221220d989bb98325725d4a6e67a62adf7c090f1bc869f103e3cdc70a9e11ad6ea172664736f6c63430008130033";

type S_UpdateUtilityProductionSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: S_UpdateUtilityProductionSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class S_UpdateUtilityProductionSystem__factory extends ContractFactory {
  constructor(...args: S_UpdateUtilityProductionSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<S_UpdateUtilityProductionSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<S_UpdateUtilityProductionSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): S_UpdateUtilityProductionSystem {
    return super.attach(address) as S_UpdateUtilityProductionSystem;
  }
  override connect(signer: Signer): S_UpdateUtilityProductionSystem__factory {
    return super.connect(signer) as S_UpdateUtilityProductionSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): S_UpdateUtilityProductionSystemInterface {
    return new utils.Interface(
      _abi
    ) as S_UpdateUtilityProductionSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): S_UpdateUtilityProductionSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as S_UpdateUtilityProductionSystem;
  }
}
