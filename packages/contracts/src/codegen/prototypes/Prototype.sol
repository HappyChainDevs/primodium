// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

/* Autogenerated file. Do not edit manually. */

import { IStore } from "@latticexyz/store/src/IStore.sol";
import { createPrototype } from "../../libraries/prototypes/createPrototype.sol";
import { ERock, EBuilding } from "../Types.sol";
import { P_Asteroid, P_AsteroidTableId } from "../Tables.sol";

bytes32 constant prototypeId = "";
bytes32 constant PrototypeId = prototypeId;
uint256 constant LENGTH = 1;

function Keys() pure returns (bytes32[] memory) {
  bytes32[] memory _keyTuple = new bytes32[](0);

  return _keyTuple;
}

function Prototype(IStore store) {
  bytes32[] memory keys = Keys();
  bytes32[] memory tableIds = new bytes32[](LENGTH);
  bytes[] memory values = new bytes[](LENGTH);

  tableIds[0] = P_AsteroidTableId;

  values[0] = P_Asteroid.encode(37, 25);

  createPrototype(store, keys, tableIds, values);
}
